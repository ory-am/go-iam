// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewRevokeUserClientConsentSessionsParams creates a new RevokeUserClientConsentSessionsParams object
// with the default values initialized.
func NewRevokeUserClientConsentSessionsParams() *RevokeUserClientConsentSessionsParams {
	var ()
	return &RevokeUserClientConsentSessionsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRevokeUserClientConsentSessionsParamsWithTimeout creates a new RevokeUserClientConsentSessionsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRevokeUserClientConsentSessionsParamsWithTimeout(timeout time.Duration) *RevokeUserClientConsentSessionsParams {
	var ()
	return &RevokeUserClientConsentSessionsParams{

		timeout: timeout,
	}
}

// NewRevokeUserClientConsentSessionsParamsWithContext creates a new RevokeUserClientConsentSessionsParams object
// with the default values initialized, and the ability to set a context for a request
func NewRevokeUserClientConsentSessionsParamsWithContext(ctx context.Context) *RevokeUserClientConsentSessionsParams {
	var ()
	return &RevokeUserClientConsentSessionsParams{

		Context: ctx,
	}
}

// NewRevokeUserClientConsentSessionsParamsWithHTTPClient creates a new RevokeUserClientConsentSessionsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRevokeUserClientConsentSessionsParamsWithHTTPClient(client *http.Client) *RevokeUserClientConsentSessionsParams {
	var ()
	return &RevokeUserClientConsentSessionsParams{
		HTTPClient: client,
	}
}

/*RevokeUserClientConsentSessionsParams contains all the parameters to send to the API endpoint
for the revoke user client consent sessions operation typically these are written to a http.Request
*/
type RevokeUserClientConsentSessionsParams struct {

	/*Client*/
	Client string
	/*User*/
	User string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the revoke user client consent sessions params
func (o *RevokeUserClientConsentSessionsParams) WithTimeout(timeout time.Duration) *RevokeUserClientConsentSessionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the revoke user client consent sessions params
func (o *RevokeUserClientConsentSessionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the revoke user client consent sessions params
func (o *RevokeUserClientConsentSessionsParams) WithContext(ctx context.Context) *RevokeUserClientConsentSessionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the revoke user client consent sessions params
func (o *RevokeUserClientConsentSessionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the revoke user client consent sessions params
func (o *RevokeUserClientConsentSessionsParams) WithHTTPClient(client *http.Client) *RevokeUserClientConsentSessionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the revoke user client consent sessions params
func (o *RevokeUserClientConsentSessionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClient adds the client to the revoke user client consent sessions params
func (o *RevokeUserClientConsentSessionsParams) WithClient(client string) *RevokeUserClientConsentSessionsParams {
	o.SetClient(client)
	return o
}

// SetClient adds the client to the revoke user client consent sessions params
func (o *RevokeUserClientConsentSessionsParams) SetClient(client string) {
	o.Client = client
}

// WithUser adds the user to the revoke user client consent sessions params
func (o *RevokeUserClientConsentSessionsParams) WithUser(user string) *RevokeUserClientConsentSessionsParams {
	o.SetUser(user)
	return o
}

// SetUser adds the user to the revoke user client consent sessions params
func (o *RevokeUserClientConsentSessionsParams) SetUser(user string) {
	o.User = user
}

// WriteToRequest writes these params to a swagger request
func (o *RevokeUserClientConsentSessionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param client
	if err := r.SetPathParam("client", o.Client); err != nil {
		return err
	}

	// path param user
	if err := r.SetPathParam("user", o.User); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
