// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ory/hydra/sdk/go/hydra/models"
)

// RevokeSubjectLoginCookieReader is a Reader for the RevokeSubjectLoginCookie structure.
type RevokeSubjectLoginCookieReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevokeSubjectLoginCookieReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 302:
		result := NewRevokeSubjectLoginCookieFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewRevokeSubjectLoginCookieNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewRevokeSubjectLoginCookieInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRevokeSubjectLoginCookieFound creates a RevokeSubjectLoginCookieFound with default headers values
func NewRevokeSubjectLoginCookieFound() *RevokeSubjectLoginCookieFound {
	return &RevokeSubjectLoginCookieFound{}
}

/*RevokeSubjectLoginCookieFound handles this case with default header values.

Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is
typically 201.
*/
type RevokeSubjectLoginCookieFound struct {
}

func (o *RevokeSubjectLoginCookieFound) Error() string {
	return fmt.Sprintf("[GET /oauth2/auth/sessions/login/revoke][%d] revokeSubjectLoginCookieFound ", 302)
}

func (o *RevokeSubjectLoginCookieFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRevokeSubjectLoginCookieNotFound creates a RevokeSubjectLoginCookieNotFound with default headers values
func NewRevokeSubjectLoginCookieNotFound() *RevokeSubjectLoginCookieNotFound {
	return &RevokeSubjectLoginCookieNotFound{}
}

/*RevokeSubjectLoginCookieNotFound handles this case with default header values.

genericError
*/
type RevokeSubjectLoginCookieNotFound struct {
	Payload *models.GenericError
}

func (o *RevokeSubjectLoginCookieNotFound) Error() string {
	return fmt.Sprintf("[GET /oauth2/auth/sessions/login/revoke][%d] revokeSubjectLoginCookieNotFound  %+v", 404, o.Payload)
}

func (o *RevokeSubjectLoginCookieNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeSubjectLoginCookieInternalServerError creates a RevokeSubjectLoginCookieInternalServerError with default headers values
func NewRevokeSubjectLoginCookieInternalServerError() *RevokeSubjectLoginCookieInternalServerError {
	return &RevokeSubjectLoginCookieInternalServerError{}
}

/*RevokeSubjectLoginCookieInternalServerError handles this case with default header values.

genericError
*/
type RevokeSubjectLoginCookieInternalServerError struct {
	Payload *models.GenericError
}

func (o *RevokeSubjectLoginCookieInternalServerError) Error() string {
	return fmt.Sprintf("[GET /oauth2/auth/sessions/login/revoke][%d] revokeSubjectLoginCookieInternalServerError  %+v", 500, o.Payload)
}

func (o *RevokeSubjectLoginCookieInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
