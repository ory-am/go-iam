// Code generated by go-bindata. DO NOT EDIT.
// sources:
// migrations/sql/mysql/.gitkeep
// migrations/sql/mysql/4.sql
// migrations/sql/mysql/5.sql
// migrations/sql/mysql/6.sql
// migrations/sql/mysql/7.sql
// migrations/sql/mysql/8.sql
// migrations/sql/postgres/.gitkeep
// migrations/sql/postgres/4.sql
// migrations/sql/postgres/5.sql
// migrations/sql/postgres/6.sql
// migrations/sql/postgres/7.sql
// migrations/sql/postgres/8.sql
// migrations/sql/shared/.gitkeep
// migrations/sql/shared/1.sql
// migrations/sql/shared/2.sql
// migrations/sql/shared/3.sql
// migrations/sql/tests/.gitkeep
// migrations/sql/tests/1_test.sql
// migrations/sql/tests/2_test.sql
// migrations/sql/tests/3_test.sql
// migrations/sql/tests/4_test.sql
// migrations/sql/tests/5_test.sql
// migrations/sql/tests/6_test.sql
// migrations/sql/tests/7_test.sql
// migrations/sql/tests/8_test.sql

package consent

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataMigrationsSqlMysqlGitkeep = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func bindataMigrationsSqlMysqlGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlMysqlGitkeep,
		"migrations/sql/mysql/.gitkeep",
	)
}

func bindataMigrationsSqlMysqlGitkeep() (*asset, error) {
	bytes, err := bindataMigrationsSqlMysqlGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/mysql/.gitkeep",
		size:        0,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831415, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlMysql4sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xd2\x41\x4b\x03\x31\x10\x05\xe0\xfb\xfe\x8a\xb9\xf5\x20\xbd\x78\x5d" +
		"\x3c\xac\x26\x82\x90\x36\xa5\x26\xa0\xa7\x30\x6c\x86\x6e\x40\x27\x9a\x66\x11\xff\xbd\xb4\x14\x29\x92\xd4\x56\xf7" +
		"\xb2\xec\xe9\x63\xde\x7b\x99\xcf\xe1\xea\x35\x6c\x12\x66\x02\xfb\xd6\x74\xca\xc8\x35\x98\xee\x56\x49\x18\x3e\x7d" +
		"\x42\x17\x71\xcc\xc3\xb5\xeb\x23\x6f\x89\xb3\x4b\xf4\x3e\xd2\x36\x43\x27\x04\x1c\xfe\xc9\x3b\xcc\x0e\x47\x1f\x88" +
		"\x7b\x02\x23\x9f\x0c\x2c\xad\x52\x6d\x5d\xdb\x7d\x89\x73\xe8\x31\x87\xc8\x13\xa1\x3f\x4e\x74\x03\xb2\x7f\x21\xbf" +
		"\x57\x37\x09\xf9\x84\xd9\xd8\x95\xe8\xcc\x2f\x91\x1f\xa5\x29\x5f\x77\x33\x9b\xb5\x45\xa1\x12\xf3\x72\xa8\x16\x6d" +
		"\x27\x15\xa2\xed\x9d\xf3\xb7\x5c\x68\xf1\x70\xff\x7c\xb2\x79\xfd\xd7\x49\x27\xb1\x6b\xf1\x0f\x78\x7d\xdc\x6f\xba" +
		"\x39\x7e\xe7\x22\x7e\xf0\xf9\xed\x88\xb5\x5e\xc1\x9d\x56\x76\xb1\x2c\xc7\xb8\xbc\x94\xff\x90\xb5\x2e\x8e\xcd\x42" +
		"\x21\x6d\xf3\x15\x00\x00\xff\xff\x99\xcd\x38\x04\xea\x03\x00\x00")

func bindataMigrationsSqlMysql4sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlMysql4sql,
		"migrations/sql/mysql/4.sql",
	)
}

func bindataMigrationsSqlMysql4sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlMysql4sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/mysql/4.sql",
		size:        1002,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlMysql5sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x93\x4f\x4b\xc4\x30\x10\xc5\xef\xf9\x14\x39\xba\xe8\x5e\xbc\xe6\x24" +
		"\xb6\x87\xbd\x74\x75\xb1\xe0\x2d\xa4\xc9\xac\x3b\xa2\x89\xe6\x8f\x7f\xbe\xbd\x54\x14\x43\xe9\xac\x89\x14\x4f\x85" +
		"\x32\xf3\xde\xcb\x8f\x37\xeb\x35\x3f\x7d\xc4\x3b\xaf\x22\xf0\xfe\x89\x5d\xee\xda\x8b\x9b\x96\xf7\xdd\xe6\xba\x6f" +
		"\xf9\xa6\x6b\xda\x5b\x7e\x78\x37\x5e\x49\xa7\x52\x3c\x9c\x4b\x37\xec\x53\xd0\x2a\x82\x91\xe3\x0f\xb0\x11\xb5\x8a" +
		"\xe8\xac\x0c\x10\xc2\xe7\xd7\x49\x34\x6f\x7c\xdb\x55\x2e\xf2\x13\xfd\x80\x60\xa3\x44\x73\xc6\x43\x1a\xee\x41\xc7" +
		"\x6c\x6b\x25\xd8\x77\xba\x99\x58\xda\xd9\x30\xee\x7a\x78\x4e\x10\xa2\xd4\x68\x66\x53\x4c\xe6\x32\xcf\x95\xa8\x90" +
		"\x0f\x69\x28\x93\xff\x7a\xc7\x8f\x38\x4d\x76\xea\xf1\x02\x1e\xcb\x4c\xc6\xc9\x3d\x82\x3f\x8e\x68\x42\xfd\x37\x52" +
		"\xf3\xe3\xa5\xc0\x08\x33\x8a\x1b\x65\x56\x81\x8f\x70\x24\x29\x52\x96\x39\xcc\xfc\x38\x1a\xf7\x6a\x59\xb3\xdb\x5e" +
		"\xfd\xef\x55\x08\x46\x9a\xfe\xb1\xf3\xa2\x58\xb0\xb0\xe5\xe5\x82\xa5\x95\x3e\xf2\xe8\x45\x5a\x4c\x27\x5e\xa4\xb7" +
		"\xd5\xf2\x95\x25\x15\xec\x23\x00\x00\xff\xff\x26\xc5\x0b\x30\xb6\x05\x00\x00")

func bindataMigrationsSqlMysql5sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlMysql5sql,
		"migrations/sql/mysql/5.sql",
	)
}

func bindataMigrationsSqlMysql5sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlMysql5sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/mysql/5.sql",
		size:        1462,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831415, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlMysql6sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09" +
		"\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x4f\xce\xcf\x2b\x4e\xcd" +
		"\x2b\x89\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x51\x70\x74\x71\x51\x48\x4c\x2e\x52\x08\x71\x8d\x08\x51\xf0\x0b\xf5\xf1\xb1" +
		"\xe6\x0a\x0d\x70\x71\x0c\x21\xa0\x2d\xd8\x35\x04\xa4\xcd\x56\x5d\xdd\x9a\x78\xbb\x7c\xfd\x5d\x3c\xdd\x22\x91\xac" +
		"\xf3\x87\x59\xc9\x85\xec\x7c\x97\xfc\xf2\x3c\xe2\x0d\x75\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x03\x99\x6c\xcd" +
		"\x05\x08\x00\x00\xff\xff\x40\xd9\xef\x84\x0a\x01\x00\x00")

func bindataMigrationsSqlMysql6sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlMysql6sql,
		"migrations/sql/mysql/6.sql",
	)
}

func bindataMigrationsSqlMysql6sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlMysql6sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/mysql/6.sql",
		size:        266,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831415, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlMysql7sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\xcf\x8f\xea\x36\x10\xbe\x23\xf1\x3f\xcc\x6d\x59\x75\xa1\x6a\xaf" +
		"\x4f\x3d\xe4\x81\xb7\x6f\xd5\x3c\x58\x85\xa0\xb6\x27\x64\x92\x81\x58\x35\x36\x8d\x1d\xb6\xfb\xdf\x57\x49\x9c\x1f" +
		"\x24\x10\x92\xc0\xee\xbb\x70\x20\xf6\xcc\x37\x9f\x3f\xcf\x8c\x67\x3c\x86\x9f\xf6\x6c\x17\x52\x8d\xb0\x3a\x0c\x07" +
		"\xc3\xc1\x78\x0c\x6e\xc0\x14\x78\x54\xc0\x06\x41\x44\x9c\xc3\x5b\x80\x02\x84\x84\x43\x88\x47\x26\x23\x05\x5c\xee" +
		"\x98\x00\x85\x4a\x31\x29\x00\xff\x63\x4a\xab\x27\x50\x12\x38\xea\x07\x05\x21\xee\xe5\x11\xc1\xc7\x2d\x8d\xb8\x1e" +
		"\x0e\x2c\xdb\x25\x0e\xb8\xd6\x57\x9b\x40\xf0\xee\x87\x74\x2d\x69\xa4\x83\x5f\xd7\xf1\x2f\x0a\xcd\x3c\xaa\x99\x14" +
		"\xeb\x10\xff\x8d\x50\x69\x48\xd7\x4f\x17\xf6\xea\xfb\x3c\xf5\xb5\x36\xbe\xd6\xcc\x87\x99\xb3\x78\x85\x19\x79\xb6" +
		"\x56\xb6\xfb\xe5\x26\xc8\x20\x43\x60\x5b\xd0\x01\xd5\xf9\x97\x80\x2a\xd8\x20\x0a\x13\x84\xdf\x27\x2c\x4f\x0a\x85" +
		"\x42\xdf\x3d\x1e\x1d\xa0\xd9\xee\x05\x94\x73\x14\x3b\x84\x37\xaa\xc0\x47\x8e\x1a\x7d\x18\xa9\x40\x46\xdc\x07\x21" +
		"\xb5\xf9\x2f\xd9\x62\xe0\x00\xd3\x0a\xf9\xf6\xf1\x36\xe0\x85\xe7\x73\xb8\xa7\xc6\x95\x31\xa0\x52\x6e\x0f\x92\x09" +
		"\x0d\x5a\x02\x15\x80\xfb\x83\x7e\x4f\x88\x17\x47\xca\x99\x6f\x0e\x26\xf3\x68\x22\x50\xa8\x63\xe8\x2c\xac\x79\xd5" +
		"\x12\xe6\x2b\xdb\x1e\x0e\x56\xaf\x33\xcb\xbd\x82\x7f\x49\xdc\x9a\x81\xdf\x92\xfd\xf0\xe7\x37\xe2\x10\x98\x2f\x5c" +
		"\x20\x7f\xbd\x2c\xdd\x25\x8c\x86\x03\x80\x25\xb1\xc9\xd4\x85\x5f\xe0\xd9\x59\x7c\x6f\xa5\xd5\xd4\x4e\x13\x8a\x49" +
		"\x1d\x41\x0b\xc3\x93\x7c\xfd\x70\xf0\x78\x33\xbd\x99\xba\x2f\xd0\x5b\x52\x63\x4f\x7e\x4b\x16\xee\x44\x70\x06\xb9" +
		"\x35\xc1\x27\x10\x5a\x58\x9e\x30\xbf\x44\xad\x5d\x96\x61\x8d\xd8\x0a\x8d\xc9\x57\x21\x81\x4b\xb1\xc3\x30\xcb\x26" +
		"\x23\x19\x26\xd7\x51\xe0\x11\xc3\x84\x63\x96\xde\xd9\x2d\x0b\x95\x86\x03\xa7\x1e\x3e\x9e\x1e\x01\xd5\xcd\x84\x5f" +
		"\x10\xdd\x0f\xe2\xfd\x82\x52\xef\x46\xff\x53\x96\xaa\x9e\x40\x6e\xb6\x91\xf2\x68\x9c\xd5\xcc\xfa\xfa\x99\x78\x9c" +
		"\xc5\x97\xe1\x2d\x60\x5e\x50\x3f\x8d\x7d\xa4\x74\x9c\x3e\x4d\x72\x1c\x0e\x66\xc4\x26\x2e\xe9\x7a\xb3\xcb\x44\x9e" +
		"\x23\xd1\x80\x68\xcf\x56\xba\xa1\x4c\x53\xfa\xcf\x84\xf9\x31\x1b\x17\x51\x56\xef\xde\xad\xf0\xaa\x97\xa8\x2f\xae" +
		"\xe2\xa4\x9a\x95\xd4\x1f\xe9\x55\x0f\xd7\xb0\x27\x0a\xfb\x46\x85\xcf\x31\x4b\x88\x54\xf8\x79\x5d\xcc\x2f\x7d\xaa" +
		"\xa4\xb2\xc2\xd2\x15\x3f\x9f\xd6\xa8\xf3\xb7\xbf\xbd\xde\x2a\xcc\xaf\x03\x83\xac\x1d\x4f\x8d\x72\x68\xe3\x67\x72" +
		"\xb1\x12\xd5\x24\x91\x2d\x6c\x14\xc0\x79\x9d\x7f\x58\x54\xcd\xee\x7a\x06\x97\x28\xc4\xf2\x74\x44\x39\x30\xe1\x33" +
		"\x0f\x55\x45\x36\x99\x58\x62\xe1\x9c\x42\x28\xf4\x93\x48\xc0\xa3\xca\xa3\x7e\xa6\x83\xbc\x71\x63\x21\x1c\x68\x18" +
		"\x5b\x18\xc5\x25\x21\x0b\xd0\xf4\x64\xc0\xb2\xf6\xd2\x6f\xdf\x9e\xe5\x14\x5b\xb3\x19\x4c\x17\xf3\xa5\xeb\x58\x2f" +
		"\x73\xb7\xd5\x9e\xa2\x1d\x59\x6f\xff\x81\xe7\x85\x43\x5e\x7e\x9f\xc3\x1f\xe4\x6f\x18\x15\xc4\x80\x43\x9e\x89\x43" +
		"\xe6\x53\xb2\x6c\x34\x5a\xde\xb2\x98\x83\x51\xca\xd4\x5a\x4e\xad\x19\xf9\xd2\xb9\xff\x6f\x15\x57\xf3\xd6\xdb\xc2" +
		"\x3b\x6f\xfb\x5a\x94\xd7\xea\x58\x25\x41\x14\x2d\x7d\xea\x35\x2b\x67\x2c\x7e\x7f\x30\xb1\x2b\x12\x49\xfb\x76\xbd" +
		"\x83\x0e\xf2\x94\x59\x27\x28\xfb\x72\x86\xa0\xf4\xdb\x28\xfe\x76\x87\x83\xee\x73\xc0\x9f\x8b\xfb\x7a\x71\x6b\x0a" +
		"\xe1\xea\xee\x8f\x89\x26\x11\xe2\xcb\xb6\xd6\xb5\x16\x39\xe6\x29\xd1\x1d\x55\x4a\x7a\x2c\xd1\x26\x3f\xed\x7e\x33" +
		"\xa9\x9e\xe6\xb2\x26\x29\xde\xef\x80\xab\xdd\x64\x8d\x99\xea\x82\xd6\xf7\xd8\x6c\x69\xe6\xed\x6b\xa4\x81\x35\x71" +
		"\x77\xf2\xa4\xae\x3e\x5b\xd9\xfe\xc0\xdf\xd3\xd6\xbf\xd4\xd9\x7f\xc8\x05\xfe\x6c\x9e\xe2\x37\x47\x1c\x4e\x2e\xb0" +
		"\x3c\x6a\xca\x95\x8c\xd5\x92\x3c\x69\x64\x3a\xaf\x48\xc6\x2a\x58\x79\xdc\xb3\xd2\xa8\x62\x83\x1e\x8d\x54\xc1\xa4" +
		"\x2f\x51\x25\x83\x0b\x8f\x86\x08\x74\x23\xa3\xb4\xd1\xea\x34\xae\xe8\x4c\xdf\xe5\x32\x51\xf9\x7e\x9f\x62\x51\xe5" +
		"\x30\x9f\xbd\xcd\xe4\x9b\xe8\x51\xf8\x93\x11\x4c\x19\x76\xe7\xd2\x7f\x43\x75\x6e\x76\xde\xa1\x3e\x27\x6c\xb4\x3e" +
		"\xe4\x6e\x31\x97\x13\x6c\x8f\x02\xd5\x2b\xc6\xb6\x3e\xaf\x17\x97\x66\xf7\xdd\xca\xcb\x47\xb2\x7c\x26\x17\x7d\x16" +
		"\xd9\x1d\x5d\xdf\x23\xce\x9a\x76\xc7\x63\x70\xf0\x88\xa1\xce\x66\xc3\xea\xde\x33\xef\x38\x71\x98\x51\x2b\x3c\x3c" +
		"\x74\x09\xf0\x13\xed\x16\x4f\xaf\x8a\xd9\xff\x03\x00\x00\xff\xff\xd8\x2f\x3b\xf3\x66\x18\x00\x00")

func bindataMigrationsSqlMysql7sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlMysql7sql,
		"migrations/sql/mysql/7.sql",
	)
}

func bindataMigrationsSqlMysql7sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlMysql7sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/mysql/7.sql",
		size:        6246,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831415, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlMysql8sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09" +
		"\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x07\x91\xa9\x79\x25\x99" +
		"\xc9\x89\x25\x99\xf9\x79\xf1\x45\xa9\x85\xa5\xa9\xc5\x25\xf1\x19\x89\x79\x29\x39\xa9\x29\x0a\x8e\x2e\x2e\x0a\xc9" +
		"\xf9\x79\x25\xa9\x15\x25\x0a\x21\xae\x11\x21\x0a\x7e\xa1\x3e\x3e\xd6\xb8\x8d\x4b\xce\xcf\x2b\x4e\xcd\x2b\x81\x99" +
		"\x83\x4b\x3f\x57\x68\x80\x8b\x63\x08\x69\x4e\x09\x76\x0d\x81\x19\x65\xab\x5e\x5d\xab\x6e\x8d\xd5\x10\x74\x07\x60" +
		"\xea\x22\x3b\x2c\x7c\xfd\x5d\x3c\xdd\x22\xd1\xbc\xe3\x4f\x72\x90\xe0\x37\x86\x0b\x39\xe2\x5c\xf2\xcb\xf3\xc8\x76" +
		"\xae\x4b\x90\x7f\x80\x82\xb3\xbf\x4f\xa8\xaf\x1f\xcc\x32\x12\x5c\x89\x55\x37\x20\x00\x00\xff\xff\xad\xee\x99\xb2" +
		"\x55\x02\x00\x00")

func bindataMigrationsSqlMysql8sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlMysql8sql,
		"migrations/sql/mysql/8.sql",
	)
}

func bindataMigrationsSqlMysql8sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlMysql8sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/mysql/8.sql",
		size:        597,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1555175700, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlPostgresGitkeep = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func bindataMigrationsSqlPostgresGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlPostgresGitkeep,
		"migrations/sql/postgres/.gitkeep",
	)
}

func bindataMigrationsSqlPostgresGitkeep() (*asset, error) {
	bytes, err := bindataMigrationsSqlPostgresGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/postgres/.gitkeep",
		size:        0,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlPostgres4sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xd0\xb1\x4a\xc6\x30\x10\xc0\xf1\x39\x7d\x8a\xdb\x3a\x48\x17\xd7\x4e" +
		"\xd1\xc4\x29\xb6\x52\x12\x70\x0b\x47\x73\xb4\x01\xbd\x68\x9a\x22\xbe\xbd\x28\x0e\x45\x5a\xa8\x7c\xdf\x12\x32\xfd" +
		"\xef\xee\xd7\x34\x70\xf3\x1a\xa7\x8c\x85\xc0\xbd\x55\xd2\x58\x3d\x80\x95\x77\x46\xc3\xfc\x19\x32\xfa\x84\x6b\x99" +
		"\x6f\xfd\x98\x78\x21\x2e\x3e\xd3\xfb\x4a\x4b\x01\xa9\x14\xfc\xfe\x29\x78\x2c\x1e\xd7\x10\x89\x47\x02\xab\x9f\x2d" +
		"\x74\xce\x18\x50\xfa\x41\x3a\x63\xa1\xae\xdb\xe3\xf0\xf7\x4b\x5c\xe2\x88\x25\x26\xbe\x7e\xff\xcf\xe2\x7e\x46\x0e" +
		"\x2f\x14\x7e\x06\x4c\x19\xf9\x5c\x5e\x08\x21\xaa\xad\x95\x4a\x1f\x7c\x5e\x4b\x0d\xfd\x13\xdc\xf7\xc6\x3d\x76\xfb" +
		"\x57\xfd\x1f\xe8\x92\xe4\x91\xc9\xb6\xb9\x63\xd3\x56\x5f\x01\x00\x00\xff\xff\x50\x71\xaa\x54\x2e\x02\x00\x00")

func bindataMigrationsSqlPostgres4sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlPostgres4sql,
		"migrations/sql/postgres/4.sql",
	)
}

func bindataMigrationsSqlPostgres4sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlPostgres4sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/postgres/4.sql",
		size:        558,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlPostgres5sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x3d\x4f\xc3\x30\x10\x86\xf7\xfc\x0a\x8f\x54\xd0\x85\x35\x13\x22" +
		"\x19\xba\xa4\x50\x11\x89\xcd\x72\xec\x2b\x3d\x04\x36\xf8\xce\x7c\xfc\x7b\x14\xd4\xaa\x51\x94\x0b\x8e\x98\x22\x45" +
		"\xf7\xde\xf3\xe6\x89\xbd\x5e\xab\xcb\x57\x7c\x8a\x86\x41\xb5\x6f\xc5\xed\xae\xbe\x79\xa8\x55\xdb\x6c\xee\xdb\x5a" +
		"\x6d\x9a\xaa\x7e\x54\x87\x6f\x17\x8d\x0e\x26\xf1\xe1\x5a\x87\x6e\x9f\xc8\x1a\x06\xa7\xfb\x17\xe0\x19\xad\x61\x0c" +
		"\x5e\x13\x10\xfd\x3e\x83\x46\xf7\xa5\xb6\xcd\xc2\xa0\xba\xb0\x2f\x08\x9e\x35\xba\x2b\x45\xa9\x7b\x06\xcb\x83\xd4" +
		"\xaa\x2c\x4e\xed\x26\x6a\xd9\xe0\xa9\xcf\x46\x78\x4f\x40\xac\x2d\xba\xc9\x16\xa3\xb9\x01\x73\x55\x2e\x58\x4f\xa9" +
		"\xcb\x5b\x7f\xfc\x8e\xf3\x72\xd9\xec\x98\xf1\x01\x11\xf3\x20\xfd\xe4\x1e\x21\xce\x2b\x1a\x59\xff\xcb\xd4\xf4\x78" +
		"\xae\x30\x01\x26\x79\x93\x60\x0b\xf4\x09\x44\xd1\xa2\x84\x1c\xca\x1c\x5e\x8e\x2a\x7c\xfa\xa2\xda\x6d\xef\xfe\x73" +
		"\x2b\xca\x42\x5c\x21\x9c\xe0\x32\x3b\x70\x74\x9b\x1f\x38\xa9\x99\x29\x35\x7f\x66\x64\xd4\xfc\xef\x5f\x9c\x3b\x37" +
		"\xfd\x09\x00\x00\xff\xff\xa9\xd8\x35\xfe\xaf\x04\x00\x00")

func bindataMigrationsSqlPostgres5sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlPostgres5sql,
		"migrations/sql/postgres/5.sql",
	)
}

func bindataMigrationsSqlPostgres5sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlPostgres5sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/postgres/5.sql",
		size:        1199,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlPostgres6sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09" +
		"\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x4f\xce\xcf\x2b\x4e\xcd" +
		"\x2b\x89\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x51\x70\x74\x71\x51\x48\x4c\x2e\x52\x08\x71\x8d\x08\x51\xf0\x0b\xf5\xf1\x51" +
		"\x70\x71\x75\x73\x0c\xf5\x09\x51\x50\x57\xb7\xe6\xe2\x42\x36\xd6\x25\xbf\x3c\x8f\x78\x83\x5d\x82\xfc\x03\x14\x9c" +
		"\xfd\x7d\x42\x7d\xfd\x40\x16\x58\x73\x01\x02\x00\x00\xff\xff\x9e\x91\x43\x31\xa2\x00\x00\x00")

func bindataMigrationsSqlPostgres6sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlPostgres6sql,
		"migrations/sql/postgres/6.sql",
	)
}

func bindataMigrationsSqlPostgres6sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlPostgres6sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/postgres/6.sql",
		size:        162,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlPostgres7sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\xcd\x8f\xe2\x36\x14\xbf\x23\xf1\x3f\x3c\xa9\x87\x61\xd4\x61\xda" +
		"\xdd\x5b\xbb\xea\x81\x05\x4f\x77\x54\x16\x56\x21\xa8\xed\x09\x99\xe4\x41\xac\x1a\x9b\xc6\x0e\xd3\xf9\xef\xab\x38" +
		"\xce\x07\x09\x84\x24\x30\xb3\x97\x1c\x62\xfb\x7d\xfc\xfc\x7b\x1f\x7e\xc3\x21\xfc\xb8\x63\xdb\x90\x6a\x84\xe5\xbe" +
		"\xdf\xeb\xf7\x86\x43\x70\x03\xa6\xc0\xa3\x02\xd6\x08\x22\xe2\x1c\x5e\x02\x14\x20\x24\xec\x43\x3c\x30\x19\x29\xe0" +
		"\x72\xcb\x04\x28\x54\x8a\x49\x01\xf8\x1f\x53\x5a\x3d\x80\x92\xc0\x51\xdf\x29\x08\x71\x27\x0f\x08\x3e\x6e\x68\xc4" +
		"\x75\xbf\x37\x9a\xba\xc4\x01\x77\xf4\x79\x4a\x20\x78\xf5\x43\xba\x92\x34\xd2\xc1\xc7\x55\xfc\x45\xa1\x99\x47\x35" +
		"\x93\x62\x15\xe2\xbf\x11\x2a\x0d\xc9\xfe\xf1\x7c\xba\xfc\x3a\x4b\x74\xad\xac\xae\x15\xf3\x61\xe2\xcc\xbf\xc1\x84" +
		"\x3c\x8d\x96\x53\xf7\xd3\x55\x26\x83\x0c\x81\x6d\x40\x07\x54\x67\x2b\x01\x55\xb0\x46\x14\xd6\x09\xbf\x8b\x5b\x9e" +
		"\x14\x0a\x85\xbe\xb9\x3f\x3a\x40\x7b\xdc\x0b\x28\xe7\x28\xb6\x08\x2f\x54\x81\x8f\x1c\x35\xfa\x30\x50\x81\x8c\xb8" +
		"\x0f\x42\x6a\xfb\xcf\x1c\xb1\xe6\x00\xd3\x0a\xf9\xe6\xfe\x3a\xc3\x73\xcd\xa7\xec\x1e\x5b\x55\x56\x80\x4a\xb0\xdd" +
		"\x4b\x26\x34\x68\x09\x54\x00\xee\xf6\xfa\xd5\x00\x2f\x0e\x94\x33\xdf\x5e\x4c\xaa\xd1\x7a\xa0\x50\xc7\xa6\xb3\xb0" +
		"\xa2\x55\x4b\x98\x2d\xa7\xd3\x7e\x6f\xf9\x6d\x32\x72\x2f\xd8\xbf\x20\x6e\x45\xc0\x6f\xe6\x3c\xfc\xf9\x85\x38\x04" +
		"\x66\x73\x17\xc8\x5f\xcf\x0b\x77\x01\x83\x7e\x0f\x60\x41\xa6\x64\xec\xc2\x07\x78\x72\xe6\x5f\x1b\x71\x35\x91\x53" +
		"\x67\xc5\x63\xd5\x82\x06\x82\x1f\xb3\xfd\xfd\xde\xfd\xd5\xf0\xa6\xec\x3e\x03\x6f\x81\x8d\x1d\xf1\x2d\x48\xb8\x11" +
		"\xc0\xa9\xc9\x8d\x01\x3e\x32\xa1\x81\xe4\x47\xe6\x17\xa0\x9d\x16\x69\x58\x01\xb6\x04\xa3\x59\x15\x12\xb8\x14\x5b" +
		"\x0c\xd3\x6c\x32\x90\xa1\x09\x47\x81\x07\x0c\x0d\xc6\x2c\x89\xd9\x0d\x0b\x95\x86\x3d\xa7\x1e\xde\x1f\x5f\x01\xd5" +
		"\xf5\x80\x9f\x21\xdd\x77\xc2\xfd\x0c\x53\x6f\x06\xff\x43\x9a\xaa\x1e\x40\xae\x37\x91\xf2\x68\x9c\xd5\xec\xfe\xea" +
		"\x9d\x78\x9c\xc5\xc1\xf0\x12\x30\x2f\xa8\xde\xc6\x2e\x52\x3a\x4e\x9f\x36\x39\xf6\x7b\x13\x32\x25\x2e\x69\x1b\xd9" +
		"\x45\x20\x4f\x81\x68\x8d\x68\x8e\x56\x72\xa0\x08\x53\xf2\xe7\x91\xf9\x31\x1a\x67\xad\x2c\xc7\xde\xb5\xe6\x95\x83" +
		"\xa8\xab\x5d\xf9\x4d\xd5\x33\xa9\xbb\xa5\x17\x35\x5c\xb2\xdd\x30\xec\x0b\x15\x3e\xc7\x34\x21\x52\xe1\x67\x75\x31" +
		"\x0b\xfa\x84\x49\x45\x86\x25\x3b\x7e\x3a\xae\x51\xa7\xa3\xbf\x39\xdf\x4a\xc8\xaf\x02\x6b\x59\x33\x9c\x6a\xe9\xd0" +
		"\x44\xcf\xe3\xd9\x4a\x54\xa1\x44\xba\xb1\x96\x00\xa7\x79\xfe\x66\x5e\xd5\xab\xeb\xe8\x9c\x61\xc8\xc8\xd3\x11\xe5" +
		"\xc0\x84\xcf\x3c\x54\xc7\x9d\x58\xa4\xd0\x87\x1f\x3e\x7c\xfc\xf9\x97\x5f\xcd\xef\x38\x03\xa7\x19\x2f\xc4\x3d\xcf" +
		"\xcc\x91\x3c\xd6\x6c\x7f\x95\xb9\x97\x32\x2e\x66\xdf\xb1\x1f\x39\x09\x0d\x8f\x3c\xaa\x3c\xea\xa7\x64\xca\xba\x3f" +
		"\x16\xc2\x9e\x86\xb1\x84\x41\x5c\x57\x52\x94\x6c\x63\x07\x2c\xed\x51\xfd\xe6\x3d\x5e\x76\x4f\xa3\xc9\x04\xc6\xf3" +
		"\xd9\xc2\x75\x46\xcf\x33\xb7\xd1\x99\xbc\xa7\x59\x6d\xfe\x81\xa7\xb9\x43\x9e\x7f\x9f\xc1\x1f\xe4\x6f\x18\xe4\xe8" +
		"\x82\x43\x9e\x88\x43\x66\x63\xb2\xa8\x15\x5a\x3c\x32\x9f\x81\xa5\xdb\x78\xb4\x18\x8f\x26\xe4\x53\xeb\x47\x44\x23" +
		"\xbf\xea\x8f\x5e\xe7\xde\x69\xd9\x97\xbc\xbc\x54\x0c\x4b\x59\x26\x7f\x17\x24\x5a\xd3\x9a\xc8\xe2\x47\x0c\x13\xdb" +
		"\x3c\x1b\x35\xef\xf9\x5b\xf0\x20\xcb\xbb\x55\x80\xd2\x95\x13\x00\x25\x6b\x83\x78\xed\x06\x17\xdd\xe5\x82\xdf\xd7" +
		"\xee\xcb\x15\xb2\xce\x85\x8b\xa7\xdf\xc6\x1b\x43\xc4\xe7\x4d\xa5\xf5\xcd\x73\xcc\x83\xe1\x1d\x55\x4a\x7a\xcc\x70" +
		"\x93\x1f\xb7\xd0\x29\x55\x8f\x73\x59\x1d\x15\x6f\x77\xc1\xe5\x96\xb4\x82\x4c\x79\x43\xe3\x38\xb6\x47\xea\x71\xfb" +
		"\x1c\x69\x60\x75\xd8\x1d\xbd\xcb\xcb\x6f\x5f\xb6\xdb\xf3\xd7\xe4\xfd\x50\x78\x1e\xbc\x49\x00\xbf\x37\x4e\x71\xd9" +
		"\x8c\xdd\xc9\x08\x96\x79\x4d\xb9\x92\x31\x5b\xcc\xbb\x48\x26\x43\x0f\x33\x9b\xc1\xd2\x84\x80\x15\xe6\x1d\x6b\x34" +
		"\x95\x39\x43\xd2\x97\xa8\xcc\xf4\xc3\xa3\x21\x02\x5d\xcb\x28\xe9\xd6\x5a\xcd\x3c\x5a\xc3\x77\xbe\x4c\x94\xd6\x6f" +
		"\x53\x2c\xca\x18\x76\xeb\x50\x4a\x83\x9b\x6c\x0a\x38\x91\x2f\xa2\x43\xf7\x60\x86\x41\xd7\xb4\x0f\x57\x54\xf8\x5a" +
		"\xdd\x2d\x4a\xbc\xc1\xa2\x31\x4f\x5a\x79\x5c\x4c\xd1\x1d\x4a\x5c\x17\x0f\x9b\xaa\xbc\x5c\x9d\x6a\xb5\xb7\x2b\x4f" +
		"\x6f\x08\xf1\x89\x54\xf6\x4e\x48\xb7\xd4\x7c\x03\x2f\x2b\xac\x1d\x0e\xc1\xc1\x03\x86\x3a\x9d\x4e\xab\x5b\x4f\xdd" +
		"\xe3\x74\x62\x73\x06\xdc\xdd\xb5\xf1\xef\x1d\xe5\xe6\x8f\xbf\x92\xd8\xff\x03\x00\x00\xff\xff\x76\x42\xfd\x72\xe8" +
		"\x18\x00\x00")

func bindataMigrationsSqlPostgres7sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlPostgres7sql,
		"migrations/sql/postgres/7.sql",
	)
}

func bindataMigrationsSqlPostgres7sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlPostgres7sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/postgres/7.sql",
		size:        6376,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlPostgres8sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xb1\xca\xc2\x30\x14\x85\xf7\x3e\xc5\xdd\x3a\xfc\x74\xf9\x57\xa7" +
		"\x68\xe2\x14\x5b\x29\x37\xe0\x16\x42\x7b\xb1\x05\xbd\xd1\xf4\x16\x15\xf1\xdd\xc5\xa1\xe0\xa0\xa0\x2e\x67\x3b\xdf" +
		"\x39\x5f\x51\xc0\xdf\xbe\xdf\xa6\x20\x04\xee\x90\x29\x8b\xa6\x06\x54\x73\x6b\xa0\xbb\xb4\x29\xf8\x18\x46\xe9\xfe" +
		"\xfd\x23\x89\xa5\x6f\x82\xf4\x91\x7d\xa2\xe3\x48\x83\xf8\x2e\x70\xbb\xa3\x16\x94\xd6\xd0\x44\x16\x3a\x0b\xa0\xd9" +
		"\x20\x94\x15\x42\xe9\xac\x05\x6d\x96\xca\x59\x84\xfc\x7a\xcb\x67\xef\xf9\x4d\xe4\x81\x58\x26\xf0\xc7\xc0\xec\x59" +
		"\x40\xc7\x13\xff\xac\xa0\xeb\x6a\x0d\x8b\xca\xba\x55\x39\x2d\x7f\xf1\xf7\x65\xfb\x1e\x00\x00\xff\xff\xd0\x54\x7b" +
		"\xf3\x5d\x01\x00\x00")

func bindataMigrationsSqlPostgres8sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlPostgres8sql,
		"migrations/sql/postgres/8.sql",
	)
}

func bindataMigrationsSqlPostgres8sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlPostgres8sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/postgres/8.sql",
		size:        349,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1555175700, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlSharedGitkeep = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func bindataMigrationsSqlSharedGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlSharedGitkeep,
		"migrations/sql/shared/.gitkeep",
	)
}

func bindataMigrationsSqlSharedGitkeep() (*asset, error) {
	bytes, err := bindataMigrationsSqlSharedGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/shared/.gitkeep",
		size:        0,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlShared1sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\x41\x8f\xda\x30\x10\x85\xcf\xce\xaf\x98\x23\xa8\xac\x54\xad\xba" +
		"\xa7\x3d\xd1\x42\xa5\xaa\x14\x56\x08\x54\xed\xc9\x32\xf6\x40\xdc\x4d\x6c\x6a\x3b\x4b\xfb\xef\xab\x84\x04\x88\x93" +
		"\x98\x2c\x5d\xae\xbc\x19\xcf\xbc\xef\xd9\xb9\xbb\x83\x0f\xa9\xdc\x19\xe6\x10\xd6\xfb\xe8\xcb\x72\x3a\x5e\x4d\x61" +
		"\x35\xfe\x3c\x9b\x42\xfc\x57\x18\x46\x35\xcb\x5c\x7c\x4f\xb9\x56\x16\x95\xa3\x06\x7f\x67\x68\x1d\x0c\x22\xc2\x63" +
		"\x96\x24\xa8\x76\x08\x40\x08\x01\x78\x65\x86\xc7\xcc\x0c\x3e\x7d\x1c\xc2\x7c\xb1\x82\xf9\x7a\x36\x83\xa7\xe5\xb7" +
		"\x1f\xe3\xe5\x33\x7c\x9f\x3e\x8f\x22\xf2\x8a\x46\x6e\x25\x1a\x38\xfd\xda\x8a\x46\x11\xe1\x89\xcc\x4f\x93\xa2\xe8" +
		"\x7c\x96\xdd\x3f\x3c\xd4\x74\x36\xdb\xfc\x42\xee\xc8\x15\x59\x39\x35\xcd\x4c\x52\x28\x1d\xfe\x71\xb5\x36\x2f\x72" +
		"\x5f\xf5\x00\xd8\x68\x9d\xb4\x54\xa3\xa0\x96\xeb\x3d\x12\xe2\x97\x73\x6b\xb6\xe7\xf2\x8e\x95\x72\x1f\x51\x39\xc9" +
		"\x59\xde\x89\x39\xe2\x64\x8a\xd6\xb1\x74\xdf\x3c\x87\xb9\xdc\xd3\x0b\x41\x65\xe7\x64\xfa\x75\xbc\x9e\xad\x40\xe9" +
		"\xc3\x60\x38\x8a\x88\x96\x82\xe7\x6c\xf2\x89\x1a\x8b\x45\xc3\xc7\x00\xd1\x8b\x79\xa4\x56\xff\x09\xf6\xaa\x45\x27" +
		"\xf2\x1e\x29\x9f\x7b\x1f\x27\x6f\x81\x0e\xd0\x18\x29\x0c\xbd\x6f\x02\x6f\x80\x76\x3d\x09\xef\x87\xd5\xa2\xb5\x52" +
		"\xab\x1c\xab\x14\xc7\x4d\x03\x04\x3c\xaa\xfe\xa0\x00\x81\xed\xe6\x8b\x9f\xc5\x76\x25\x1d\xff\x98\x9a\x6f\xe1\x15" +
		"\xbc\xb7\x86\xc6\x4c\x89\x04\x45\x33\x9a\x7d\xf7\xd8\x19\xa6\x2e\xb2\x59\x94\xf9\x69\x30\x98\x62\xba\x41\x13\x7a" +
		"\x06\x8e\x0a\xba\xd5\xa6\x14\x49\x55\xeb\x81\xc6\x14\x7f\x55\x1d\xda\x4e\xa9\xa7\x85\x04\x2d\xad\x02\x53\x42\xa4" +
		"\x8c\x73\xb4\x96\x3a\xfd\x82\xaa\x25\xcf\xa5\x4a\x8a\x4a\xd1\xf2\xd2\x35\xb2\x57\x9f\xe0\x28\x3a\x30\x4b\x33\x8b" +
		"\x02\x3a\xcc\xb8\xe5\x61\xe9\xa6\xd8\x13\xa2\x97\xab\xd0\x8d\x3c\x91\xec\x03\x32\xc4\xb1\x0b\x23\xe3\x6f\xc3\xdc" +
		"\x8b\x72\x03\xcd\x15\x32\x1d\x60\xa2\xcb\x6f\xfa\x44\x1f\x54\x34\x59\x2e\x9e\x7a\xdc\xb3\xc7\x4e\x61\x3b\xd1\xde" +
		"\xfa\x32\x98\xdd\xfa\x8e\x0b\xff\xd6\x81\xce\x75\xff\x02\x00\x00\xff\xff\x5a\xbe\x93\x31\xd7\x08\x00\x00")

func bindataMigrationsSqlShared1sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlShared1sql,
		"migrations/sql/shared/1.sql",
	)
}

func bindataMigrationsSqlShared1sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlShared1sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/shared/1.sql",
		size:        2263,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlShared2sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd1\x41\x4f\xf3\x20\x18\x07\xf0\x33\x7c\x8a\xe7\xb6\x2d\xef\x76\x59" +
		"\xb2\x53\x4f\xbc\x2d\x46\x23\x5b\x17\xd2\x9a\xec\x44\x18\x50\x8b\x99\xa0\x40\x35\x7e\x7b\xd3\xa5\x73\xc6\xd8\x64" +
		"\x99\x3d\xf4\xf4\xe7\xf9\xc1\xf3\x5f\x2c\xe0\xdf\xb3\x7d\x0c\x32\x19\xa8\x5f\x30\x61\x15\xe5\x50\x91\xff\x8c\x42" +
		"\xfb\xa1\x83\x14\x5e\x76\xa9\x5d\x0a\xe5\x5d\x34\x2e\x89\x60\x5e\x3b\x13\x13\x90\xa2\x80\xc6\x07\x65\xb4\x88\xdd" +
		"\xfe\xc9\xa8\x24\xac\x36\x2e\xd9\xc6\x9a\x00\x0f\x84\xe7\xb7\x84\x4f\x97\xab\xd5\x0c\x36\x35\x63\x50\xd0\x1b\x52" +
		"\xb3\x0a\x26\x93\x6c\x1c\xe9\xff\xfd\x0c\x25\x93\xf5\xee\x64\x89\x56\x3a\x7d\x30\xfa\x4f\x66\xce\x29\xa9\xe8\x6f" +
		"\xa8\xdf\x37\x5d\x54\x32\x19\xfd\xd3\x8f\x26\x46\xeb\x1d\x4c\x31\x1a\x3c\x00\x84\x10\x0c\xdf\x9b\x0c\xaa\x95\x61" +
		"\x00\xcb\xea\x88\xce\x31\x52\x07\xdb\x6f\xca\xea\x73\x78\x2c\x7a\x7a\xc6\xf9\x0e\x68\x3c\xbc\xe5\x77\x6b\xc2\x77" +
		"\x70\x4f\x77\xd3\xe1\xe0\x1c\xbe\xb0\x19\x9e\x65\x18\x7f\xaf\xb3\xf0\xef\xee\xf2\x42\x0b\x5e\x6e\x21\x2f\x59\xbd" +
		"\xde\x8c\x2f\xf9\xfa\xee\x2e\x1c\x7f\x8c\x5d\x53\x52\x86\x3f\x03\x00\x00\xff\xff\x48\xef\x86\x01\xca\x02\x00\x00" +
		"")

func bindataMigrationsSqlShared2sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlShared2sql,
		"migrations/sql/shared/2.sql",
	)
}

func bindataMigrationsSqlShared2sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlShared2sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/shared/2.sql",
		size:        714,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlShared3sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xb1\xca\xc2\x30\x14\x46\xe7\xf4\x29\xee\xd6\xff\x47\x0a\x22\x6e" +
		"\x4e\xb1\xa9\x38\xc4\x56\x42\xe3\x1a\x42\x7b\x69\x03\x35\xd1\x26\x45\x7c\x7b\xe9\x22\x42\x41\x6c\x97\x3b\x9e\x7b" +
		"\xbe\x93\x24\xb0\xba\x9a\xa6\xd7\x01\x41\xde\x22\xca\xcb\x4c\x40\x49\xf7\x3c\x83\xf6\x59\xf7\x5a\x39\x3d\x84\x76" +
		"\xa3\x2a\x67\x3d\xda\xa0\x7a\xbc\x0f\xe8\x03\x50\xc6\xa0\x73\x8d\xb1\xca\xa3\xf7\xc6\x59\x65\x6a\xb8\x50\x91\x1e" +
		"\xa9\xf8\xdb\xae\xff\x21\x97\x9c\x03\xcb\x0e\x54\xf2\x12\xe2\x78\xb7\x04\x5d\xb5\xba\xeb\xd0\x36\xb8\x90\x3c\x5e" +
		"\xb4\xc1\x54\x3a\x8c\x86\xcb\xdd\x09\x21\x24\xfa\x4c\xc5\xdc\xc3\xfe\xbe\x88\x89\xe2\x0c\x69\xc1\xe5\x29\x9f\x3c" +
		"\x9e\x11\x66\x8a\x79\x07\x9a\x1f\xe1\xbb\xd3\x2b\x00\x00\xff\xff\xb0\x4c\xb3\x00\x17\x02\x00\x00")

func bindataMigrationsSqlShared3sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlShared3sql,
		"migrations/sql/shared/3.sql",
	)
}

func bindataMigrationsSqlShared3sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlShared3sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/shared/3.sql",
		size:        535,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTestsGitkeep = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func bindataMigrationsSqlTestsGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTestsGitkeep,
		"migrations/sql/tests/.gitkeep",
	)
}

func bindataMigrationsSqlTestsGitkeep() (*asset, error) {
	bytes, err := bindataMigrationsSqlTestsGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/.gitkeep",
		size:        0,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests1testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\xcf\x4f\xfb\x36\x14\x3f\x7f\xfb\x57\x58\x5c\x52\x34\x97\xd2\x4e" +
		"\x70\x60\xa7\x49\xe3\x80\x34\x81\x34\x60\x3b\x4c\x93\xe5\xda\x2f\x89\xa9\xeb\x97\xf9\x39\x0b\x1d\xe5\x7f\x9f\x1c" +
		"\x27\x4d\x28\x15\x83\x9d\x77\x89\xde\x4f\xfb\x7d\x3e\xef\x3d\x67\x36\x63\xdf\x6d\x4c\xe1\x65\x00\xf6\x58\x4d\x26" +
		"\x37\xb7\xf7\xd7\xbf\x3c\xb0\x9b\xdb\x87\x3b\x56\x6e\xb5\x97\x42\x59\x03\x2e\xb0\xa9\xd1\x9c\x49\x6b\xb1\x01\x2d" +
		"\x14\x7a\x12\xe8\x4d\x61\x1c\x71\x96\x22\x84\x93\x1b\xd8\x2b\x04\xca\x43\xe0\xcc\x83\x36\x1e\x54\x10\xb5\x37\xc4" +
		"\x59\xe1\xa5\x0b\x22\x6c\x2b\xa0\xe8\xa3\x0a\x1d\x41\xaf\x93\xc2\x0a\x38\xc3\xc6\x81\xe7\xac\x42\x6b\xd4\x36\xe6" +
		"\x71\x16\x90\x92\xd0\x9d\xde\xca\x16\x0b\xec\xac\xe8\x82\x54\x81\x0e\x6e\x17\xf0\x5c\x19\x0f\x24\x64\xe0\x8c\x40" +
		"\x05\xf4\xc2\x68\x70\xc1\xe4\x06\x7c\x4a\x7d\x6a\xd6\x94\xbe\xfd\x4d\x6b\x70\x02\x9c\xae\xd0\xb8\x20\x64\x1d\x4a" +
		"\xb1\x81\x50\xa2\x8e\xf5\xfe\x59\x03\xf5\x50\x7a\x0d\x57\x4f\x11\x1f\x99\xc2\x19\x57\x08\x69\x0b\xce\x6a\x02\x6f" +
		"\x5c\x8e\xad\x15\xb4\xd8\x23\x6d\xbd\x54\xa7\x94\x08\x9b\x33\x59\x6b\x03\x4e\xc1\xe9\xe4\xd7\x1f\x7f\x7e\xbc\xbe" +
		"\x9f\x30\x36\xcd\x16\xb3\x84\x24\xe3\x2c\x2b\x43\xa8\xae\xe6\x73\x8b\x4a\xda\x12\x29\xec\x3a\x43\x81\x58\x58\x88" +
		"\x11\x84\x1b\x18\x25\xc8\x95\xd2\x90\x7f\x2e\x35\x02\x44\x6f\xfe\x06\xa1\x50\xc3\xce\x6c\x2a\x6b\x94\x69\x8f\x69" +
		"\xa9\xd8\x19\x2d\x5a\x21\x5a\x72\xc4\xdd\x4a\xfa\x36\x0f\x1c\x48\x1a\xdd\x91\xda\x35\x32\x04\x1c\xbb\x8f\xc0\x29" +
		"\x70\x38\x68\x97\x63\xd4\xce\x07\x7f\xea\x57\x8c\x78\x39\x59\xc3\x96\x4e\xae\xd8\xef\x7f\xbc\x8e\x0e\x88\x3d\x8b" +
		"\xaa\x43\x07\x23\x73\xed\xcd\x62\x37\xc8\xcb\xe8\xf2\xb4\xbc\xb8\x4c\xc2\xc5\xb2\x15\xaa\x7a\x65\x8d\xea\xd3\xe8" +
		"\x6a\x3e\x6f\x9a\xe6\x0c\xfd\xf6\x8c\xca\xb9\xac\x4c\x76\xfa\xc3\x9b\x5d\x98\x7c\x4b\xcb\x80\x91\xaf\x65\x3b\x16" +
		"\x71\x8e\x94\x0c\x06\x9d\x20\x20\x32\xe8\xba\x1d\x19\x7c\xa0\xd3\xe8\xa5\x7e\xef\x1b\xfc\x2d\xf6\xd7\x62\x61\xdc" +
		"\xac\xcb\x9c\x19\x9d\x71\x76\x7b\xf7\xdb\xf4\x94\xb3\x6c\x31\xa3\x7a\xf5\xb5\x0a\xba\x61\x64\x53\x55\x4a\x6b\xc1" +
		"\x15\xc0\xd9\x5f\xe0\xdb\x41\xdf\x6f\x45\xac\xae\xab\x65\x3c\xcc\x96\x33\x5a\x9b\x6a\x6f\x02\x2d\xba\x4d\x54\xe4" +
		"\xf3\x63\x80\x86\xc0\xa8\xa1\xd1\x4a\xc4\x15\x84\xe7\x03\x8c\xfb\x62\xb2\x16\x55\x5f\x50\xd2\x86\x89\x68\xf1\xc6" +
		"\xaa\x92\xd2\x3f\x19\x19\x67\xb9\xb4\x04\x29\x22\x56\xd4\x25\x92\xcf\x07\xb6\x7a\xd2\x5e\x5e\xff\x85\x31\x15\x17" +
		"\xd0\x85\xff\xa9\xfa\x32\x55\xa2\x94\x4e\x5b\xd0\x6f\x28\x6b\x5f\xf2\x01\xbf\x87\x0d\x6c\x56\x91\xc1\x5e\x12\x39" +
		"\x7a\xce\xc0\x7b\xf4\x87\x34\x74\x53\x2f\xa4\x52\x40\x94\xde\x97\xc1\xda\xbf\x38\xc7\xe8\x6c\x24\x89\x9a\x40\x7f" +
		"\x48\x5e\x4f\x40\xf0\x35\x70\xf6\xfd\xe5\xf9\x79\x02\xfd\x86\x81\x03\x53\x4b\xdf\x21\x2b\xec\x13\x2b\x77\x94\x9c" +
		"\xd1\xe8\x7c\x48\x8b\x54\xef\xb8\xf9\xaf\x98\xeb\xd5\x51\xc4\xd9\xe2\x5d\xff\xf7\x50\xc7\xff\xfe\x9f\xb0\x71\x93" +
		"\x7f\x02\x00\x00\xff\xff\x07\x7d\xda\xe1\x0d\x08\x00\x00")

func bindataMigrationsSqlTests1testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests1testsql,
		"migrations/sql/tests/1_test.sql",
	)
}

func bindataMigrationsSqlTests1testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests1testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/1_test.sql",
		size:        2061,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests2testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xc1\x6e\xe3\x36\x10\x3d\xaf\xbf\x82\xd8\x8b\x1c\x94\x5e\x67\x5d" +
		"\xec\x1e\xd2\x53\x81\xee\x61\x81\x22\x0b\x74\x93\xf6\x50\x14\x04\x4d\x8e\x24\xc6\x34\x47\xe5\x50\x55\xdc\x38\xff" +
		"\x5e\x90\x94\x2c\xc5\x71\xd2\x34\x97\xee\xc5\xe0\xcc\x70\xa8\x79\x6f\xde\x0c\xbc\x58\xb0\xef\xb6\xa6\xf2\x32\x00" +
		"\xbb\x6e\x66\x9f\x2f\xbf\x7e\xfa\xe5\x8a\x7d\xbe\xbc\xfa\xc2\xea\x9d\xf6\x52\x28\x6b\xc0\x05\x36\x37\x9a\x33\x69" +
		"\x2d\x76\xa0\x85\x42\x4f\x02\xbd\xa9\x8c\x23\xce\xf2\x0d\xe1\xe4\x16\x0e\x06\x81\xf2\x10\x38\xf3\xa0\x8d\x07\x15" +
		"\x44\xeb\x0d\x71\x56\x79\xe9\x82\x08\xbb\x06\x28\xc6\xa8\x41\x47\x30\xd8\xa4\xb0\x01\xce\xb0\x73\xe0\x39\x6b\xd0" +
		"\x1a\xb5\x8b\x79\x9c\x05\xa4\x7c\xe8\x5f\x4f\x67\x8b\x15\xf6\x5e\x74\x41\xaa\x40\x47\x5f\x17\x70\xdb\x18\x0f\x24" +
		"\x64\xe0\x8c\x40\x05\xf4\xc2\x68\x70\xc1\x94\x06\x7c\x4e\xbd\xe9\x36\x94\x7f\x87\x2f\x6d\xc0\x09\x70\xba\x41\xe3" +
		"\x82\x90\x6d\xa8\xc5\x16\x42\x8d\x3a\xd6\xfb\x67\x0b\x34\x40\x19\x2c\x5c\xdf\x44\x7c\x64\x2a\x67\x5c\x25\xa4\xad" +
		"\x38\x6b\x09\xbc\x71\x25\x26\x2f\x68\x71\x40\x9a\xa2\xd4\xe6\x94\x08\x9b\x33\xd9\x6a\x03\x4e\xc1\xd9\xec\xd7\x1f" +
		"\x7f\xbe\xfe\xf4\x75\xc6\xd8\xbc\x58\x2d\x32\x92\x82\xb3\xa2\x0e\xa1\xb9\x58\x2e\x2d\x2a\x69\x6b\xa4\xb0\xef\x1d" +
		"\x15\x62\x65\x21\xde\x20\xdc\xc2\x24\x41\xae\x95\x86\xf2\x65\xa9\x11\x20\x7a\xf3\x37\x08\x85\x1a\xf6\x66\xdb\x58" +
		"\xa3\x4c\x7a\x26\x51\xb1\x37\x5a\xa4\x43\xf4\x94\x88\xfb\xb5\xf4\x29\x0f\x1c\x48\x9a\x7c\x23\xb7\x6b\xe2\x08\x38" +
		"\x0d\x9f\x80\x53\xe1\xf8\xd0\xbe\xc4\x68\x9d\x8f\xf1\xdc\xaf\x78\xe3\xee\xed\x06\x76\xf4\xf6\x82\xfd\xfe\xc7\xfd" +
		"\xe4\x81\xd8\xb3\x68\x3a\x74\x30\x71\xb7\xde\xbc\xdf\x8f\xe7\x55\x0c\x79\x5a\x7d\xf8\x98\x0f\x1f\x56\xe9\xd0\xb4" +
		"\x6b\x6b\xd4\x90\x46\x17\xcb\x65\xd7\x75\xef\xd0\xef\xde\x51\xbd\x94\x8d\x29\xce\x7e\x98\x4d\x67\x61\xf6\x26\x0f" +
		"\x03\x46\xbe\x56\x49\x16\x51\x47\x4a\x06\x83\x4e\x10\x10\x19\x74\xfd\x8c\x8c\x31\xd0\x59\x7a\xb9\xdf\x87\x06\xbf" +
		"\x89\xfd\xb5\x58\x19\xb7\xe8\x33\x17\x46\x17\x9c\x5d\x7e\xf9\x6d\x7e\xc6\x59\xb1\x5a\x50\xbb\xfe\x6f\x15\xf4\x62" +
		"\x64\x73\x55\x4b\x6b\xc1\x55\xc0\xd9\x5f\xe0\x93\xd0\x0f\x53\x11\xab\xeb\x6b\x99\x8a\xd9\x72\x46\x1b\xd3\x1c\x5c" +
		"\xa0\x45\x3f\x89\x8a\x7c\x79\x0a\xd0\x78\x31\x5a\x68\xb4\x12\x71\x04\xe1\xf6\x08\xe3\xa1\x98\x22\xa1\x1a\x0a\xca" +
		"\xd6\xa8\x88\x84\x37\x56\x95\x8d\x61\x65\x14\x9c\x95\xd2\x12\xe4\x1b\xb1\xa2\x3e\x91\x7c\x39\xb2\x35\x90\x76\x77" +
		"\xff\x2f\x8c\xa9\x38\x80\x2e\x7c\x33\x54\x71\x56\xa2\x57\xf1\x85\x7e\x1d\x8c\xab\xe9\x7f\x65\x31\x45\x73\x69\x2f" +
		"\xd0\xe1\x11\xab\xa2\x96\x4e\x5b\xd0\x0f\xd8\x4d\x4b\x7f\xa4\xca\xc3\x16\xb6\xeb\x48\xf6\x70\x12\x25\x7a\xce\xc0" +
		"\x7b\xf4\xc7\x8c\xf5\x03\x22\xa4\x52\x40\x94\x57\xd1\xe8\x1d\x96\xd3\x29\xe6\x3b\x49\xa2\x25\xd0\xcf\x92\x39\x10" +
		"\x12\x7c\x0b\x9c\x7d\xff\xf1\xfc\x7c\x20\xe1\x21\x23\x53\x57\xa2\xf3\x35\xd3\x79\x92\x9c\x89\xca\x9e\xa5\x45\xaa" +
		"\x47\xdc\x3c\x8d\xf9\xb5\xda\x8a\xfd\x3e\x45\x46\xf1\xfe\x91\x54\x46\x51\xbd\x58\x2b\xb8\x2e\x5b\xea\x8b\x7d\x62" +
		"\x81\x1e\xd8\x78\x3c\x87\x93\xf4\x87\x18\x72\xd1\x47\xb3\x30\x5e\x4e\x45\x4d\xff\xe5\xfc\x84\x9d\x9b\xfd\x13\x00" +
		"\x00\xff\xff\x9f\x0d\x44\x30\xf7\x08\x00\x00")

func bindataMigrationsSqlTests2testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests2testsql,
		"migrations/sql/tests/2_test.sql",
	)
}

func bindataMigrationsSqlTests2testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests2testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/2_test.sql",
		size:        2295,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests3testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x8f\x1b\x37\x0c\x3d\xc7\xbf\x42\xc8\x65\x76\x51\x39\xde\xec" +
		"\x22\x39\x6c\x4f\x05\x9a\x43\x80\x62\x03\x34\x49\x7b\x28\x0a\x41\x96\x38\x63\x66\x65\x71\x2a\x6a\xea\xb8\x71\xfe" +
		"\x7b\x21\x69\xbe\x1c\x3b\x46\xd3\x4b\x7b\x59\x88\xa4\xa8\x79\x7c\x7c\xe4\x7a\xb9\x14\xdf\x6d\xb1\x09\x3a\x82\x78" +
		"\xdf\x2e\x5e\x3f\xbc\x7d\xf5\xf3\x3b\xf1\xfa\xe1\xdd\x1b\xb1\xd9\xdb\xa0\x95\x71\x08\x3e\x8a\x2b\xb4\x52\x68\xe7" +
		"\x68\x07\x56\x19\x0a\xac\x28\x60\x83\x9e\xa5\x28\x37\x94\xd7\x5b\x18\x0d\x06\x13\x20\x4a\x11\xc0\x62\x00\x13\x55" +
		"\x17\x90\xa5\x68\x82\xf6\x51\xc5\x7d\x0b\x9c\x62\xdc\x92\x67\x18\x6c\x36\xd4\x82\x14\xb4\xf3\x10\xa4\x68\xc9\xa1" +
		"\xd9\xa7\x3c\x29\x22\x71\x39\xf4\xaf\xe7\xb3\xa3\x86\x7a\x2f\xf9\xa8\x4d\xe4\x2f\xbe\xae\xe0\x63\x8b\x01\x58\xe9" +
		"\x28\x05\x83\x89\x14\x14\x5a\xf0\x11\x6b\x84\x50\x52\x3f\xec\x1e\xb9\xfc\x1d\xbe\xf4\x08\x5e\x81\xb7\x2d\xa1\x8f" +
		"\x4a\x77\x71\xa3\xb6\x10\x37\x64\x13\xde\x3f\x3a\xe0\xa1\x94\xc1\xa2\xf5\x87\x54\x1f\x63\xe3\xd1\x37\x4a\xbb\x46" +
		"\x8a\x8e\x21\xa0\xaf\x29\x7b\xc1\xaa\xb1\xd2\x1c\xe5\xae\xa4\xa4\xb2\xa5\xd0\x9d\x45\xf0\x06\xae\x17\xbf\xfc\xf0" +
		"\xd3\xfb\x57\x6f\x17\x42\x5c\x55\x77\xcb\x52\x49\x25\x45\xb5\x89\xb1\xbd\x5f\xad\x1c\x19\xed\x36\xc4\xf1\xd0\x3b" +
		"\x1a\xa2\xc6\x41\xba\xc1\xb4\x85\x59\x82\x5e\x1b\x0b\xf5\x3f\x4b\x4d\x05\x52\xc0\xbf\x40\x19\xb2\x70\xc0\x6d\xeb" +
		"\xd0\x60\x7e\x26\x53\x71\x40\xab\xf2\x21\x79\x6a\xa2\xc3\x5a\x87\x9c\x07\x1e\x34\xcf\xbe\x51\xda\x35\x73\x44\x9a" +
		"\x87\xcf\x94\xd3\xd0\xf4\xd0\xa1\xa6\x64\xdd\x4c\xf1\xd2\xaf\x74\xe3\xd3\xd3\x47\xd8\xf3\xd3\x7b\xf1\xdb\xef\x9f" +
		"\x67\x0f\xa4\x9e\x25\xd3\x93\x87\x99\xbb\x0b\xf8\xfc\x30\x9d\x6f\x53\x28\xf0\xed\x8b\x97\xe5\xf0\xe2\x36\x1f\xda" +
		"\x6e\xed\xd0\x0c\x69\x7c\xbf\x5a\xed\x76\xbb\x67\x14\xf6\xcf\x78\xb3\xd2\x2d\x56\xd7\xdf\x2f\xe6\xb3\xb0\x78\x52" +
		"\x86\x81\x12\x5f\xb7\x59\x16\x49\x47\x46\x47\x24\xaf\x18\x98\x91\x7c\x3f\x23\x53\x0c\x6c\x91\x5e\xe9\xf7\xd8\xe0" +
		"\x27\xa9\xbf\x8e\x1a\xf4\xcb\x3e\x73\x89\xb6\x92\xe2\xe1\xcd\xaf\x57\xd7\x52\x54\x77\x4b\xee\xd6\xdf\x86\xa0\x17" +
		"\xa3\xb8\x32\x1b\xed\x1c\xf8\x06\xa4\xf8\x13\x42\x16\xfa\x38\x15\x09\x5d\x8f\x65\x2e\x66\x27\x05\x3f\x62\x3b\xba" +
		"\xc0\xaa\x7e\x12\x0d\x87\xfa\x5c\x41\xd3\xc5\x64\x11\x5a\xa3\xd2\x08\xc2\xc7\x98\xa7\x12\x47\x46\x14\xda\xe3\xaa" +
		"\x47\x78\x55\xae\x73\x80\x58\xac\x49\x23\x99\x81\x84\xb3\x18\xc3\x12\xa9\xa4\xa8\xb5\x63\x28\x37\x12\xc6\x3e\x91" +
		"\x43\x3d\xf1\x37\xd0\xf8\xe9\x73\x89\x9e\x30\x7d\x99\x59\x93\x06\xd5\xc7\xff\x11\xa5\x35\x05\x93\x5e\xe8\xd7\xc6" +
		"\xb4\xc2\x4e\xd9\x1e\x3c\x23\xe6\xff\x9e\xfe\x82\x3e\x4b\xfa\x7c\x3b\xca\x1b\x23\xb2\x6f\xea\x8e\xda\x68\x6f\x1d" +
		"\xd8\xa3\x2e\xe5\x7f\x32\x13\xe5\x01\xb6\xb0\x5d\x27\xb6\x86\x93\xaa\x29\x48\x01\x21\x50\xf8\x92\xf9\x81\x4a\x6d" +
		"\x0c\x30\x97\xd5\x37\x79\x87\x65\x78\xae\x83\x3b\xcd\xaa\x63\xb8\x2c\xf8\x81\xb5\x18\x3a\x90\xe2\xee\xe5\xcd\xcd" +
		"\xc0\xd4\x31\x6d\x73\x57\xe6\xfc\xdf\x6c\x83\xb3\xe4\xcc\xd4\x7a\x91\x16\x6d\x4e\xb8\xf9\x7a\xcd\x17\x34\x7a\x99" +
		"\x8e\x2c\x8a\x53\x32\xaa\xe7\x27\x7a\x9a\x94\x37\x13\xd4\x65\x56\x68\x5d\x77\xdc\x83\xfd\xca\xc2\x1e\xd9\x38\x9d" +
		"\xe7\x59\xfa\x71\x0d\xa3\x92\xe7\x03\x33\x5d\xce\xa0\xe6\xbf\xaa\x7e\xa4\x9d\x5f\xfc\x1d\x00\x00\xff\xff\x94\x23" +
		"\x92\x4a\x67\x09\x00\x00")

func bindataMigrationsSqlTests3testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests3testsql,
		"migrations/sql/tests/3_test.sql",
	)
}

func bindataMigrationsSqlTests3testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests3testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/3_test.sql",
		size:        2407,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests4testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x6f\x1b\x37\x10\x3d\x47\xbf\x82\xc8\x65\x6d\x94\x8a\x1c\xd7" +
		"\xc9\xc1\x3d\x15\x68\x0e\x01\x0a\x07\x68\x92\xf6\x50\x14\x04\x45\xce\xae\x18\x51\x9c\x2d\x87\xdb\x8d\x1a\xe5\xbf" +
		"\x07\x24\xf7\x83\xb6\x14\x25\xb9\xf9\x22\x70\x86\x1c\x72\xe6\xbd\x37\xb3\x5a\x2e\xd9\x4f\x3b\xd3\x78\x19\x80\xbd" +
		"\x6f\x17\xaf\xef\xde\xbe\xfa\xe3\x1d\x7b\x7d\xf7\xee\x0d\xdb\xec\xb5\x97\x42\x59\x03\x2e\xb0\x0b\xa3\x39\x93\xd6" +
		"\x62\x0f\x5a\x28\xf4\x24\xd0\x9b\xc6\x38\xe2\x2c\x9f\x10\x4e\xee\x60\x32\x08\x94\x87\xc0\x99\x07\x6d\x3c\xa8\x20" +
		"\x3a\x6f\x88\xb3\xc6\x4b\x17\x44\xd8\xb7\x40\x71\x8f\x5a\x74\x04\xa3\x4d\x0a\x5b\xe0\x0c\x7b\x07\x9e\xb3\x16\xad" +
		"\x51\xfb\x18\xc7\x59\x40\xca\x8b\xe1\xf6\xb4\xb6\xd8\xe0\xe0\x45\x17\xa4\x0a\xf4\xe0\x75\x01\x1f\x5b\xe3\x81\x84" +
		"\x0c\x9c\x11\xa8\x80\x5e\x18\x0d\x2e\x98\xda\x80\xcf\xa1\x1f\xfa\x2d\xe5\xdf\xf1\xa5\x2d\x38\x01\x4e\xb7\x68\x5c" +
		"\x10\xb2\x0b\x1b\xb1\x83\xb0\x41\x1d\xf3\xfd\xb7\x03\x1a\x4b\x19\x2d\x5c\x7f\x88\xf5\x91\x69\x9c\x71\x8d\x90\xb6" +
		"\xe1\xac\x23\xf0\xc6\xd5\x98\xbc\xa0\xc5\x54\x69\xda\xa5\x2e\x87\xc4\xb2\x39\x93\x9d\x36\xe0\x14\x5c\x2e\xfe\xfc" +
		"\xf5\xf7\xf7\xaf\xde\x2e\x18\xbb\xa8\x6e\x96\xb9\x92\x8a\xb3\x6a\x13\x42\x7b\xbb\x5a\x59\x54\xd2\x6e\x90\xc2\x61" +
		"\x70\x34\x88\x8d\x85\x78\x82\x70\x07\x45\x80\x5c\x2b\x0d\xf5\xf7\x85\xc6\x02\xd1\x9b\xff\x41\x28\xd4\x70\x30\xbb" +
		"\xd6\x1a\x65\xd2\x35\x09\x8a\x83\xd1\x22\x2d\xa2\xa7\x46\x3c\xac\xa5\x4f\x71\xe0\x40\x52\xf1\x46\xa6\xab\x70\x04" +
		"\x2c\xb7\x4f\x94\xd3\xe0\x7c\xd1\xa1\xc6\x68\x5d\xcd\xfb\x99\xaf\x78\xe2\xd3\xd3\x2d\xec\xe9\xe9\x2d\xfb\xfb\x9f" +
		"\xcf\xc5\x05\x91\xb3\x68\x3a\x74\x50\xb8\x3b\x6f\x9e\x1f\xe6\xf5\x75\xdc\xf2\x74\xfd\xe2\x65\x5e\xbc\xb8\x4e\x8b" +
		"\xb6\x5b\x5b\xa3\xc6\x30\xba\x5d\xad\xfa\xbe\x7f\x86\x7e\xff\x8c\x36\x2b\xd9\x9a\xea\xf2\x97\x45\xd9\x0b\x8b\x27" +
		"\xb9\x19\x30\xe2\x75\x9d\x64\x11\x75\xa4\x64\x30\xe8\x04\x01\x91\x41\x37\xf4\xc8\xbc\x07\x3a\x4b\x2f\xf3\x3d\x11" +
		"\xfc\x24\xf2\x6b\xb1\x31\x6e\x39\x44\x2e\x8d\xae\x38\xbb\x7b\xf3\xd7\xc5\x25\x67\xd5\xcd\x92\xba\xf5\x8f\x65\x30" +
		"\x88\x91\x5d\xa8\x8d\xb4\x16\x5c\x03\x9c\xfd\x07\x3e\x09\x7d\xea\x8a\x98\xdd\x90\x4b\x29\x66\xcb\x19\x6d\x4d\x3b" +
		"\xb9\x40\x8b\xa1\x13\x15\xf9\xfa\x54\x41\xf3\xc1\x68\xa1\xd1\x4a\xc4\x16\x84\x8f\x21\x75\xa5\x99\x10\x49\x4f\x96" +
		"\xa7\xc5\x91\xda\x13\x18\x53\xd6\x55\x2a\x7f\xcc\x3c\x5b\xb3\x74\x12\x30\x31\xfd\x6c\x8c\xb3\xa5\xe2\xac\x96\x96" +
		"\x20\x9f\x88\xa9\x0f\x81\xe4\xeb\x19\xd6\x11\xdd\x4f\x9f\xf3\xee\x09\x02\xaa\x9b\xa5\xec\xf4\x37\x90\x57\xb1\x91" +
		"\x5d\x78\x44\x90\xd7\xe8\x55\xbc\x61\x18\x2b\xf3\x88\x3b\xc5\x46\xf6\x14\x39\x3f\x52\x7a\x72\x51\xa9\x13\xce\xd0" +
		"\xf5\x20\xb3\x1f\x66\x4f\x6c\xa4\xd3\x16\xf4\x3d\x16\xd3\x47\x6a\xa6\xc4\xc3\x0e\x76\xeb\x88\xe6\xb8\x12\x35\x7a" +
		"\xce\xc0\x7b\xf4\x0f\x99\x19\xa1\x96\x4a\x01\x51\x1e\x9d\xb3\x77\x1c\xa6\xa7\x18\xee\x25\x89\x8e\x40\xcf\xef\x7f" +
		"\x2f\x1f\x23\xa6\xc1\x77\xc0\xd9\xcf\x2f\xaf\xae\x46\x1c\xef\x83\x5a\xba\x66\x46\xbe\x8d\xd9\xe9\x59\x73\x12\xba" +
		"\x42\xeb\x67\x41\x93\xea\x08\xb9\x73\x88\x7c\x55\xe1\xe7\x71\x49\xda\x39\x46\xa5\x7a\x7e\x24\xbb\x19\x8e\x42\x77" +
		"\xe7\x51\xc1\x75\xdd\xd1\x90\xec\x57\x3e\x07\x13\x1a\xc7\xd3\xa0\x08\xbf\x5f\xc3\x24\xf8\xb2\xaf\xe6\xc3\x29\xa9" +
		"\xf2\x3f\xdb\x6f\xd8\xbb\xc5\x97\x00\x00\x00\xff\xff\x6c\xa2\xb3\xaa\xc5\x09\x00\x00")

func bindataMigrationsSqlTests4testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests4testsql,
		"migrations/sql/tests/4_test.sql",
	)
}

func bindataMigrationsSqlTests4testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests4testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/4_test.sql",
		size:        2501,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests5testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x8f\x1b\x37\x0c\x3d\xc7\xbf\x42\xc8\x65\x76\x51\x39\xde\x6c" +
		"\xe1\x1c\xb6\xa7\x02\xcd\x21\x40\xb1\x01\x9a\xa4\x3d\x14\x85\x20\x4b\x9c\xb1\x62\x59\x9c\x8a\x9a\x4e\xdc\x38\xff" +
		"\x3d\x90\x34\x1f\xda\xb5\xe3\x24\xb7\x5c\x0c\x91\x12\x25\xf2\xbd\x47\x8e\x97\x4b\xf6\xd3\xde\x34\x5e\x06\x60\xef" +
		"\xda\xc5\xab\xfb\x37\x2f\xff\x78\xcb\x5e\xdd\xbf\x7d\xcd\xb6\x07\xed\xa5\x50\xd6\x80\x0b\xec\xca\x68\xce\xa4\xb5" +
		"\xd8\x83\x16\x0a\x3d\x09\xf4\xa6\x31\x8e\x38\xcb\x27\x84\x93\x7b\x98\x0c\x02\xe5\x21\x70\xe6\x41\x1b\x0f\x2a\x88" +
		"\xce\x1b\xe2\xac\xf1\xd2\x05\x11\x0e\x2d\x50\xdc\xa3\x16\x1d\xc1\x68\x93\xc2\x16\x38\xc3\xde\x81\xe7\xac\x45\x6b" +
		"\xd4\x21\xc6\x71\x16\x90\xf2\x62\xb8\x3d\xad\x2d\x36\x38\x78\xd1\x05\xa9\x02\x3d\x7a\x5d\xc0\x87\xd6\x78\x20\x21" +
		"\x03\x67\x04\x2a\xa0\x17\x46\x83\x0b\xa6\x36\xe0\x73\xe8\xfb\x7e\x47\xf9\x77\x7c\x69\x07\x4e\x80\xd3\x2d\x1a\x17" +
		"\x84\xec\xc2\x56\xec\x21\x6c\x51\xc7\x7c\xff\xed\x80\xc6\x52\x46\x0b\x37\xef\x63\x7d\x64\x1a\x67\x5c\x23\xa4\x6d" +
		"\x38\xeb\x08\xbc\x71\x35\x26\x2f\x68\x31\x55\x9a\x76\xa9\xcb\x21\xb1\x6c\xce\x64\xa7\x0d\x38\x05\xd7\x8b\x3f\x7f" +
		"\xfd\xfd\xdd\xcb\x37\x0b\xc6\xae\xaa\xf5\x32\x57\x52\x71\x56\x6d\x43\x68\xef\x56\x2b\x8b\x4a\xda\x2d\x52\x38\x0e" +
		"\x8e\x06\xb1\xb1\x10\x4f\x10\xee\xa1\x08\x90\x1b\xa5\xa1\xfe\xb6\xd0\x58\x20\x7a\xf3\x3f\x08\x85\x1a\x8e\x66\xdf" +
		"\x5a\xa3\x4c\xba\x26\x41\x71\x34\x5a\xa4\x45\xf4\xd4\x88\xc7\x8d\xf4\x29\x0e\x1c\x48\x2a\xde\xc8\x74\x15\x8e\x80" +
		"\xe5\xf6\x99\x72\x1a\x9c\x2f\x3a\xd6\x18\xad\x9b\x79\x3f\xf3\x15\x4f\x7c\x7c\xba\x83\x03\x3d\xbd\x63\x7f\xff\xf3" +
		"\xa9\xb8\x20\x72\x16\x4d\x87\x0e\x0a\x77\xe7\xcd\xf3\xe3\xbc\xbe\x8d\x5b\x9e\x6e\xd7\x2f\xf2\x62\x7d\x9b\x16\x6d" +
		"\xb7\xb1\x46\x8d\x61\x74\xb7\x5a\xf5\x7d\xff\x0c\xfd\xe1\x19\x6d\x57\xb2\x35\xd5\xf5\x2f\x8b\xb2\x17\x16\x4f\x72" +
		"\x33\x60\xc4\xeb\x36\xc9\x22\xea\x48\xc9\x60\xd0\x09\x02\x22\x83\x6e\xe8\x91\x79\x0f\x74\x96\x5e\xe6\x7b\x22\xf8" +
		"\x49\xe4\xd7\x62\x63\xdc\x72\x88\x5c\x1a\x5d\x71\x76\xff\xfa\xaf\xab\x6b\xce\xaa\xf5\x92\xba\xcd\xf7\x65\x30\x88" +
		"\x91\x5d\xa9\xad\xb4\x16\x5c\x03\x9c\xfd\x07\x3e\x09\x7d\xea\x8a\x98\xdd\x90\x4b\x29\x66\xcb\x19\xed\x4c\x3b\xb9" +
		"\x40\x8b\xa1\x13\x15\xf9\xfa\x5c\x41\xf3\xc1\x68\xa1\xd1\x4a\xc4\x16\x84\x0f\x21\x75\xa5\x99\x10\x49\x4f\x96\xa7" +
		"\xc5\x89\xda\x13\x18\x53\xd6\x55\x2a\x7f\xcc\x3c\x5b\xb3\x74\x12\x30\x31\xfd\x6c\x8c\xb3\xa5\xe2\xac\x96\x96\x20" +
		"\x9f\x88\xa9\x0f\x81\xe4\xeb\x19\xd6\x11\xdd\x8f\x9f\xf2\xee\x19\x02\xaa\xf5\x52\x76\xfa\x2b\xc8\xab\xd8\xc8\x2e" +
		"\xfc\x40\x90\xd7\xe8\x55\xbc\x61\x18\x2b\xf3\x88\x3b\xc7\x46\xf6\x14\x39\xff\xa0\xf4\xe4\xa2\x52\x27\x5c\xa0\xeb" +
		"\x51\x66\xdf\xcd\x9e\xd8\x4a\xa7\x2d\xe8\x07\x2c\xa6\x8f\xd4\x4c\x89\x87\x3d\xec\x37\x11\xcd\x71\x25\x6a\xf4\x9c" +
		"\x81\xf7\xe8\x1f\x33\x33\x42\x2d\x95\x02\xa2\x3c\x3a\x67\xef\x38\x4c\xcf\x31\xdc\x4b\x12\x1d\x81\x9e\xdf\xff\x56" +
		"\x3e\x46\x4c\x83\xef\x80\xb3\x9f\x5f\xdc\xdc\x8c\x38\x3e\x04\xb5\x74\xcd\x8c\x7c\x1d\xb3\xf3\xb3\xe6\x2c\x74\x85" +
		"\xd6\x2f\x82\x26\xd5\x09\x72\x97\x10\xf9\xa2\xc2\x2f\xe3\x92\xb4\x73\x8a\x4a\xf5\xfc\x44\x76\x33\x1c\x85\xee\x2e" +
		"\xa3\x82\x9b\xba\xa3\x21\xd9\x2f\x7c\x0e\x26\x34\x4e\xa7\x41\x11\xfe\xb0\x86\x49\xf0\x65\x5f\xcd\x87\x53\x52\xe5" +
		"\x7f\xb6\xdf\xb0\x77\x8b\xcf\x01\x00\x00\xff\xff\x38\x28\xb8\xf6\xc5\x09\x00\x00")

func bindataMigrationsSqlTests5testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests5testsql,
		"migrations/sql/tests/5_test.sql",
	)
}

func bindataMigrationsSqlTests5testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests5testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/5_test.sql",
		size:        2501,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests6testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5f\x6f\xdc\x36\x0c\x7f\xee\x7d\x0a\xa1\x2f\x97\x62\x76\xfe\x5c" +
		"\xd0\x0c\xc8\x9e\x06\xac\x0f\x05\x86\x14\x58\xd3\xed\x61\x18\x04\x9d\x44\xdb\xec\xf9\x44\x4f\x94\xeb\xdc\x7a\xfd" +
		"\xee\x83\x2c\xfb\xec\x4b\x9c\x3f\xdd\x80\x64\x58\x03\x04\x81\x44\x89\x12\xf9\xfb\x91\x34\x75\x69\x2a\xbe\x5b\x63" +
		"\xee\x94\x07\xf1\xa1\x9a\xbd\xbd\x78\xff\xe6\x97\x4b\xf1\xf6\xe2\xf2\x9d\x28\x36\xc6\x29\xa9\x4b\x04\xeb\xc5\x01" +
		"\x9a\x44\xa8\xb2\xa4\x06\x8c\xd4\xe4\x58\x92\xc3\x1c\x2d\x27\x22\xee\x90\x56\xad\x61\x37\x61\xd0\x0e\x7c\x22\x1c" +
		"\x18\x74\xa0\xbd\xac\x1d\x72\x22\x72\xa7\xac\x97\x7e\x53\x01\x87\x35\xae\xc8\x32\xf4\x73\xd6\x54\x41\x22\xa8\xb1" +
		"\xe0\x12\x51\x51\x89\x7a\x13\xf4\x12\xe1\x89\xe3\xa0\x3b\xbd\x1d\x97\x94\x53\x27\x25\xeb\x95\xf6\x7c\xed\x76\x09" +
		"\x57\x15\x3a\x60\xa9\x7c\x22\x18\xb4\x27\x27\xd1\x80\xf5\x98\x21\xb8\xa8\xfa\xb1\x59\x71\xfc\xdf\xdf\xb4\x02\x2b" +
		"\xc1\x9a\x8a\xd0\x7a\xa9\x6a\x5f\xc8\x35\xf8\x82\x4c\xb0\xf7\xcf\x1a\xb8\x77\xa5\x9f\xd1\xf2\x63\xf0\x8f\x31\xb7" +
		"\x68\x73\xa9\xca\x3c\x11\x35\x83\x43\x9b\x51\x2b\x05\x23\x77\x9e\xb6\xab\x5c\x47\x95\xe0\x76\x22\x54\x6d\x10\xac" +
		"\x86\x57\xb3\x5f\x7f\xfc\xf9\xc3\x9b\xf7\x33\x21\x0e\xe6\x67\x69\xf4\x64\x9e\x88\x79\xe1\x7d\x75\x7e\x74\x54\x92" +
		"\x56\x65\x41\xec\xb7\x9d\x20\x27\xca\x4b\x08\x3b\x98\xd6\x30\x52\x50\x4b\x6d\x20\x7b\x98\x6a\x70\x90\x1c\xfe\x05" +
		"\x52\x93\x81\x2d\xae\xab\x12\x35\xb6\xc7\xb4\x50\x6c\xd1\xc8\x76\x10\x24\x19\xd1\x76\xa9\x5c\xab\x07\x16\x14\x8f" +
		"\xee\x88\x74\x8d\x04\x9e\xc6\xcb\x13\xee\xe4\x34\x1c\xb4\xcd\x28\xcc\x8e\x87\xf5\xc8\x57\xd8\xf1\xf9\xe5\x0a\x36" +
		"\xfc\xf2\x5c\xfc\xfe\xc7\x97\xd1\x01\x81\xb3\x30\xb5\x64\x61\x24\xae\x1d\x9e\x6c\x87\xf1\x22\x2c\x39\x5e\xbc\x3e" +
		"\x8b\x83\xd7\x8b\x76\x50\xd5\xcb\x12\x75\xaf\xc6\xe7\x47\x47\x4d\xd3\x1c\x92\xdb\x1c\x72\x71\xa4\x2a\x9c\xbf\xfa" +
		"\x61\x36\xce\x85\xd9\x8b\x98\x0c\x14\xf0\x5a\xb4\x61\x11\xe2\x48\x2b\x8f\x64\x25\x03\x33\x92\xed\x72\x64\x58\x03" +
		"\x13\x43\x2f\xf2\xbd\x23\xf8\x45\xe0\xb7\xa4\x1c\x6d\xda\x69\xa6\x68\xe6\x89\xb8\x78\xf7\xdb\xc1\xab\x44\xcc\xcf" +
		"\x52\xae\x97\x5f\x67\x41\x17\x8c\xe2\x40\x17\xaa\x2c\xc1\xe6\x90\x88\x4f\xe0\xda\x40\xdf\x65\x45\xb0\xae\xb3\x65" +
		"\x1c\xcc\x65\x22\x78\x85\xd5\x4e\x04\x46\x76\x99\xa8\xd9\x65\x53\x0e\x0d\x1b\xc3\x8c\xd0\x68\x19\x52\x10\xae\x7c" +
		"\x9b\x95\xb8\x43\xa4\xbd\x72\xbc\x5b\xde\x88\xf6\x16\x8c\x9d\xd5\xf3\xd6\xfd\xde\xf2\x38\x1b\x42\xa7\x05\x26\x98" +
		"\x1f\x27\x7d\x6d\x99\x27\x22\x53\x25\x43\xdc\x11\x4c\xef\x14\xd9\x65\x03\xac\x3d\xba\x9f\xbf\xc4\xd5\x09\x02\xe6" +
		"\x67\xa9\xaa\xcd\x3d\xc8\xeb\x90\xc8\xd6\xff\x87\x20\xcf\xc8\xe9\x70\x42\x57\x56\x86\x12\x37\xc5\x46\x94\x8c\x6c" +
		"\x9e\xa4\x27\x11\x4a\xbb\xa7\xe7\x28\x7a\xd6\xa6\xc3\x1d\x9c\x5d\xb3\x2c\x50\x18\x07\xda\x7d\x1d\x97\xb2\x50\xd6" +
		"\x94\x60\xf6\x38\x6d\x3f\x59\x03\x41\x0e\xd6\xb0\x5e\x06\x6c\xfb\x91\xcc\xc8\x25\x02\x9c\x23\x77\x9d\xa7\x1e\x78" +
		"\xa5\x35\x30\xc7\x42\x3a\x48\xfb\xd2\x3a\xc5\x77\xa3\x58\xd6\x0c\x66\xb8\xff\xa1\xc9\xd3\x83\xeb\x5d\x0d\x89\x38" +
		"\x3d\x3b\x3e\xee\x01\xdd\x47\x77\x2c\x1a\xa8\xb9\x3f\xfe\xa7\x2b\xcf\x24\x74\xa3\xc8\xbf\x13\x34\xa5\x6f\x20\x77" +
		"\x17\x22\xb7\xc6\xfb\xdd\xb8\xb4\x41\x74\x13\x95\xf9\xc9\x8d\xf8\x1b\xe0\x18\x05\xe0\xdd\xa8\xd0\x32\xab\xb9\x33" +
		"\xf6\x96\x8f\xc3\x0e\x8d\x9b\xb5\x61\xa4\xbe\xef\xc3\x2e\xf2\xc7\x09\x36\x6c\x6e\x8d\x4a\x53\x71\x59\x20\x8b\xf0" +
		"\x67\x43\x44\x23\xfb\xd0\xb1\x19\xe5\x95\xe0\x0a\x34\x66\xa8\x55\x59\x6e\x04\x5a\x06\xe7\xc1\x04\x04\x85\x2f\x40" +
		"\x68\xc5\x20\x9a\x02\x1c\x88\x06\x44\xa1\x3e\xc1\xfe\x11\xec\x43\x5b\xb8\x84\x8c\x1c\x08\xb8\x02\x5d\x7b\xb4\xb9" +
		"\x88\xfd\x62\x70\xea\x7b\xd1\x14\xa8\x0b\xa1\x8c\xe1\x70\x2a\x60\x6e\xc5\x0a\x36\xa1\x25\x63\xef\x14\x5a\xcf\x87" +
		"\xdf\xcc\x67\x6c\x99\xad\x4e\xae\x87\x5d\x2b\x7b\x84\x62\x89\xa9\xa1\xd4\x92\x4f\xe1\x0a\xd9\xef\x7d\xcc\xbe\x21" +
		"\xf8\x17\x13\xf0\x2f\xf6\xe0\x9f\xc2\xe9\xb9\xab\x78\xb2\xae\xe2\x29\x53\xe6\x61\xfd\xc5\x6d\x89\x35\x6e\x31\x9e" +
		"\x79\x9d\xe0\xf5\xfe\x5c\x7c\x24\x5e\xa7\x18\xbc\xa7\x67\x7c\x26\x74\x82\xd0\xd3\x09\x42\x4f\x1f\xb3\xb8\x3e\x3f" +
		"\x07\xee\x7d\x0e\x4c\x31\xb0\xcc\x56\xff\xf2\x55\x10\x4e\xf8\xdf\xbc\x0c\x6e\x85\xe8\x9f\x3c\x10\x82\xe2\x53\x3f" +
		"\x12\x06\xe3\x6f\xf5\xed\xda\x93\x61\x36\xfe\xd5\xf7\x27\x6a\xec\xec\xef\x00\x00\x00\xff\xff\x60\x70\xc7\x20\x07" +
		"\x16\x00\x00")

func bindataMigrationsSqlTests6testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests6testsql,
		"migrations/sql/tests/6_test.sql",
	)
}

func bindataMigrationsSqlTests6testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests6testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/6_test.sql",
		size:        5639,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests7testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x6f\x1b\x37\x10\x3d\x47\xbf\x82\xc8\x65\x6d\x94\x8a\x1c\x17" +
		"\x89\x01\xf7\x54\xa0\x39\x04\x28\x1c\xa0\x49\xda\x43\x51\x10\x14\x39\xbb\x62\x44\x71\xb6\x1c\x6e\x15\x35\xca\x7f" +
		"\x2f\x48\xee\x07\x6d\x6d\x94\xf8\xd4\x5c\x84\x99\x21\x87\x9c\x79\xef\x0d\x57\xcb\x25\xfb\x61\x67\x1a\x2f\x03\xb0" +
		"\xf7\xed\xe2\xf5\xdd\xdb\x57\xbf\xbd\x63\xaf\xef\xde\xbd\x61\x9b\x83\xf6\x52\x28\x6b\xc0\x05\x76\x61\x34\x67\xd2" +
		"\x5a\xdc\x83\x16\x0a\x3d\x09\xf4\xa6\x31\x8e\x38\xcb\x3b\x84\x93\x3b\x18\x1d\x02\xe5\x21\x70\xe6\x41\x1b\x0f\x2a" +
		"\x88\xce\x1b\xe2\xac\xf1\xd2\x05\x11\x0e\x2d\x50\x5c\xa3\x16\x1d\xc1\xe0\x93\xc2\x16\x38\xc3\xbd\x03\xcf\x59\x8b" +
		"\xd6\xa8\x43\xcc\xe3\x2c\x20\x65\xa3\x3f\x3d\xd9\x16\x1b\xec\xa3\xe8\x82\x54\x81\x1e\xdc\x2e\xe0\x63\x6b\x3c\x90" +
		"\x90\x81\x33\x02\x15\xd0\x0b\xa3\xc1\x05\x53\x1b\xf0\x39\xf5\xc3\x7e\x4b\xf9\x77\xb8\x69\x0b\x4e\x80\xd3\x2d\x1a" +
		"\x17\x84\xec\xc2\x46\xec\x20\x6c\x50\xc7\x7a\xff\xee\x80\x86\x56\x06\x0f\xd7\x1f\x62\x7f\x64\x1a\x67\x5c\x23\xa4" +
		"\x6d\x38\xeb\x08\xbc\x71\x35\xa6\x28\x68\x31\x76\x9a\x56\xa9\xcb\x29\xb1\x6d\xce\x64\xa7\x0d\x38\x05\x97\x8b\xdf" +
		"\x7f\xfe\xf5\xfd\xab\xb7\x0b\xc6\x2e\xaa\x9b\x65\xee\xa4\xe2\xac\xda\x84\xd0\xde\xae\x56\x16\x95\xb4\x1b\xa4\x70" +
		"\xec\x03\x0d\x62\x63\x21\xee\x20\xdc\x41\x91\x20\xd7\x4a\x43\xfd\x6d\xa9\xb1\x41\xf4\xe6\x5f\x10\x0a\x35\x1c\xcd" +
		"\xae\xb5\x46\x99\x74\x4c\x82\xe2\x68\xb4\x48\x46\x8c\xd4\x88\xc7\xb5\xf4\x29\x0f\x1c\x48\x2a\xee\xc8\x74\x15\x81" +
		"\x80\xe5\xf2\x4c\x3b\x0d\x4e\x07\x1d\x6b\x8c\xde\xd5\xb4\x9e\xf9\x8a\x3b\x3e\x3d\xdd\xc2\x81\x9e\xde\xb2\x3f\xff" +
		"\xfa\x5c\x1c\x10\x39\x8b\xae\x43\x07\x45\xb8\xf3\xe6\xf9\x71\xb2\xaf\xe3\x92\xa7\xeb\x17\x2f\xb3\xf1\xe2\x3a\x19" +
		"\x6d\xb7\xb6\x46\x0d\x69\x74\xbb\x5a\xed\xf7\xfb\x67\xe8\x0f\xcf\x68\xb3\x92\xad\xa9\x2e\x7f\x5a\x94\xb3\xb0\x78" +
		"\x92\x87\x01\x23\x5e\xd7\x49\x16\x51\x47\x4a\x06\x83\x4e\x10\x10\x19\x74\xfd\x8c\x4c\x6b\xa0\xb3\xf4\x32\xdf\x23" +
		"\xc1\x4f\x22\xbf\x16\x1b\xe3\x96\x7d\xe6\xd2\xe8\x8a\xb3\xbb\x37\x7f\x5c\x5c\x72\x56\xdd\x2c\xa9\x5b\x3f\xae\x82" +
		"\x5e\x8c\xec\x42\x6d\xa4\xb5\xe0\x1a\xe0\xec\x1f\xf0\x49\xe8\xe3\x54\xc4\xea\xfa\x5a\x4a\x31\x5b\xce\x68\x6b\xda" +
		"\x31\x04\x5a\xf4\x93\xa8\xc8\xd7\x73\x0d\x4d\x1b\xa3\x87\x46\x2b\x11\x47\x10\x3e\x86\x34\x95\x66\x44\x24\x5d\x59" +
		"\xee\x16\x27\x6a\x4f\x60\x8c\x55\x57\xa9\xfd\xa1\xf2\xec\x4d\xd2\x49\xc0\xc4\xf2\xb3\x33\xbc\x2d\x15\x67\xb5\xb4" +
		"\x04\x79\x47\x2c\xbd\x4f\x24\x5f\x4f\xb0\x0e\xe8\x7e\xfa\x9c\x57\x67\x08\xa8\x6e\x96\xb2\xd3\x5f\x41\x5e\xc5\x41" +
		"\x76\xe1\x3b\x82\xbc\x46\xaf\xe2\x09\xfd\xb3\x32\x3d\x71\x73\x6c\xe4\x48\x51\xf3\x2c\x3d\x9c\x49\xe5\xff\x7f\x8e" +
		"\x72\x67\x69\x1c\xce\x70\xf6\xa0\xb2\x48\x61\x36\x94\x7f\x1c\x97\x62\x23\x9d\xb6\xa0\xef\x71\x9a\x3e\x59\x13\x41" +
		"\x1e\x76\xb0\x5b\x47\x6c\x07\x4b\xd4\xe8\x39\x03\xef\xd1\x3f\xe4\x69\x00\x5e\x2a\x05\x44\xf9\x21\x9d\xa2\xc3\xd3" +
		"\x3a\xc7\xf7\x5e\x92\xe8\x08\xf4\x74\xff\xb7\x0e\xcf\x00\x6e\xf0\x1d\x70\xf6\xe3\xcb\xab\xab\x01\xd0\xfb\xe8\x96" +
		"\xa1\x89\x9a\xaf\xeb\x7f\xfe\xe5\x99\x85\xae\x50\xfe\x59\xd0\xa4\x3a\x41\xee\x1c\x22\x5f\xd4\xfb\x79\x5c\x92\x88" +
		"\x4e\x51\xa9\x9e\x9f\xe8\x6f\x82\xa3\x10\xe0\x79\x54\x70\x5d\x77\xd4\x17\xfb\x85\x8f\xc3\x88\xc6\xe9\xdb\x50\xa4" +
		"\xdf\xef\x61\x54\x7e\x39\x60\xd3\xe6\x54\x54\xf9\x0f\xee\x17\xdc\xbb\xc5\x7f\x01\x00\x00\xff\xff\x3e\xb0\x86\x0e" +
		"\xd3\x09\x00\x00")

func bindataMigrationsSqlTests7testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests7testsql,
		"migrations/sql/tests/7_test.sql",
	)
}

func bindataMigrationsSqlTests7testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests7testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/7_test.sql",
		size:        2515,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831414, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests8testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x6f\x1b\x37\x10\x3d\x47\xbf\x82\xd0\x65\x6d\x94\x8a\x1c\x17" +
		"\x09\x0c\xf7\x54\xa0\x39\x04\x28\x1c\xa0\x49\xda\x43\x51\x10\x14\x39\xbb\x62\x4c\x71\xb6\x1c\x6e\xd7\x6a\xe4\xff" +
		"\x5e\x90\xdc\x2f\xd9\x5b\xd9\x3e\xb5\x17\x81\x33\xe4\x90\x33\xef\xcd\x9b\xd5\x6a\xc5\xbe\xdb\x99\xca\xcb\x00\xec" +
		"\x4b\xbd\xf8\x70\xf3\xe9\xfd\x2f\x9f\xd9\x87\x9b\xcf\x1f\xd9\x76\xaf\xbd\x14\xca\x1a\x70\x81\x9d\x19\xcd\x99\xb4" +
		"\x16\x5b\xd0\x42\xa1\x27\x81\xde\x54\xc6\x11\x67\xf9\x84\x70\x72\x07\x83\x41\xa0\x3c\x04\xce\x3c\x68\xe3\x41\x05" +
		"\xd1\x78\x43\x9c\x55\x5e\xba\x20\xc2\xbe\x06\x8a\x7b\x54\xa3\x23\xe8\x6d\x52\x58\x03\x67\xd8\x3a\xf0\x9c\xd5\x68" +
		"\x8d\xda\xc7\x38\xce\x02\x52\x5e\x74\xb7\xa7\xb5\xc5\x0a\x3b\x2f\xba\x20\x55\xa0\x07\xaf\x0b\xb8\xab\x8d\x07\x12" +
		"\x32\x70\x46\xa0\x02\x7a\x61\x34\xb8\x60\x4a\x03\x3e\x87\x7e\x6d\x6f\x29\xff\xf6\x2f\xdd\x82\x13\xe0\x74\x8d\xc6" +
		"\x05\x21\x9b\xb0\x15\x3b\x08\x5b\xd4\x31\xdf\x3f\x1b\xa0\xbe\x94\xde\xc2\xcd\xd7\x58\x1f\x99\xca\x19\x57\x09\x69" +
		"\x2b\xce\x1a\x02\x6f\x5c\x89\xc9\x0b\x5a\x0c\x95\xa6\x5d\x6a\x72\x48\x2c\x9b\x33\xd9\x68\x03\x4e\xc1\xf9\xe2\xd7" +
		"\x1f\x7f\xfe\xf2\xfe\xd3\x82\xb1\xb3\xe2\x6a\x95\x2b\x29\x38\x2b\xb6\x21\xd4\xd7\xeb\xb5\x45\x25\xed\x16\x29\x1c" +
		"\x3a\x47\x85\x58\x59\x88\x27\x08\x77\x30\x09\x90\x1b\xa5\xa1\x7c\x5e\x68\x2c\x10\xbd\xf9\x1b\x84\x42\x0d\x07\xb3" +
		"\xab\xad\x51\x26\x5d\x93\xa0\x38\x18\x2d\xd2\x22\x7a\x4a\xc4\xc3\x46\xfa\x14\x07\x0e\x24\x4d\xde\xc8\x74\x4d\x1c" +
		"\x01\xa7\xdb\x33\xe5\x54\x38\x5e\x74\x28\x31\x5a\x17\xe3\x7e\xe6\x2b\x9e\xf8\xb6\xbc\x85\x3d\x2d\xaf\xd9\xef\x7f" +
		"\xdc\x4f\x2e\x88\x9c\x45\xd3\xa1\x83\x89\xbb\xf1\xe6\xcd\x61\x5c\x5f\xc6\x2d\x4f\x97\x6f\xdf\xe5\xc5\xdb\xcb\xb4" +
		"\xa8\x9b\x8d\x35\xaa\x0f\xa3\xeb\xf5\xba\x6d\xdb\xd7\xe8\xf7\xaf\x69\xbb\x96\xb5\x29\xce\x7f\x58\x4c\xb5\xb0\x78" +
		"\x95\xc5\x80\x11\xaf\xcb\xd4\x16\xb1\x8f\x94\x0c\x06\x9d\x20\x20\x32\xe8\x3a\x8d\x8c\x7b\xa0\x73\xeb\x65\xbe\x07" +
		"\x82\x5f\x45\x7e\x2d\x56\xc6\xad\xba\xc8\x95\xd1\x05\x67\x37\x1f\x7f\x3b\x3b\xe7\xac\xb8\x5a\x51\xb3\x79\x59\x06" +
		"\x5d\x33\xb2\x33\xb5\x95\xd6\x82\xab\x80\xb3\xbf\xc0\xa7\x46\x1f\x54\x11\xb3\xeb\x72\x99\x36\xb3\xe5\x8c\x6e\x4d" +
		"\x3d\xb8\x40\x8b\x4e\x89\x8a\x7c\x39\x57\xd0\x78\x30\x5a\x68\xb4\x12\x51\x82\x70\x17\x92\x2a\xcd\x80\x48\x7a\x72" +
		"\x7a\x5a\x3c\xea\xf6\x04\xc6\x90\x75\x91\xca\xef\x33\xcf\xd6\xd8\x3a\x09\x98\x98\x7e\x36\xfa\xd9\x52\x70\x56\x4a" +
		"\x4b\x90\x4f\xc4\xd4\xbb\x40\xf2\xe5\x08\x6b\x8f\xee\xb7\xfb\xbc\x3b\x43\x40\x71\xb5\x92\x8d\x7e\x02\x79\x15\x85" +
		"\xec\xc2\xff\x08\xf2\x12\xbd\x8a\x37\x74\x63\x65\x1c\x71\x73\x6c\x64\xcf\x24\xe7\x59\x7a\x38\x93\xca\xe7\xc1\x0a" +
		"\x77\xe1\xbf\x27\x2b\x97\x98\x74\x71\x82\xbc\x07\x99\x45\x2e\xf3\x42\x75\x83\xa4\x44\x5c\x5e\x2f\x37\xd2\x2f\xef" +
		"\x5f\xc6\xb2\xd8\x4a\xa7\x2d\xe8\x23\xb6\xd3\xc7\x6c\xa4\xce\xc3\x0e\x76\x9b\x88\x7a\xbf\x12\x25\x7a\xce\xc0\x7b" +
		"\xf4\x0f\x19\xec\x29\x91\x4a\x01\x51\x1e\xb1\xa3\xb7\x1f\xba\x73\x9d\xd0\x4a\x12\x0d\x81\x1e\xdf\x7f\xae\xac\x7a" +
		"\xb4\x83\x6f\x80\xb3\xef\xdf\x5d\x5c\xf4\x08\x1f\xc3\x3d\x75\x8d\x5c\x3d\xad\x8c\xf9\x99\x34\x0b\xdd\x44\x13\x27" +
		"\x41\x4b\x5d\x78\x8c\xdc\x29\x44\x4e\x28\xe1\x39\xad\x9c\xdb\xeb\x31\x3c\xc5\x9b\x47\x9d\x39\xe2\x72\xdc\x9a\x2f" +
		"\xe9\x31\xdc\x94\x0d\x75\x65\xfc\xcb\x07\x65\xc0\xe9\xf1\x3c\x99\x84\x1f\x17\x35\x88\x64\xaa\xc5\xf1\x70\x4a\x6a" +
		"\xfa\xaf\xef\x27\x6c\xdd\xe2\x9f\x00\x00\x00\xff\xff\x17\xe0\x53\xaa\x07\x0a\x00\x00")

func bindataMigrationsSqlTests8testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests8testsql,
		"migrations/sql/tests/8_test.sql",
	)
}

func bindataMigrationsSqlTests8testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests8testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/8_test.sql",
		size:        2567,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1555175700, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"migrations/sql/mysql/.gitkeep":    bindataMigrationsSqlMysqlGitkeep,
	"migrations/sql/mysql/4.sql":       bindataMigrationsSqlMysql4sql,
	"migrations/sql/mysql/5.sql":       bindataMigrationsSqlMysql5sql,
	"migrations/sql/mysql/6.sql":       bindataMigrationsSqlMysql6sql,
	"migrations/sql/mysql/7.sql":       bindataMigrationsSqlMysql7sql,
	"migrations/sql/mysql/8.sql":       bindataMigrationsSqlMysql8sql,
	"migrations/sql/postgres/.gitkeep": bindataMigrationsSqlPostgresGitkeep,
	"migrations/sql/postgres/4.sql":    bindataMigrationsSqlPostgres4sql,
	"migrations/sql/postgres/5.sql":    bindataMigrationsSqlPostgres5sql,
	"migrations/sql/postgres/6.sql":    bindataMigrationsSqlPostgres6sql,
	"migrations/sql/postgres/7.sql":    bindataMigrationsSqlPostgres7sql,
	"migrations/sql/postgres/8.sql":    bindataMigrationsSqlPostgres8sql,
	"migrations/sql/shared/.gitkeep":   bindataMigrationsSqlSharedGitkeep,
	"migrations/sql/shared/1.sql":      bindataMigrationsSqlShared1sql,
	"migrations/sql/shared/2.sql":      bindataMigrationsSqlShared2sql,
	"migrations/sql/shared/3.sql":      bindataMigrationsSqlShared3sql,
	"migrations/sql/tests/.gitkeep":    bindataMigrationsSqlTestsGitkeep,
	"migrations/sql/tests/1_test.sql":  bindataMigrationsSqlTests1testsql,
	"migrations/sql/tests/2_test.sql":  bindataMigrationsSqlTests2testsql,
	"migrations/sql/tests/3_test.sql":  bindataMigrationsSqlTests3testsql,
	"migrations/sql/tests/4_test.sql":  bindataMigrationsSqlTests4testsql,
	"migrations/sql/tests/5_test.sql":  bindataMigrationsSqlTests5testsql,
	"migrations/sql/tests/6_test.sql":  bindataMigrationsSqlTests6testsql,
	"migrations/sql/tests/7_test.sql":  bindataMigrationsSqlTests7testsql,
	"migrations/sql/tests/8_test.sql":  bindataMigrationsSqlTests8testsql,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op:   "open",
					Path: name,
					Err:  os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op:   "open",
			Path: name,
			Err:  os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"migrations": {Func: nil, Children: map[string]*bintree{
		"sql": {Func: nil, Children: map[string]*bintree{
			"mysql": {Func: nil, Children: map[string]*bintree{
				".gitkeep": {Func: bindataMigrationsSqlMysqlGitkeep, Children: map[string]*bintree{}},
				"4.sql":    {Func: bindataMigrationsSqlMysql4sql, Children: map[string]*bintree{}},
				"5.sql":    {Func: bindataMigrationsSqlMysql5sql, Children: map[string]*bintree{}},
				"6.sql":    {Func: bindataMigrationsSqlMysql6sql, Children: map[string]*bintree{}},
				"7.sql":    {Func: bindataMigrationsSqlMysql7sql, Children: map[string]*bintree{}},
				"8.sql":    {Func: bindataMigrationsSqlMysql8sql, Children: map[string]*bintree{}},
			}},
			"postgres": {Func: nil, Children: map[string]*bintree{
				".gitkeep": {Func: bindataMigrationsSqlPostgresGitkeep, Children: map[string]*bintree{}},
				"4.sql":    {Func: bindataMigrationsSqlPostgres4sql, Children: map[string]*bintree{}},
				"5.sql":    {Func: bindataMigrationsSqlPostgres5sql, Children: map[string]*bintree{}},
				"6.sql":    {Func: bindataMigrationsSqlPostgres6sql, Children: map[string]*bintree{}},
				"7.sql":    {Func: bindataMigrationsSqlPostgres7sql, Children: map[string]*bintree{}},
				"8.sql":    {Func: bindataMigrationsSqlPostgres8sql, Children: map[string]*bintree{}},
			}},
			"shared": {Func: nil, Children: map[string]*bintree{
				".gitkeep": {Func: bindataMigrationsSqlSharedGitkeep, Children: map[string]*bintree{}},
				"1.sql":    {Func: bindataMigrationsSqlShared1sql, Children: map[string]*bintree{}},
				"2.sql":    {Func: bindataMigrationsSqlShared2sql, Children: map[string]*bintree{}},
				"3.sql":    {Func: bindataMigrationsSqlShared3sql, Children: map[string]*bintree{}},
			}},
			"tests": {Func: nil, Children: map[string]*bintree{
				".gitkeep":   {Func: bindataMigrationsSqlTestsGitkeep, Children: map[string]*bintree{}},
				"1_test.sql": {Func: bindataMigrationsSqlTests1testsql, Children: map[string]*bintree{}},
				"2_test.sql": {Func: bindataMigrationsSqlTests2testsql, Children: map[string]*bintree{}},
				"3_test.sql": {Func: bindataMigrationsSqlTests3testsql, Children: map[string]*bintree{}},
				"4_test.sql": {Func: bindataMigrationsSqlTests4testsql, Children: map[string]*bintree{}},
				"5_test.sql": {Func: bindataMigrationsSqlTests5testsql, Children: map[string]*bintree{}},
				"6_test.sql": {Func: bindataMigrationsSqlTests6testsql, Children: map[string]*bintree{}},
				"7_test.sql": {Func: bindataMigrationsSqlTests7testsql, Children: map[string]*bintree{}},
				"8_test.sql": {Func: bindataMigrationsSqlTests8testsql, Children: map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
