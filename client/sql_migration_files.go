// Code generated by go-bindata. DO NOT EDIT.
// sources:
// migrations/sql/mysql/11.sql
// migrations/sql/mysql/4.sql
// migrations/sql/mysql/8.sql
// migrations/sql/mysql/9.sql
// migrations/sql/postgres/11.sql
// migrations/sql/postgres/4.sql
// migrations/sql/postgres/8.sql
// migrations/sql/postgres/9.sql
// migrations/sql/shared/.gitattributes
// migrations/sql/shared/.gitkeep
// migrations/sql/shared/1.sql
// migrations/sql/shared/10.sql
// migrations/sql/shared/12.sql
// migrations/sql/shared/2.sql
// migrations/sql/shared/3.sql
// migrations/sql/shared/5.sql
// migrations/sql/shared/6.sql
// migrations/sql/shared/7.sql
// migrations/sql/tests/.gitkeep
// migrations/sql/tests/10_test.sql
// migrations/sql/tests/11_test.sql
// migrations/sql/tests/12_test.sql
// migrations/sql/tests/1_test.sql
// migrations/sql/tests/2_test.sql
// migrations/sql/tests/3_test.sql
// migrations/sql/tests/4_test.sql
// migrations/sql/tests/5_test.sql
// migrations/sql/tests/6_test.sql
// migrations/sql/tests/7_test.sql
// migrations/sql/tests/8_test.sql
// migrations/sql/tests/9_test.sql

package client

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataMigrationsSqlMysql11sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x0a\x0d\x70" +
		"\x71\x0c\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x08\x76\x0d\x51\x48\x2c\x4d\xc9\x4c\xcd\x4b" +
		"\x4e\xb5\x55\x57\xb7\xe6\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x41\x53\xe9\xeb\xef\xe2\xe9\x16\x09\x57\xac\x10" +
		"\xe2\x1a\x11\xa2\xe0\xe7\x1f\xa2\xe0\x17\xea\xe3\x63\xcd\xc5\x85\x6c\x99\x4b\x7e\x79\x1e\x69\x26\x59\x73\x01\x02" +
		"\x00\x00\xff\xff\x72\x1b\x3f\x00\xad\x00\x00\x00")

func bindataMigrationsSqlMysql11sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlMysql11sql,
		"migrations/sql/mysql/11.sql",
	)
}

func bindataMigrationsSqlMysql11sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlMysql11sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/mysql/11.sql",
		size:        173,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831420, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlMysql4sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x0a\x0d\x70" +
		"\x71\x0c\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x08\x76\x0d\x51\x28\x4e\x4d\x2e\xc9\x2f\x8a" +
		"\xcf\x4c\x49\xcd\x2b\xc9\x4c\xcb\x4c\x2d\x8a\x2f\x2d\xca\xb4\x55\x57\xd7\x51\xc8\x2a\xcf\x2e\x86\x33\xe0\xa2\x45" +
		"\xa9\x85\xa5\xa9\xc5\x25\x20\x3e\x48\xd6\x9a\xcb\xd1\x27\xc4\x35\x48\x21\xc4\xd1\xc9\x07\xcd\x74\x5f\x7f\x17\x4f" +
		"\xb7\x48\xec\x16\x28\x84\xb8\x46\x84\x28\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x10\x36\x04\xe4\x04\x72\xf4\x90\x63\x17" +
		"\xb2\x0f\xd1\xf5\x72\x21\x87\xaa\x4b\x7e\x79\x1e\x05\xde\x27\xc1\xd7\x24\x7a\x96\x0c\x3f\x5a\x03\x02\x00\x00\xff" +
		"\xff\xe1\xce\x54\x48\x2f\x02\x00\x00")

func bindataMigrationsSqlMysql4sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlMysql4sql,
		"migrations/sql/mysql/4.sql",
	)
}

func bindataMigrationsSqlMysql4sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlMysql4sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/mysql/4.sql",
		size:        559,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831420, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlMysql8sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x0a\x0d\x70" +
		"\x71\x0c\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x08\x76\x0d\x51\x48\xcc\xc9\xc9\x2f\x4f\x4d" +
		"\x89\x4f\xce\x2f\x2a\x8e\xcf\x2f\xca\x4c\xcf\xcc\x2b\xb6\x55\x57\xb7\xe6\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2" +
		"\x41\xd3\xe5\xeb\xef\xe2\xe9\x16\x89\x55\xa3\x42\x88\x6b\x44\x88\x82\x9f\x7f\x88\x82\x5f\xa8\x8f\x8f\x35\x17\x17" +
		"\xb2\x23\x5c\xf2\xcb\xf3\xc8\x37\xd5\x9a\x0b\x10\x00\x00\xff\xff\x6f\xdd\xdb\x91\xd1\x00\x00\x00")

func bindataMigrationsSqlMysql8sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlMysql8sql,
		"migrations/sql/mysql/8.sql",
	)
}

func bindataMigrationsSqlMysql8sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlMysql8sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/mysql/8.sql",
		size:        209,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831420, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlMysql9sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcf\xbd\x6e\x83\x30\x14\x86\xe1\x9d\xab\xf8\xc6\x56\x15\x57\xc0\xe4" +
		"\xe2\xa3\xca\x2a\x1c\x53\xd7\x96\xca\x64\xa1\x1a\xb5\x16\x09\x21\x88\x28\xc9\xdd\x47\x8a\x32\xc0\x10\xd8\xcf\xcf" +
		"\xfb\xa4\x29\xde\xf6\xf1\x6f\x6c\xa6\x16\x6e\x48\x44\x61\xc9\xc0\x8a\xf7\x82\xf0\x7f\x0d\x63\xe3\x7f\x77\xb1\xed" +
		"\x27\x48\xa3\x2b\x54\x46\x95\xc2\xd4\xf8\xa4\x3a\x4b\x72\x43\xc2\x12\x1c\xab\x2f\x47\x50\x2c\xe9\x67\xb1\xe2\x63" +
		"\xb8\xf8\x18\xfc\xe9\x08\xcd\xcb\x63\x2f\x31\xbc\x66\xcf\x7f\x09\x29\x31\x74\x50\x6c\xe1\xf8\x5b\x7d\x30\x49\x08" +
		"\x67\xb5\x57\x9c\x1b\x2a\x89\xed\xb2\x24\x99\x23\xe4\xe1\xdc\x6f\x30\x72\x5d\xb8\x92\x31\x74\x2b\x0d\xf7\xc1\x35" +
		"\xd4\x46\xff\x2c\xf0\xc1\xbd\x05\x00\x00\xff\xff\x59\x09\x30\x1a\x6a\x01\x00\x00")

func bindataMigrationsSqlMysql9sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlMysql9sql,
		"migrations/sql/mysql/9.sql",
	)
}

func bindataMigrationsSqlMysql9sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlMysql9sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/mysql/9.sql",
		size:        362,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831420, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlPostgres11sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x0a\x0d\x70" +
		"\x71\x0c\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x08\x76\x0d\x51\x48\x2c\x4d\xc9\x4c\xcd\x4b" +
		"\x4e\xb5\x55\x57\xb7\xe6\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x41\x53\x09\x91\x70\xf6\xf7\x09\xf5\xf5\x83\x6b" +
		"\x01\xeb\xf7\xf3\x0f\x51\xf0\x0b\xf5\xf1\xb1\xe6\xe2\x42\xb6\xd1\x25\xbf\x3c\x8f\x54\xe3\x5c\x82\xfc\x03\x90\xcc" +
		"\x03\x04\x00\x00\xff\xff\x88\xa9\x34\xbb\xc1\x00\x00\x00")

func bindataMigrationsSqlPostgres11sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlPostgres11sql,
		"migrations/sql/postgres/11.sql",
	)
}

func bindataMigrationsSqlPostgres11sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlPostgres11sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/postgres/11.sql",
		size:        193,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831420, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlPostgres4sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x0a\x0d\x70" +
		"\x71\x0c\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x08\x76\x0d\x51\x28\x4e\x4d\x2e\xc9\x2f\x8a" +
		"\xcf\x4c\x49\xcd\x2b\xc9\x4c\xcb\x4c\x2d\x8a\x2f\x2d\xca\xb4\x55\x57\xd7\x51\xc8\x2a\xcf\x2e\x86\x33\xe0\xa2\x45" +
		"\xa9\x85\xa5\xa9\xc5\x25\x20\x3e\x48\xd6\x9a\xcb\xd1\x27\xc4\x35\x48\x21\xc4\xd1\xc9\x07\xcd\x74\x88\x84\xb3\xbf" +
		"\x4f\xa8\xaf\x1f\x76\x6b\xc0\x0e\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\x21\xd6\x24\x90\x6b\xc8\xd6\x48\xb6\xad\xc8\xde" +
		"\x46\x33\x80\x0b\x39\xa4\x5d\xf2\xcb\xf3\x28\x0a\x12\x97\x20\xff\x00\xf2\xc2\x84\x6c\x9d\xe4\xdb\x8b\x12\x2a\x68" +
		"\x26\x00\x02\x00\x00\xff\xff\xda\x74\x4a\x00\x80\x02\x00\x00")

func bindataMigrationsSqlPostgres4sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlPostgres4sql,
		"migrations/sql/postgres/4.sql",
	)
}

func bindataMigrationsSqlPostgres4sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlPostgres4sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/postgres/4.sql",
		size:        640,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831420, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlPostgres8sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x0a\x0d\x70" +
		"\x71\x0c\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x08\x76\x0d\x51\x48\xcc\xc9\xc9\x2f\x4f\x4d" +
		"\x89\x4f\xce\x2f\x2a\x8e\xcf\x2f\xca\x4c\xcf\xcc\x2b\xb6\x55\x57\xb7\xe6\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2" +
		"\x41\xd3\x05\x91\x70\xf6\xf7\x09\xf5\xf5\xc3\xaa\x1d\x6c\xae\x9f\x7f\x88\x82\x5f\xa8\x8f\x8f\x35\x17\x27\x27\x27" +
		"\x27\x17\xb2\x6b\x5c\xf2\xcb\xf3\x28\x31\xde\x25\xc8\x3f\x00\xc9\x7c\x40\x00\x00\x00\xff\xff\x1a\x47\xba\x7f\xe9" +
		"\x00\x00\x00")

func bindataMigrationsSqlPostgres8sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlPostgres8sql,
		"migrations/sql/postgres/8.sql",
	)
}

func bindataMigrationsSqlPostgres8sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlPostgres8sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/postgres/8.sql",
		size:        233,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831420, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlPostgres9sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\xb1\x6e\x83\x30\x10\x86\x77\x3f\xc5\x8d\xa0\x8a\x27\xf0\xe4\xe2" +
		"\x1b\xac\x1a\x43\x8d\x2d\x95\xc9\x42\x35\x6a\x2d\xb7\xc4\x41\x44\x09\x6f\x1f\x09\x65\x08\x43\x12\x65\xc8\x78\xba" +
		"\xfb\xee\xee\xfb\x8b\x02\xde\xfe\xc3\xcf\xd4\xcf\x03\xd8\x44\x98\x34\xa8\xc1\xb0\x77\x89\xf0\xbb\xf8\xa9\x77\xdf" +
		"\x7f\x61\x18\x67\xe0\xba\x6e\xa0\xac\x55\x6b\x34\x13\xca\x6c\x9a\x2e\xc5\x61\xa1\xb7\x59\xc6\x39\xa4\x08\x2d\x6a" +
		"\xc1\xe4\x83\xb9\x46\x8b\x8a\xe9\x0e\x3e\xb0\x83\x2c\xc5\x9c\x92\x52\x23\x33\x08\x56\x89\x4f\x8b\x20\x14\xc7\xaf" +
		"\xed\xf5\xe0\x4f\x2e\x78\x77\xd8\x43\xad\xb6\x0b\xb3\xe0\x73\x4a\xc8\xb5\x23\xdf\x1d\xc7\xd7\x58\x5e\x58\x69\x2b" +
		"\x05\x29\x52\xb2\xd6\xf7\xde\x7d\x26\x89\x55\xe4\x1c\x00\x00\xff\xff\x69\x80\x20\x3b\xac\x01\x00\x00")

func bindataMigrationsSqlPostgres9sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlPostgres9sql,
		"migrations/sql/postgres/9.sql",
	)
}

func bindataMigrationsSqlPostgres9sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlPostgres9sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/postgres/9.sql",
		size:        428,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831420, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlSharedGitattributes = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd2\x2b\x2e\xcc\x51\xd0\x4d\x2e\xca\x49\xe3\x02\x04\x00\x00\xff\xff" +
		"\x5b\x50\x4f\xd9\x0c\x00\x00\x00")

func bindataMigrationsSqlSharedGitattributesBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlSharedGitattributes,
		"migrations/sql/shared/.gitattributes",
	)
}

func bindataMigrationsSqlSharedGitattributes() (*asset, error) {
	bytes, err := bindataMigrationsSqlSharedGitattributesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/shared/.gitattributes",
		size:        12,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831420, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlSharedGitkeep = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func bindataMigrationsSqlSharedGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlSharedGitkeep,
		"migrations/sql/shared/.gitkeep",
	)
}

func bindataMigrationsSqlSharedGitkeep() (*asset, error) {
	bytes, err := bindataMigrationsSqlSharedGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/shared/.gitkeep",
		size:        0,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlShared1sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x4f\x6f\xf2\x30\x0c\x87\xcf\xcd\xa7\xf0\x11\xf4\xbe\x5c\x26\x71" +
		"\xe2\xc4\x46\x27\xa1\x75\x80\x4a\x91\xc6\xa9\x0a\xa9\x55\x22\x95\x38\x72\xcc\x58\xbf\xfd\x44\x29\x7f\xd4\x95\x5c" +
		"\x72\x78\x7e\x4f\x6c\x2b\x1e\x8d\xe0\xdf\xc1\x96\xac\x05\x61\xe3\xd5\x5b\x1a\x4f\xb3\x18\xb2\xe9\x6b\x12\xc3\xfc" +
		"\x1d\x16\xcb\x0c\xe2\xaf\xf9\x3a\x5b\xc3\xbe\x2e\x58\xe7\xa6\xb2\xe8\x04\x06\x2a\xb2\x05\x34\x27\xba\x5c\xdf\x9a" +
		"\xcd\x5e\xf3\xe0\x65\x3c\x1e\x36\xda\x62\x93\x24\xb0\x4a\xe7\x9f\xd3\x74\x0b\x1f\xf1\xf6\xbf\x8a\x2e\x72\xee\xf4" +
		"\x01\x1b\x4f\xf0\x47\x6e\xd9\x3b\x0f\x68\x18\x05\x20\xea\x72\xc6\xc2\x32\x1a\xc9\x8f\x6c\x43\x0f\x2f\x59\x3b\xc9" +
		"\xa5\xf6\x18\x7a\xdf\x67\x0c\x9e\x5c\xc0\x6b\xa4\xcb\x83\x21\x7f\xee\x2c\x6a\x66\xea\x52\x3a\x39\xe4\xa7\xd4\x53" +
		"\x65\x4d\x7d\xee\xac\xb7\xb4\x50\x68\x59\xaf\xdd\x4e\xfe\xcc\xae\xa8\xa4\xbb\xfe\x47\x26\x27\xda\x48\xe8\xa7\xfe" +
		"\xb8\xab\xac\xb9\x16\xde\x11\x55\xa8\xdd\x2d\xa0\x86\x13\xa5\x1e\x97\x60\x46\x27\xa7\x66\xe9\x72\xd5\x2e\xc1\xe3" +
		"\xb7\x4f\xd4\x6f\x00\x00\x00\xff\xff\xe3\x71\x30\xa4\x2f\x02\x00\x00")

func bindataMigrationsSqlShared1sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlShared1sql,
		"migrations/sql/shared/1.sql",
	)
}

func bindataMigrationsSqlShared1sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlShared1sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/shared/1.sql",
		size:        559,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831420, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlShared10sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09" +
		"\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x70\x74\x71\x51\x48\x2c" +
		"\x4d\xc9\x4c\xcd\x4b\x4e\x55\x08\x71\x8d\x08\xb1\xe6\xe2\x42\xd6\xeb\x92\x5f\x9e\x87\x5b\xb7\x4b\x90\x7f\x80\x82" +
		"\xb3\xbf\x4f\xa8\xaf\x1f\xdc\x14\x6b\x2e\x40\x00\x00\x00\xff\xff\x0f\x29\xb1\x7b\x7c\x00\x00\x00")

func bindataMigrationsSqlShared10sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlShared10sql,
		"migrations/sql/shared/10.sql",
	)
}

func bindataMigrationsSqlShared10sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlShared10sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/shared/10.sql",
		size:        124,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831420, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlShared12sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x31\x0e\xc2\x20\x14\x87\xf1\xbd\xa7\xf8\x8f\x1a\xd3\x13\x74\x42" +
		"\xa9\xd3\xb3\x98\x06\xe6\x86\x14\xa2\x24\x42\x09\x3e\xd3\x78\x7b\x47\x59\x6c\x3c\xc0\xf7\xe5\xd7\xb6\x38\xc4\x70" +
		"\x2b\x96\x3d\x4c\x6e\x04\xe9\x7e\x84\x16\x47\xea\x71\x7f\xbb\x62\xa7\xf9\x11\x7c\x62\x08\x29\x31\x17\x6f\xd9\xbb" +
		"\xc9\x32\x38\x44\xff\x64\x1b\x33\x06\xa5\x31\x18\x22\xc8\xfe\x2c\x0c\x69\xa4\x65\xdd\xed\xbb\xed\xd3\x2b\xbb\xff" +
		"\x4f\x4d\x6d\x94\xcb\x9a\x7e\xbf\xe5\xa8\xae\x38\x29\x32\x97\xa1\xd2\x6e\x60\xea\xe0\x8b\xea\x9a\x4f\x00\x00\x00" +
		"\xff\xff\x64\x78\xd5\x23\x17\x01\x00\x00")

func bindataMigrationsSqlShared12sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlShared12sql,
		"migrations/sql/shared/12.sql",
	)
}

func bindataMigrationsSqlShared12sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlShared12sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/shared/12.sql",
		size:        279,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831420, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlShared2sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcd\xb1\x0a\xc2\x30\x10\x06\xe0\x3d\x4f\xf1\xef\x52\x70\xef\x14\x4d" +
		"\x14\xe1\x4c\x24\x5c\xe6\x10\xea\xa1\x01\xad\x25\x0d\xa8\x6f\xef\xe0\xd2\xa5\xdb\xb7\x7d\x5d\x87\xcd\xb3\xdc\x6a" +
		"\x6e\x82\x38\x29\x4d\x6c\x03\x58\xef\xc8\xe2\xfe\xbd\xd6\x9c\x86\x47\x91\xb1\x41\x1b\x83\x3f\xd3\x2c\x43\x95\x96" +
		"\xe4\x33\x95\x2a\x73\xca\x0d\x27\xc7\xf6\x68\x03\x9c\x67\xb8\x48\x04\x63\x0f\x3a\x12\x63\xdb\x2b\xb5\x1c\xcc\xeb" +
		"\x3d\xae\x1f\x26\xf8\x0b\xf6\x9e\xe2\xd9\xad\x5e\xbd\xfa\x05\x00\x00\xff\xff\xa6\xd4\x57\x26\xb2\x00\x00\x00")

func bindataMigrationsSqlShared2sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlShared2sql,
		"migrations/sql/shared/2.sql",
	)
}

func bindataMigrationsSqlShared2sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlShared2sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/shared/2.sql",
		size:        178,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlShared3sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd2\x4d\x4b\xf4\x30\x10\xc0\xf1\x7b\x3f\xc5\xdc\xf6\x79\x90\x05\x15" +
		"\x3c\xed\x29\x6e\x2b\x1e\x62\x2b\x25\x15\x6f\xa1\x36\xb3\x6d\xf6\x65\x52\x93\x29\x8b\xdf\x5e\x76\x0f\x52\xd0\xad" +
		"\xa9\xf7\x99\x5f\x06\xfe\x59\x2e\xe1\xea\x60\x5b\x5f\x33\x42\xd5\x27\x42\xaa\xac\x04\x25\xee\x65\x06\xdd\x87\xf1" +
		"\xb5\x6e\xf6\x16\x89\x41\xa4\x29\x04\x6c\xd8\x79\x6d\x0d\x12\xdb\x8d\x45\xaf\x07\x6f\x41\x65\xaf\x6a\x35\xbd\xb8" +
		"\x3d\xee\x42\xec\x5c\xac\xe9\xf1\x7d\xc0\xc0\xa7\xf1\x28\x9b\xdd\x0e\x49\x23\x99\xde\x59\x62\x5d\x0f\xdc\xe9\x03" +
		"\x72\xe7\x0c\xbc\x88\x72\xfd\x28\xca\x7f\xb7\x77\xff\x21\x2f\x14\xe4\x95\x94\x90\x66\x0f\xa2\x92\x0a\x16\x8b\xc8" +
		"\x43\xdc\xdb\x16\x1b\xd6\xc1\xb6\x64\xa9\xd5\xf5\xbe\x85\x2f\xf9\xe6\xfa\x2f\xf2\x10\xd0\x5b\xda\xb8\xb3\x89\x46" +
		"\x7b\x0c\xbd\xa3\x80\x67\xfb\x57\x3a\x19\xa7\x4d\xdd\x91\x2e\x3f\x96\x96\xc5\x33\xac\x0b\x59\x3d\xe5\x3f\x47\x9e" +
		"\x38\x74\xbc\x7b\xea\x37\x63\x74\x86\x7c\xb9\x5e\x24\x30\xfe\x2e\x33\x57\xbe\x87\x8d\x04\xa6\xfa\xad\x92\xcf\x00" +
		"\x00\x00\xff\xff\x6c\x9f\x6c\xae\x7a\x03\x00\x00")

func bindataMigrationsSqlShared3sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlShared3sql,
		"migrations/sql/shared/3.sql",
	)
}

func bindataMigrationsSqlShared3sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlShared3sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/shared/3.sql",
		size:        890,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlShared5sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcf\xb1\x6a\x85\x30\x14\xc6\xf1\x3d\x4f\x71\xb6\x3b\x14\x9f\x20\x38" +
		"\xc4\xe6\x48\x87\xd3\x44\x62\x42\xc7\x60\x35\xd4\x50\x4d\x44\x22\xa5\x6f\xdf\xc5\x41\x0a\x72\x1f\xe0\xff\xf1\xfb" +
		"\xaa\x0a\x5e\xd6\xf8\xb5\x0f\x25\x80\xdb\x98\xeb\xa4\xb0\x08\xf3\xef\xb4\x0f\x7e\x5c\x62\x48\x05\x7a\xb4\x50\xf2" +
		"\x77\x48\x3e\xa4\x69\xcb\x31\x15\x3f\x1c\x65\xf6\x6b\x28\x73\x9e\xea\x47\xca\x29\x3c\xe0\xe3\x0d\x0d\xc2\x76\x7c" +
		"\x2e\x71\xac\xad\x71\xc8\x99\x20\x8b\x06\xac\x68\xe8\xdf\xa2\x34\xba\x83\x57\x4d\xee\x5d\x9d\x05\x67\xec\x2a\x91" +
		"\xf9\x27\xdd\xe7\x42\xca\x33\x83\x46\x6b\x42\xa1\x40\x69\x0b\xca\x11\x81\xc4\x56\x38\xb2\xd0\x0a\xea\x91\xdf\xfe" +
		"\xb9\x38\x4f\xf9\xd3\x87\x9c\xfd\x05\x00\x00\xff\xff\xe3\xdd\xa4\x90\x2c\x01\x00\x00")

func bindataMigrationsSqlShared5sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlShared5sql,
		"migrations/sql/shared/5.sql",
	)
}

func bindataMigrationsSqlShared5sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlShared5sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/shared/5.sql",
		size:        300,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlShared6sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09" +
		"\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x70\x74\x71\x51\x28\x2e" +
		"\x4d\xca\x4a\x4d\x2e\x89\x2f\xa9\x2c\x48\x55\x08\x73\x0c\x72\xf6\x70\x0c\xd2\x30\x34\xd5\x54\xf0\xf3\x0f\x51\xf0" +
		"\x0b\xf5\xf1\x51\x70\x71\x75\x73\x0c\xf5\x09\x51\x50\x57\xb7\xe6\xe2\x42\x36\xda\x25\xbf\x3c\x0f\xb7\xe1\x2e\x41" +
		"\xfe\x01\x0a\xce\xfe\x3e\xa1\xbe\x7e\x28\x96\x58\x73\x01\x02\x00\x00\xff\xff\x7b\xd9\xc9\x4e\x9f\x00\x00\x00")

func bindataMigrationsSqlShared6sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlShared6sql,
		"migrations/sql/shared/6.sql",
	)
}

func bindataMigrationsSqlShared6sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlShared6sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/shared/6.sql",
		size:        159,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlShared7sql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09" +
		"\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x70\x74\x71\x51\x48\xcc" +
		"\xc9\xc9\x2f\x4f\x4d\x89\x4f\xce\x2f\x2a\x8e\xcf\x2f\xca\x4c\xcf\xcc\x2b\x56\x08\x71\x8d\x08\xb1\xe6\xe2\x42\x36" +
		"\xc7\x25\xbf\x3c\x0f\xb7\x49\x2e\x41\xfe\x01\x0a\xce\xfe\x3e\xa1\xbe\x7e\x58\x4d\xb4\xe6\x02\x04\x00\x00\xff\xff" +
		"\xd4\xf7\x31\x81\x94\x00\x00\x00")

func bindataMigrationsSqlShared7sqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlShared7sql,
		"migrations/sql/shared/7.sql",
	)
}

func bindataMigrationsSqlShared7sql() (*asset, error) {
	bytes, err := bindataMigrationsSqlShared7sqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/shared/7.sql",
		size:        148,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTestsGitkeep = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func bindataMigrationsSqlTestsGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTestsGitkeep,
		"migrations/sql/tests/.gitkeep",
	)
}

func bindataMigrationsSqlTestsGitkeep() (*asset, error) {
	bytes, err := bindataMigrationsSqlTestsGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/.gitkeep",
		size:        0,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests10testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4f\x6b\xdc\x3e\x10\xbd\xef\xa7\x10\xb9\x6c\xc2\x4f\x4b\x92\x85" +
		"\xfc\x0e\xe9\xa9\xd0\x1c\x02\x25\x85\x26\xe9\xa5\x14\xa1\x95\xc6\xf2\x64\x65\x8d\xaa\x19\xb3\xdd\xd6\xfd\xee\x45" +
		"\xf6\xfe\x31\x3d\xf5\x62\xde\x7b\xf3\xf7\x79\xd0\x6a\xa5\xfe\xeb\x30\x14\x2b\xa0\x5e\xf3\xe2\xf1\xe9\xf9\xe1\xf3" +
		"\x8b\x7a\x7c\x7a\xf9\xa4\xda\xbd\x2f\xd6\xb8\x88\x90\x44\x5d\xa2\xd7\xca\xc6\x48\x3b\xf0\xc6\x51\x61\x43\x05\x03" +
		"\x26\xd6\x6a\xca\x30\xc9\x76\x70\x22\x0c\xae\x80\x68\x55\xc0\x63\x01\x27\xa6\x2f\xc8\x5a\x85\x62\x93\x18\xd9\x67" +
		"\xe0\x1a\xe3\x4c\x89\xe1\xc8\xd9\x51\x06\xad\x68\x97\xa0\x68\x95\x29\xa2\xdb\xd7\x3a\xad\x84\x78\x02\x87\xee\x23" +
		"\x8e\x14\xe8\xa0\x52\x12\xeb\x84\xff\x9a\x6e\xe0\x47\xc6\x02\x6c\xac\x68\xc5\xe0\x84\x8a\x41\x0f\x49\xb0\x41\x28" +
		"\x53\xe9\xdb\x6e\xcb\xd3\xf7\x38\x69\x0b\xc9\x40\xf2\x99\x30\x89\xb1\xbd\xb4\xa6\x03\x69\xc9\xd7\x7d\xbf\xf7\xc0" +
		"\x47\x2b\x47\x46\x9b\xb7\xea\x8f\x31\x24\x4c\xc1\xd8\x18\xb4\xea\x19\x0a\xa6\x86\x46\x15\xbc\x39\x39\x1d\xa3\xdc" +
		"\x4f\x25\xd5\xb6\x56\xb6\xf7\x08\xc9\xc1\x95\xfa\xf2\xfe\xe3\xeb\xc3\xb3\xba\x5c\xde\xde\xac\xbc\x15\xbb\xd4\x6a" +
		"\xd9\x8a\xe4\xfb\xeb\xeb\x48\xce\xc6\x96\x58\x86\x83\x10\x88\x42\x84\x9a\xc1\xd4\xc1\x6a\xf2\x5d\xa9\xdd\x38\x0f" +
		"\xcd\xbf\x95\x56\x77\x54\xf0\x27\x18\x47\x1e\x06\xec\x72\x44\x87\x63\x9b\xf1\x3f\x0c\xe8\xcd\x08\xaa\xd2\x10\x0d" +
		"\x1b\x5b\xc6\x3a\x48\x60\x79\x36\x63\xba\xd5\x4c\x10\x9a\x87\xcf\xdb\x9d\x76\x0a\x74\x6e\x34\x34\x54\xd9\xcd\x39" +
		"\x3e\x1d\xab\x66\xfc\xba\xd8\xc2\x9e\x2f\xee\xd5\xd7\x6f\xbf\x67\x0d\xea\xc1\x2a\x4d\x94\x60\x26\xf7\x05\x6f\x87" +
		"\x33\x5e\xd7\x50\xe1\xf5\xdd\xff\x13\xb8\x5b\x8f\x20\xf7\x9b\x88\xae\xa2\xe5\xd5\xbb\xc5\x62\xfe\x02\x3e\xd0\x2e" +
		"\x2d\xfe\x04\x00\x00\xff\xff\x80\xd3\xdc\x5b\x13\x03\x00\x00")

func bindataMigrationsSqlTests10testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests10testsql,
		"migrations/sql/tests/10_test.sql",
	)
}

func bindataMigrationsSqlTests10testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests10testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/10_test.sql",
		size:        787,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests11testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xc1\x6e\x13\x31\x10\xbd\xe7\x2b\xac\x5e\xd2\x0a\xa7\x21\x91\xca" +
		"\x21\x9c\x90\xe8\xa1\x12\x2a\x12\x6d\xb9\x20\x64\x39\xf6\x64\x77\x1a\xc7\x63\x3c\xb3\x5a\x02\xcb\xbf\x23\xef\x66" +
		"\x93\x15\x27\x2e\xd1\x7b\x6f\xfc\x66\xe6\x65\xb4\x8b\x85\x7a\x73\xc0\x2a\x5b\x01\xf5\x92\x66\x0f\x8f\x4f\xf7\x5f" +
		"\x9e\xd5\xc3\xe3\xf3\x67\x55\x1f\x7d\xb6\xc6\x05\x84\x28\xea\x1a\xbd\x56\x36\x04\x6a\xc1\x1b\x47\x99\x0d\x65\xac" +
		"\x30\xb2\x56\xc3\x0b\x13\xed\x01\xce\x84\xc1\x65\x10\xad\x32\x78\xcc\xe0\xc4\x34\x19\x59\xab\x2a\xdb\x28\x46\x8e" +
		"\x09\xb8\xd4\x38\x51\x64\x18\x39\x3b\x4a\xa0\x15\xb5\x11\xb2\x56\x89\x02\xba\x63\xf1\x69\x25\xc4\x03\x38\x75\xef" +
		"\x71\xa0\x8a\x4e\x2a\x45\xb1\x4e\xf8\x9f\xe9\x06\x7e\x26\xcc\xc0\xc6\x8a\x56\x0c\x4e\x28\x1b\xf4\x10\x05\x77\x08" +
		"\x79\xb0\xbe\xb6\x7b\x1e\x7e\xc7\x49\x7b\x88\x06\xa2\x4f\x84\x51\x8c\x6d\xa4\x36\x07\x90\x9a\x7c\xd9\xf7\x47\x03" +
		"\x3c\x46\x19\x19\x6d\x5f\x4b\x3e\xc6\x2a\x62\xac\x8c\x0d\x95\x56\x0d\x43\xc6\xb8\xa3\x5e\x05\x6f\xce\x49\xfb\x2a" +
		"\x37\x83\xa5\xc4\xd6\xca\x36\x1e\x21\x3a\xb8\x51\x5f\x3f\x7c\x7a\xb9\x7f\x52\xd7\xf3\xd5\x6a\xe1\xad\xd8\xb9\x56" +
		"\xf3\x5a\x24\x6d\x96\xcb\x40\xce\x86\x9a\x58\xba\x93\x50\x11\x55\x01\xca\x0b\xa6\x03\x2c\x86\xdc\x85\xda\xad\xf3" +
		"\xb0\xfb\x3f\x6b\x49\x47\x19\x7f\x81\x71\xe4\xa1\xc3\x43\x0a\xe8\xb0\x6f\xd3\xff\x0f\x1d\x7a\xd3\x83\xa2\xec\x88" +
		"\xba\xad\xcd\xbd\x0f\x22\x58\x9e\xcc\x18\x6e\x35\x11\x84\xa6\xe5\xcb\x76\xe7\x9d\x2a\xba\x34\xea\x76\x54\xd8\xdb" +
		"\x4b\x7d\x38\x56\x79\xf1\xfb\x6a\x0f\x47\xbe\xda\xa8\x6f\xdf\xff\x4c\x1a\x94\x83\x15\x1a\x29\xc2\x44\x6e\x32\xae" +
		"\xba\x0b\x5e\x97\x52\xe6\xf5\xdd\xbb\x01\xdc\xad\x7b\x90\x9a\x6d\x40\x37\xda\x78\xb3\x5c\xb6\x6d\x7b\x4b\xf9\x78" +
		"\xcb\xf5\xd2\x26\x9c\xdf\xbc\x9f\xcd\xa6\xdf\xc5\x47\x6a\xe3\xec\x6f\x00\x00\x00\xff\xff\xa0\x2e\x3c\xc0\x29\x03" +
		"\x00\x00")

func bindataMigrationsSqlTests11testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests11testsql,
		"migrations/sql/tests/11_test.sql",
	)
}

func bindataMigrationsSqlTests11testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests11testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/11_test.sql",
		size:        809,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests12testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x6f\x13\x31\x10\xbd\xe7\x57\x58\xbd\xa4\x11\x4e\x43\x23\x95" +
		"\x43\x38\x21\xd1\x43\x25\x94\x4a\xb4\x85\x03\x42\x96\x63\x4f\x76\xa7\x71\x3c\xc6\x33\xab\x25\xb0\xfc\x77\xe4\xdd" +
		"\x7c\xac\x38\x71\x49\xde\x7b\xe3\x37\x9f\xda\xf9\x5c\xbd\xd9\x63\x95\xad\x80\x7a\x49\x93\x87\xf5\xd3\xfd\xe7\x67" +
		"\xf5\xb0\x7e\x7e\x54\xf5\xc1\x67\x6b\x5c\x40\x88\xa2\xae\xd1\x6b\x65\x43\xa0\x16\xbc\x71\x94\xd9\x50\xc6\x0a\x23" +
		"\x6b\x35\xbc\x30\xd1\xee\xe1\x4c\x18\x5c\x06\xd1\x2a\x83\xc7\x0c\x4e\x4c\x93\x91\xb5\xaa\xb2\x8d\x62\xe4\x90\x80" +
		"\x4b\x8c\x13\x45\x86\x13\x67\x47\x09\xb4\xa2\x36\x42\xd6\x2a\x51\x40\x77\x28\x3e\xad\x84\x78\x00\xc7\xec\x3d\x0e" +
		"\x54\xd1\x51\xa5\x28\xd6\x09\xff\x53\xdd\xc0\xcf\x84\x19\xd8\x58\xd1\x8a\xc1\x09\x65\x83\x1e\xa2\xe0\x16\x21\x0f" +
		"\xd6\xd7\x76\xc7\xc3\xef\xa9\xd2\x0e\xa2\x81\xe8\x13\x61\x14\x63\x1b\xa9\xcd\x1e\xa4\x26\x5f\xfa\xfd\xd1\x00\x9f" +
		"\x46\x39\x31\xda\xbc\x96\xf9\x18\xab\x88\xb1\x32\x36\x54\x5a\x35\x0c\x19\xe3\x96\x7a\x15\xbc\x39\x4f\xda\x47\xb9" +
		"\x19\x2c\x65\x6c\xad\x6c\xe3\x11\xa2\x2b\xab\xcb\x60\x05\x7c\xdf\x6e\x93\xfc\x11\xcf\xd4\x97\x0f\x9f\x5e\xee\x9f" +
		"\xd4\xf5\xf4\x76\x39\xf7\x56\xec\x54\xab\x69\x2d\x92\x56\x8b\x45\x20\x67\x43\x4d\x2c\xdd\x51\xa8\x88\xaa\x00\xe5" +
		"\x05\xd3\x1e\xe6\xc3\x3e\x0a\xb5\x1b\xe7\x61\xfb\x7f\xd6\x32\x35\x65\xfc\x05\xc6\x91\x87\x0e\xf7\x29\xa0\xc3\x3e" +
		"\x4d\xbf\x9f\x0e\xbd\xe9\x41\x51\xb6\x44\xdd\xc6\xe6\xde\x07\x11\x2c\x8f\x6a\x0c\x37\x1c\x09\x42\xe3\xf0\xa5\xbb" +
		"\x73\x4f\x15\x5d\x12\x75\x5b\x2a\xec\xed\x25\x3e\x1c\xb1\xbc\xf8\x7d\xb5\x83\x03\x5f\xad\xd4\xb7\xef\x7f\x46\x09" +
		"\xca\x21\x0b\x8d\x14\x61\x24\x37\x19\x6f\xbb\x0b\x5e\x96\x50\xe6\xe5\xdd\xbb\x01\xdc\x2d\x7b\x90\x9a\x4d\x40\x77" +
		"\xb2\xf1\x6a\xb1\x68\xdb\xf6\x86\xf2\xe1\x86\xeb\x85\x4d\x38\xd5\x6a\xfd\xf8\xf5\x7a\x76\xfc\x9b\xbd\x9f\x4c\xc6" +
		"\x5f\xcf\x47\x6a\xe3\xe4\x6f\x00\x00\x00\xff\xff\x93\x8e\x64\xd9\x4f\x03\x00\x00")

func bindataMigrationsSqlTests12testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests12testsql,
		"migrations/sql/tests/12_test.sql",
	)
}

func bindataMigrationsSqlTests12testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests12testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/12_test.sql",
		size:        847,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests1testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x91\x41\x6b\x02\x31\x10\x85\xef\xfb\x2b\xe6\xa6\xd2\x2c\xd2\x6b\x7b" +
		"\x2a\xd4\x83\x50\x2c\x54\xed\x75\x89\xc9\x98\x1d\x9a\xcd\x84\x64\x16\xb1\xec\x8f\x2f\xd9\xb5\xba\xb7\xef\xbd\xc9" +
		"\x7b\x99\x90\xba\x86\xa7\x8e\x5c\xd2\x82\x70\x8c\xd5\x76\xb7\xdf\x7c\x1d\x60\xbb\x3b\x7c\x42\x7b\xb5\x49\x37\xc6" +
		"\x13\x06\x81\x25\x59\x05\x13\x37\x41\x77\x78\x17\x19\x4d\x42\x51\x90\xd0\x52\x42\x23\x4d\x9f\x28\x2b\x70\x49\x07" +
		"\x69\xe4\x1a\x31\x97\x59\x8e\x1c\x32\xfe\xeb\x6c\x38\xa2\x02\xbe\x04\x4c\x0a\x22\x7b\x32\xd7\x92\x53\x20\x9c\x27" +
		"\xb8\xb5\x8f\xec\xd9\xf1\xcd\xe5\x20\xda\x48\x56\x10\xfb\x93\x27\xb3\x82\xef\xb7\x8f\xe3\x66\x0f\xcb\xc5\x73\x6d" +
		"\xb5\xe8\x85\x82\x45\xe6\x0e\xeb\x29\x5f\xa4\x3e\x19\x8b\xe7\x42\xad\x48\x7c\x59\xaf\x3d\x1b\xed\x5b\xce\x32\xdc" +
		"\x0c\xc7\xec\x3c\x8e\x67\x7b\x69\x39\xd1\x2f\x36\x86\x2d\x0e\xd4\x45\x4f\x86\xc6\x1a\xe1\x1f\x0c\x03\xd9\x66\x84" +
		"\xe2\x9c\x99\x87\x93\x4e\x63\x0e\x03\xea\x3c\xbb\x63\x7a\xd3\xcc\x10\x9e\x8f\x1f\xdb\xdd\x77\x72\xfc\x28\x1a\xce" +
		"\x5c\x94\xa4\x1e\x57\xaf\x55\x35\xff\xa3\x77\xbe\x84\xea\x2f\x00\x00\xff\xff\x9a\x77\x74\xfd\xb5\x01\x00\x00")

func bindataMigrationsSqlTests1testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests1testsql,
		"migrations/sql/tests/1_test.sql",
	)
}

func bindataMigrationsSqlTests1testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests1testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/1_test.sql",
		size:        437,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests2testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x91\xcf\x6a\xf3\x30\x10\xc4\xef\x7e\x8a\xbd\x25\xe1\x93\xc9\x47\x8f" +
		"\xed\xa9\xd0\x1c\x02\x25\x85\x26\xe9\x55\x28\xd2\xc6\x5e\x2a\x6b\x85\xb4\x26\x4d\xf1\xc3\x17\xff\x69\x62\x7a\xfb" +
		"\xcd\xac\x76\x34\x42\x65\x09\xff\x1a\xaa\x92\x11\x84\x63\x2c\xb6\xbb\xfd\xe6\xfd\x00\xdb\xdd\xe1\x0d\xea\xab\x4b" +
		"\x46\x5b\x4f\x18\x04\x96\xe4\x14\x8c\xac\x83\x69\xf0\x26\x32\xda\x84\xa2\x20\xa1\xa3\x84\x56\x74\x9b\x28\x2b\xa8" +
		"\x92\x09\xa2\xe5\x1a\x31\xf7\xb3\x1c\x39\x64\xfc\xd5\xd9\x72\x44\x05\x7c\x09\x98\x14\x44\xf6\x64\xaf\xfd\x9e\x02" +
		"\xe1\x3c\xc2\x94\x3e\xb0\xe7\x8a\x27\x97\x83\x18\x2b\x59\x41\x6c\x4f\x9e\xec\x9f\x16\x1a\xbf\x22\x25\xcc\xda\xc8" +
		"\x0a\x3e\x9e\x5f\x8f\x9b\x3d\x2c\x17\x0f\xa5\x33\x62\x16\x0a\x16\x99\x1b\x2c\xc7\x8d\x5e\x9a\x93\x75\x78\xee\xa9" +
		"\x16\x89\x8f\xeb\xb5\x67\x6b\x7c\xcd\x59\xba\xc9\xa8\x98\x2b\x8f\xc3\xd9\x56\x6a\x4e\xf4\x8d\xda\xb2\xc3\x8e\x9a" +
		"\xe8\xc9\xd2\x10\x23\xfc\x89\xa1\x23\xa7\x07\xe8\x9d\x33\x73\x77\x32\x69\xd8\xc3\x80\x26\xcf\xee\x18\x5f\x3b\x33" +
		"\x84\xe7\xe3\x7b\xbb\x5b\xa7\x8a\xef\x41\xdd\x99\x7b\x25\xa9\x45\x05\xff\x57\x4f\x45\x31\xff\xc0\x17\xbe\x84\xe2" +
		"\x27\x00\x00\xff\xff\xff\xb5\xda\xb4\xd2\x01\x00\x00")

func bindataMigrationsSqlTests2testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests2testsql,
		"migrations/sql/tests/2_test.sql",
	)
}

func bindataMigrationsSqlTests2testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests2testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/2_test.sql",
		size:        466,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests3testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\x4f\x6f\xd4\x3e\x10\xbd\xef\xa7\xb0\x7a\xd9\x56\x3f\xaf\xfa\x63" +
		"\x51\x7b\x28\x27\x24\x7a\xa8\x84\x8a\x44\x5b\x2e\x08\x59\x5e\x7b\xe2\x4c\xd7\xf1\x18\xcf\x44\xcb\x42\xf8\xee\xc8" +
		"\xc9\xfe\x09\x5c\xa2\xf7\xde\x8c\x9f\xdf\x4c\xbc\x5a\xa9\xff\x3a\x0c\xc5\x0a\xa8\x97\xbc\x78\x78\x7c\xba\xff\xfc" +
		"\xac\x1e\x1e\x9f\x3f\xa9\x76\xef\x8b\x35\x2e\x22\x24\x51\x97\xe8\xb5\x9a\xb0\x49\xb6\x83\x13\x61\x70\x05\x44\xab" +
		"\x02\x1e\x0b\x38\x31\x7d\x41\xd6\x2a\x14\x9b\xc4\xc8\x3e\x03\xd7\x1a\x67\x4a\x0c\x47\xce\x8e\x32\x68\x45\xbb\x04" +
		"\x45\xab\x4c\x11\xdd\xbe\x9e\xd3\x4a\x88\x27\x70\x70\x1f\x71\xa4\x40\x07\x95\x92\x58\x27\xac\x55\xee\x37\x11\xdd" +
		"\x3f\x29\x0c\xfc\xc8\x58\x80\x8d\x15\xad\x18\x9c\x50\x31\xe8\x21\x09\x36\x08\x65\xb2\x78\xdd\x6d\x79\xfa\x1e\x6f" +
		"\xdc\x42\x32\x90\x7c\x26\x4c\x62\x6c\x2f\xad\xe9\x40\x5a\xf2\x35\xf7\xf7\x1e\xf8\x38\xd2\x91\xd1\xe6\xb5\xce\xc9" +
		"\x18\x12\xa6\x60\x6c\x0c\x5a\xf5\x0c\x05\x53\x43\xa3\x0a\xde\x9c\x26\xb6\x31\x5c\xa9\x2f\xef\x3f\xbe\xdc\x3f\xa9" +
		"\xcb\xe5\xdb\x95\xb7\x62\x97\x5a\x2d\x99\x3a\x58\x4d\xe1\x2b\xb5\x1b\xe7\xa1\xa9\xa8\x15\xc9\x77\xd7\xd7\x91\x9c" +
		"\x8d\x2d\xb1\x0c\x07\x21\x10\x85\x08\x63\x6f\x2f\x2d\x15\xfc\x09\xc6\x91\x87\x01\xbb\x1c\xd1\xe1\x68\x33\x0e\x33" +
		"\xa0\x37\x23\xa8\x4a\x43\x34\x6c\x6c\x19\xcf\x41\x02\xcb\xb3\x3b\xa6\xc5\xcf\x04\xa1\x79\xf9\x9c\xee\x94\x29\xd0" +
		"\xd9\x68\x68\xa8\x32\x29\x3d\x68\xf5\xff\xb9\x6b\xda\x7b\xed\xfb\x75\xb1\x85\x3d\x5f\xdc\xa9\xaf\xdf\x7e\xcf\x6c" +
		"\xea\xee\x2b\xfd\xeb\xd7\xcd\xea\x7d\xc1\x37\xc3\x19\xaf\x6b\xa9\xf0\xfa\xe6\x76\x02\x37\xeb\xdb\xe5\xd5\xbb\xc5" +
		"\x62\xfe\x72\x3f\xd0\x2e\x2d\xfe\x04\x00\x00\xff\xff\x9f\xc2\x6b\xb5\xcb\x02\x00\x00")

func bindataMigrationsSqlTests3testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests3testsql,
		"migrations/sql/tests/3_test.sql",
	)
}

func bindataMigrationsSqlTests3testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests3testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/3_test.sql",
		size:        715,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests4testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\x4f\x6f\xd4\x3e\x10\xbd\xef\xa7\xb0\x7a\xd9\x56\x3f\xaf\xfa\x63" +
		"\x45\x7b\x28\x27\x24\x7a\xa8\x84\x8a\x44\x5b\x2e\x08\x59\x5e\x7b\xe2\x4c\xd7\xf1\x18\xcf\x44\xcb\x42\xf8\xee\xc8" +
		"\xc9\xfe\x09\x5c\xa2\xf7\xde\x8c\x9f\xdf\x4c\xbc\x5a\xa9\xff\x3a\x0c\xc5\x0a\xa8\x97\xbc\x78\x78\x7c\xba\xff\xfc" +
		"\xac\x1e\x1e\x9f\x3f\xa9\x76\xef\x8b\x35\x2e\x22\x24\x51\x97\xe8\xb5\x9a\xb0\x49\xb6\x83\x13\x61\x70\x05\x44\xab" +
		"\x02\x1e\x0b\x38\x31\x7d\x41\xd6\x2a\x14\x9b\xc4\xc8\x3e\x03\xd7\x1a\x67\x4a\x0c\x47\xce\x8e\x32\x68\x45\xbb\x04" +
		"\x45\xab\x4c\x11\xdd\xbe\x9e\xd3\x4a\x88\x27\x70\x70\x1f\x71\xa4\x40\x07\x95\x92\x58\x27\xac\x55\xee\x37\x11\xdd" +
		"\x3f\x29\x0c\xfc\xc8\x58\x80\x8d\x15\xad\x18\x9c\x50\x31\xe8\x21\x09\x36\x08\x65\xb2\x78\xdd\x6d\x79\xfa\x1e\x6f" +
		"\xdc\x42\x32\x90\x7c\x26\x4c\x62\x6c\x2f\xad\xe9\x40\x5a\xf2\x35\xf7\xf7\x1e\xf8\x38\xd2\x91\xd1\xe6\xb5\xce\xc9" +
		"\x18\x12\xa6\x60\x6c\x0c\x5a\xf5\x0c\x05\x53\x43\xa3\x0a\xde\x9c\x26\xb6\x31\x5c\xa9\x2f\xef\x3f\xbe\xdc\x3f\xa9" +
		"\xcb\xe5\xdb\x95\xb7\x62\x97\x5a\x2d\x99\x3a\x58\x4d\xe1\x2b\xb5\x1b\xe7\xa1\xa9\xa8\x15\xc9\x77\xd7\xd7\x91\x9c" +
		"\x8d\x2d\xb1\x0c\x07\x21\x10\x85\x08\x63\x6f\x2f\x2d\x15\xfc\x09\xc6\x91\x87\x01\xbb\x1c\xd1\xe1\x68\x33\x0e\x33" +
		"\xa0\x37\x23\xa8\x4a\x43\x34\x6c\x6c\x19\xcf\x41\x02\xcb\xb3\x3b\xa6\xc5\xcf\x04\xa1\x79\xf9\x9c\xee\x94\x29\xd0" +
		"\xd9\x68\x68\xa8\x32\x29\x3d\x68\xf5\xff\xb9\x6b\xda\x7b\xed\xfb\x75\xb1\x85\x3d\x5f\xdc\xa9\xaf\xdf\x7e\xcf\x6c" +
		"\xea\xee\x2b\xfd\xeb\xd7\xcd\xea\x7d\xc1\x37\xc3\x19\xaf\x6b\xa9\xf0\xfa\xe6\x76\x02\x37\xeb\xdb\xe5\xd5\xbb\xc5" +
		"\x62\xfe\x72\x3f\xd0\x2e\x2d\xfe\x04\x00\x00\xff\xff\xa0\xd9\x11\xca\xcb\x02\x00\x00")

func bindataMigrationsSqlTests4testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests4testsql,
		"migrations/sql/tests/4_test.sql",
	)
}

func bindataMigrationsSqlTests4testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests4testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/4_test.sql",
		size:        715,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests5testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\x4f\x6b\x1b\x3f\x10\xbd\xfb\x53\x88\x5c\x9c\xf0\x93\xc9\xaf\x06" +
		"\xe7\x90\x9e\x0a\xcd\x21\x50\x52\x68\x92\x5e\x4a\x11\xb2\x34\xab\x9d\x58\xab\x51\x35\xb3\xb8\x6e\xb7\xdf\xbd\x68" +
		"\xd7\x7f\x96\x5e\x96\xf7\xde\x68\x66\xde\x1b\x76\xb5\x52\xff\x75\x18\x8a\x15\x50\xaf\x79\xf1\xf8\xf4\xfc\xf0\xe5" +
		"\x45\x3d\x3e\xbd\x7c\x56\xed\xc1\x17\x6b\x5c\x44\x48\xa2\xae\xd1\x6b\x35\x61\x93\x6c\x07\x67\xc2\xe0\x0a\x88\x56" +
		"\x05\x3c\x16\x70\x62\xfa\x82\xac\x55\x28\x36\x89\x91\x43\x06\xae\x35\xce\x94\x18\x4e\x9c\x1d\x65\xd0\x8a\xf6\x09" +
		"\x8a\x56\x99\x22\xba\x43\xed\xd3\x4a\x88\x27\x70\x9c\x3e\xe2\x48\x81\x8e\x2a\x25\xb1\x4e\xf8\x9f\xed\x06\x7e\x66" +
		"\x2c\xc0\xc6\x8a\x56\x0c\x4e\xa8\x18\xf4\x90\x04\x1b\x84\x32\xb5\xbe\xed\x77\x3c\x7d\x4f\x9b\x76\x90\x0c\x24\x9f" +
		"\x09\x93\x18\xdb\x4b\x6b\x3a\x90\x96\x7c\xf5\xfb\xa3\x07\x3e\x45\x39\x31\xda\xbe\xd5\x7c\x8c\x21\x61\x0a\xc6\xc6" +
		"\xa0\x55\xcf\x50\x30\x35\x34\xaa\xe0\xcd\x39\xa9\x8d\xe1\x46\x7d\xfd\xf0\xe9\xf5\xe1\x59\x5d\x2f\x37\x2b\x6f\xc5" +
		"\x2e\xb5\x5a\x32\x75\xb0\x9a\xcc\x57\x6a\xb7\xce\x43\x53\x51\x2b\x92\xef\x6f\x6f\x23\x39\x1b\x5b\x62\x19\x8e\x42" +
		"\x20\x0a\x11\xc6\xb7\xbd\xb4\x54\xf0\x17\x18\x47\x1e\x06\xec\x72\x44\x87\xe3\x98\x31\xcc\x80\xde\x8c\xa0\x2a\x0d" +
		"\xd1\xb0\xb5\x65\xec\x83\x04\x96\x67\x3b\xa6\x83\xcf\x04\xa1\x79\xf9\xe2\xee\xec\x29\xd0\x65\xd0\xd0\x50\x65\xff" +
		"\x5f\xea\xd3\xc5\xeb\x8b\xdf\x57\x3b\x38\xf0\xd5\xbd\xfa\xf6\xfd\xcf\x6c\x40\xbd\x7a\xa5\x89\x12\xcc\xe4\xbe\xe0" +
		"\xbb\xe1\x82\xd7\xb5\x54\x78\xbd\xb9\x9b\xc0\x66\x7d\xb7\xbc\x79\xbf\x58\xcc\x7f\xd1\x8f\xb4\x4f\x8b\xbf\x01\x00" +
		"\x00\xff\xff\x4e\xc1\xe1\x0a\xb4\x02\x00\x00")

func bindataMigrationsSqlTests5testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests5testsql,
		"migrations/sql/tests/5_test.sql",
	)
}

func bindataMigrationsSqlTests5testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests5testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/5_test.sql",
		size:        692,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests6testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\x4b\x6b\xdc\x30\x10\xbe\xef\xaf\x10\xb9\x6c\x42\xbd\xa4\x5d\x48" +
		"\x0e\xe9\xa9\xd0\x1c\x02\x25\x85\x26\xe9\xa5\x14\xa1\x95\xc6\xf6\x64\x65\x8d\xaa\x19\xb3\xdd\xd6\xfd\xef\x45\xd2" +
		"\x3e\x4c\x2e\xe6\x7b\x68\x1e\x9f\xac\xd5\x4a\xbd\x1b\xb0\x4b\x46\x40\xbd\xc4\xc5\xc3\xe3\xd3\xfd\xb7\x67\xf5\xf0" +
		"\xf8\xfc\x55\xf5\x7b\x97\x8c\xb6\x1e\x21\x88\xba\x44\xd7\xa8\x8a\x75\x30\x03\x9c\x08\x83\x4d\x20\x8d\x4a\xe0\x30" +
		"\x81\x15\x3d\x26\xe4\x46\x75\xc9\x04\xd1\xb2\x8f\xc0\xd9\xe3\x48\x81\xe1\xc8\xd9\x52\x84\x46\xd1\x2e\x40\x6a\x54" +
		"\x24\x8f\x76\x9f\xeb\x1a\x25\xc4\x15\x1c\xba\x17\xec\xa9\xa3\x83\x4a\x41\x8c\x15\x7e\x33\x5d\xc3\xef\x88\x09\x58" +
		"\x1b\x69\x14\x83\x15\x4a\x1a\x1d\x04\xc1\x16\x21\xd5\xd2\xd7\xdd\x96\xeb\xf7\x38\x69\x0b\x41\x43\x70\x91\x30\x88" +
		"\x36\xa3\xf4\x7a\x00\xe9\xc9\xe5\x7d\x7f\x8d\xc0\xc7\x28\x47\x46\x9b\xd7\x9c\x8f\xb1\x0b\x18\x3a\x6d\x7c\xd7\xa8" +
		"\x91\x21\x61\x68\xa9\xa8\xe0\xf4\x29\x69\x71\x79\xac\x25\x39\xf6\x95\xfa\xfe\xe9\xcb\xcb\xfd\x93\xba\x5c\xde\xae" +
		"\x9c\x11\xb3\x6c\xd4\x92\x69\x80\x55\x8d\x92\xa9\xd9\x58\x07\x6d\x46\xbd\x48\xbc\xbb\xbe\xf6\x64\x8d\xef\x89\x65" +
		"\x3a\x08\x1d\x51\xe7\xa1\x9c\x1d\xa5\xa7\x84\x7f\x40\x5b\x72\x30\xe1\x10\x3d\x5a\x2c\x6d\x4a\xb4\x09\x9d\x2e\x20" +
		"\x2b\x2d\xd1\xb4\x31\xa9\xd4\x41\x00\xc3\xb3\x19\xf5\xfa\x67\x82\xd0\xdc\x3e\x6f\x77\xda\xa9\xa3\x73\xa3\xa9\xa5" +
		"\xcc\xde\x9f\xfd\x7a\xff\xf9\xc4\xdf\x8b\x2d\xec\xf9\xe2\x4e\xfd\xf8\xf9\x6f\xd6\x20\xff\x83\x4c\x03\x05\x98\xc9" +
		"\x63\xc2\x0f\xd3\x19\xaf\xb3\x95\x78\x7d\x73\x5b\xc1\xcd\xba\x80\x38\x6e\x3c\xda\xe5\xd5\xc7\xc5\x62\xfe\x74\x3f" +
		"\xd3\x2e\x2c\xfe\x07\x00\x00\xff\xff\x72\x27\x19\x53\xcc\x02\x00\x00")

func bindataMigrationsSqlTests6testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests6testsql,
		"migrations/sql/tests/6_test.sql",
	)
}

func bindataMigrationsSqlTests6testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests6testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/6_test.sql",
		size:        716,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests7testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6f\xd4\x30\x10\xbd\xef\xaf\xb0\x7a\xd9\x56\x78\x55\x58\xa9" +
		"\x20\x95\x13\x12\x3d\x54\x42\x45\xa2\x2d\x17\x84\x2c\xaf\x3d\x71\xa6\xeb\x78\x8c\x67\xa2\x65\x21\xfc\x77\xe4\x64" +
		"\x3f\x22\x4e\x5c\xa2\xf7\xde\xf8\xcd\xcc\xd3\x64\xb5\x52\xaf\x3a\x0c\xc5\x0a\xa8\xe7\xbc\xb8\x7f\x78\xbc\xfb\xf2" +
		"\xa4\xee\x1f\x9e\x3e\xab\x76\xef\x8b\x35\x2e\x22\x24\x51\x97\xe8\xb5\xb2\x31\xd2\x0e\xbc\x71\x54\xd8\x50\xc1\x80" +
		"\x89\xb5\x9a\x5e\x98\x64\x3b\x38\x11\x06\x57\x40\xb4\x2a\xe0\xb1\x80\x13\xd3\x17\x64\xad\x42\xb1\x49\x8c\xec\x33" +
		"\x70\xad\x71\xa6\xc4\x70\xe4\xec\x28\x83\x56\xb4\x4b\x50\xb4\xca\x14\xd1\xed\xab\x4f\x2b\x21\x9e\xc0\xa1\xfb\x88" +
		"\x23\x05\x3a\xa8\x94\xc4\x3a\xe1\x7f\xa6\x1b\xf8\x99\xb1\x00\x1b\x2b\x5a\x31\x38\xa1\x62\xd0\x43\x12\x6c\x10\xca" +
		"\x64\x7d\xd9\x6d\x79\xfa\x1e\x27\x6d\x21\x19\x48\x3e\x13\x26\x31\xb6\x97\xd6\x74\x20\x2d\xf9\xba\xef\x8f\x1e\xf8" +
		"\x18\xe5\xc8\x68\xf3\x52\xf3\x31\x86\x84\x29\x18\x1b\x83\x56\x3d\x43\xc1\xd4\xd0\xa8\x82\x37\xa7\xa4\x63\x95\xfb" +
		"\xc9\x52\x63\x5f\xa9\xaf\x1f\x3e\x3d\xdf\x3d\xaa\xcb\xe5\xbb\x95\xb7\x62\x97\x5a\x2d\x5b\x91\x7c\x7b\x7d\x1d\xc9" +
		"\xd9\xd8\x12\xcb\x70\x10\x02\x51\x88\x50\x5f\x30\x75\xb0\x9a\xc2\x56\x6a\x37\xce\x43\xf3\x7f\xd6\x1a\x89\x0a\xfe" +
		"\x02\xe3\xc8\xc3\x80\x5d\x8e\xe8\x70\x6c\x33\x86\x1f\xd0\x9b\x11\x54\xa5\x21\x1a\x36\xb6\x8c\x3e\x48\x60\x79\x36" +
		"\x63\x3a\xd0\x4c\x10\x9a\x97\xcf\xdb\x9d\x76\x0a\x74\x6e\x34\x34\x54\xd9\xeb\x73\x7d\xba\x50\x7d\xf1\xfb\x62\x0b" +
		"\x7b\xbe\xb8\x55\xdf\xbe\xff\x99\x35\xa8\x57\xaa\x34\x51\x82\x99\xdc\x17\x7c\x33\x9c\xf1\xba\x96\x0a\xaf\x6f\xde" +
		"\x4e\xe0\x66\x3d\x82\xdc\x6f\x22\xba\xe5\xd5\xfb\xc5\x62\xfe\xcb\x7f\xa4\x5d\x5a\xfc\x0d\x00\x00\xff\xff\x42\x56" +
		"\xe8\x5a\x04\x03\x00\x00")

func bindataMigrationsSqlTests7testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests7testsql,
		"migrations/sql/tests/7_test.sql",
	)
}

func bindataMigrationsSqlTests7testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests7testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/7_test.sql",
		size:        772,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests8testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6f\xd4\x30\x10\xbd\xef\xaf\xb0\x7a\xd9\x56\x78\x55\x58\xa9" +
		"\x08\x95\x13\x12\x3d\x54\x42\x45\xa2\x2d\x17\x84\x2c\xaf\x3d\x71\xa6\xeb\x78\x8c\x67\xa2\x65\x21\xfc\x77\xe4\x64" +
		"\x3f\x22\x4e\x5c\xa2\xf7\xde\xf8\xcd\xcc\xd3\x64\xb5\x52\xaf\x3a\x0c\xc5\x0a\xa8\xe7\xbc\xb8\x7f\x78\xbc\xfb\xf2" +
		"\xa4\xee\x1f\x9e\x3e\xab\x76\xef\x8b\x35\x2e\x22\x24\x51\x97\xe8\xb5\xb2\x31\xd2\x0e\xbc\x71\x54\xd8\x50\xc1\x80" +
		"\x89\xb5\x9a\x5e\x98\x64\x3b\x38\x11\x06\x57\x40\xb4\x2a\xe0\xb1\x80\x13\xd3\x17\x64\xad\x42\xb1\x49\x8c\xec\x33" +
		"\x70\xad\x71\xa6\xc4\x70\xe4\xec\x28\x83\x56\xb4\x4b\x50\xb4\xca\x14\xd1\xed\xab\x4f\x2b\x21\x9e\xc0\xa1\xfb\x88" +
		"\x23\x05\x3a\xa8\x94\xc4\x3a\xe1\x7f\xa6\x1b\xf8\x99\xb1\x00\x1b\x2b\x5a\x31\x38\xa1\x62\xd0\x43\x12\x6c\x10\xca" +
		"\x64\x7d\xd9\x6d\x79\xfa\x1e\x27\x6d\x21\x19\x48\x3e\x13\x26\x31\xb6\x97\xd6\x74\x20\x2d\xf9\xba\xef\x8f\x1e\xf8" +
		"\x18\xe5\xc8\x68\xf3\x52\xf3\x31\x86\x84\x29\x18\x1b\x83\x56\x3d\x43\xc1\xd4\xd0\xa8\x82\x37\xa7\xa4\x63\x95\xfb" +
		"\xc9\x52\x63\x5f\xa9\xaf\x1f\x3e\x3d\xdf\x3d\xaa\xcb\xe5\xbb\x95\xb7\x62\x97\x5a\x2d\x5b\x91\x7c\x7b\x7d\x1d\xc9" +
		"\xd9\xd8\x12\xcb\x70\x10\x02\x51\x88\x50\x5f\x30\x75\xb0\x9a\xc2\x56\x6a\x37\xce\x43\xf3\x7f\xd6\x1a\x89\x0a\xfe" +
		"\x02\xe3\xc8\xc3\x80\x5d\x8e\xe8\x70\x6c\x33\x86\x1f\xd0\x9b\x11\x54\xa5\x21\x1a\x36\xb6\x8c\x3e\x48\x60\x79\x36" +
		"\x63\x3a\xd0\x4c\x10\x9a\x97\xcf\xdb\x9d\x76\x0a\x74\x6e\x34\x34\x54\xd9\xeb\x73\x7d\xba\x50\x7d\xf1\xfb\x62\x0b" +
		"\x7b\xbe\xb8\x55\xdf\xbe\xff\x99\x35\xa8\x57\xaa\x34\x51\x82\x99\xdc\x17\x7c\x33\x9c\xf1\xba\x96\x0a\xaf\x6f\xde" +
		"\x4e\xe0\x66\x3d\x82\xdc\x6f\x22\xba\xe5\xd5\xfb\xc5\x62\xfe\xcb\x7f\xa4\x5d\x5a\xfc\x0d\x00\x00\xff\xff\xa5\x91" +
		"\xf2\x46\x04\x03\x00\x00")

func bindataMigrationsSqlTests8testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests8testsql,
		"migrations/sql/tests/8_test.sql",
	)
}

func bindataMigrationsSqlTests8testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests8testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/8_test.sql",
		size:        772,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataMigrationsSqlTests9testsql = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6f\xd4\x30\x10\xbd\xef\xaf\xb0\x7a\xd9\x56\x78\x55\x58\xa9" +
		"\x48\x94\x13\x12\x3d\x54\x42\x45\xa2\x2d\x17\x84\x2c\xaf\x3d\x71\xa6\xeb\x78\x8c\x67\xa2\x65\x21\xfc\x77\xe4\x64" +
		"\x3f\x22\x4e\x5c\xa2\xf7\xde\xf8\xcd\xcc\xd3\x64\xb5\x52\xaf\x3a\x0c\xc5\x0a\xa8\xe7\xbc\xb8\x7f\x78\xbc\xfb\xf2" +
		"\xa4\xee\x1f\x9e\x3e\xab\x76\xef\x8b\x35\x2e\x22\x24\x51\x97\xe8\xb5\xb2\x31\xd2\x0e\xbc\x71\x54\xd8\x50\xc1\x80" +
		"\x89\xb5\x9a\x5e\x98\x64\x3b\x38\x11\x06\x57\x40\xb4\x2a\xe0\xb1\x80\x13\xd3\x17\x64\xad\x42\xb1\x49\x8c\xec\x33" +
		"\x70\xad\x71\xa6\xc4\x70\xe4\xec\x28\x83\x56\xb4\x4b\x50\xb4\xca\x14\xd1\xed\xab\x4f\x2b\x21\x9e\xc0\xa1\xfb\x88" +
		"\x23\x05\x3a\xa8\x94\xc4\x3a\xe1\x7f\xa6\x1b\xf8\x99\xb1\x00\x1b\x2b\x5a\x31\x38\xa1\x62\xd0\x43\x12\x6c\x10\xca" +
		"\x64\x7d\xd9\x6d\x79\xfa\x1e\x27\x6d\x21\x19\x48\x3e\x13\x26\x31\xb6\x97\xd6\x74\x20\x2d\xf9\xba\xef\x8f\x1e\xf8" +
		"\x18\xe5\xc8\x68\xf3\x52\xf3\x31\x86\x84\x29\x18\x1b\x83\x56\x3d\x43\xc1\xd4\xd0\xa8\x82\x37\xa7\xa4\x63\x95\xfb" +
		"\xc9\x52\x63\x5f\xa9\xaf\x1f\x3e\x3d\xdf\x3d\xaa\xcb\xe5\xbb\x95\xb7\x62\x97\x5a\x2d\x5b\x91\x7c\x7b\x7d\x1d\xc9" +
		"\xd9\xd8\x12\xcb\x70\x10\x02\x51\x88\x50\x5f\x30\x75\xb0\x9a\xc2\x56\x6a\x37\xce\x43\xf3\x7f\xd6\x1a\x89\x0a\xfe" +
		"\x02\xe3\xc8\xc3\x80\x5d\x8e\xe8\x70\x6c\x33\x86\x1f\xd0\x9b\x11\x54\xa5\x21\x1a\x36\xb6\x8c\x3e\x48\x60\x79\x36" +
		"\x63\x3a\xd0\x4c\x10\x9a\x97\xcf\xdb\x9d\x76\x0a\x74\x6e\x34\x34\x54\xd9\xeb\x73\x7d\xba\x50\x7d\xf1\xfb\x62\x0b" +
		"\x7b\xbe\xb8\x55\xdf\xbe\xff\x99\x35\xa8\x57\xaa\x34\x51\x82\x99\xdc\x17\x7c\x33\x9c\xf1\xba\x96\x0a\xaf\x6f\xde" +
		"\x4e\xe0\x66\x3d\x82\xdc\x6f\x22\xba\xe5\xd5\xfb\xc5\x62\xfe\xcb\x7f\xa4\x5d\x5a\xfc\x0d\x00\x00\xff\xff\xfa\x49" +
		"\xb6\x0d\x04\x03\x00\x00")

func bindataMigrationsSqlTests9testsqlBytes() ([]byte, error) {
	return bindataRead(
		_bindataMigrationsSqlTests9testsql,
		"migrations/sql/tests/9_test.sql",
	)
}

func bindataMigrationsSqlTests9testsql() (*asset, error) {
	bytes, err := bindataMigrationsSqlTests9testsqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "migrations/sql/tests/9_test.sql",
		size:        772,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1554831419, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"migrations/sql/mysql/11.sql":          bindataMigrationsSqlMysql11sql,
	"migrations/sql/mysql/4.sql":           bindataMigrationsSqlMysql4sql,
	"migrations/sql/mysql/8.sql":           bindataMigrationsSqlMysql8sql,
	"migrations/sql/mysql/9.sql":           bindataMigrationsSqlMysql9sql,
	"migrations/sql/postgres/11.sql":       bindataMigrationsSqlPostgres11sql,
	"migrations/sql/postgres/4.sql":        bindataMigrationsSqlPostgres4sql,
	"migrations/sql/postgres/8.sql":        bindataMigrationsSqlPostgres8sql,
	"migrations/sql/postgres/9.sql":        bindataMigrationsSqlPostgres9sql,
	"migrations/sql/shared/.gitattributes": bindataMigrationsSqlSharedGitattributes,
	"migrations/sql/shared/.gitkeep":       bindataMigrationsSqlSharedGitkeep,
	"migrations/sql/shared/1.sql":          bindataMigrationsSqlShared1sql,
	"migrations/sql/shared/10.sql":         bindataMigrationsSqlShared10sql,
	"migrations/sql/shared/12.sql":         bindataMigrationsSqlShared12sql,
	"migrations/sql/shared/2.sql":          bindataMigrationsSqlShared2sql,
	"migrations/sql/shared/3.sql":          bindataMigrationsSqlShared3sql,
	"migrations/sql/shared/5.sql":          bindataMigrationsSqlShared5sql,
	"migrations/sql/shared/6.sql":          bindataMigrationsSqlShared6sql,
	"migrations/sql/shared/7.sql":          bindataMigrationsSqlShared7sql,
	"migrations/sql/tests/.gitkeep":        bindataMigrationsSqlTestsGitkeep,
	"migrations/sql/tests/10_test.sql":     bindataMigrationsSqlTests10testsql,
	"migrations/sql/tests/11_test.sql":     bindataMigrationsSqlTests11testsql,
	"migrations/sql/tests/12_test.sql":     bindataMigrationsSqlTests12testsql,
	"migrations/sql/tests/1_test.sql":      bindataMigrationsSqlTests1testsql,
	"migrations/sql/tests/2_test.sql":      bindataMigrationsSqlTests2testsql,
	"migrations/sql/tests/3_test.sql":      bindataMigrationsSqlTests3testsql,
	"migrations/sql/tests/4_test.sql":      bindataMigrationsSqlTests4testsql,
	"migrations/sql/tests/5_test.sql":      bindataMigrationsSqlTests5testsql,
	"migrations/sql/tests/6_test.sql":      bindataMigrationsSqlTests6testsql,
	"migrations/sql/tests/7_test.sql":      bindataMigrationsSqlTests7testsql,
	"migrations/sql/tests/8_test.sql":      bindataMigrationsSqlTests8testsql,
	"migrations/sql/tests/9_test.sql":      bindataMigrationsSqlTests9testsql,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op:   "open",
					Path: name,
					Err:  os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op:   "open",
			Path: name,
			Err:  os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"migrations": {Func: nil, Children: map[string]*bintree{
		"sql": {Func: nil, Children: map[string]*bintree{
			"mysql": {Func: nil, Children: map[string]*bintree{
				"11.sql": {Func: bindataMigrationsSqlMysql11sql, Children: map[string]*bintree{}},
				"4.sql":  {Func: bindataMigrationsSqlMysql4sql, Children: map[string]*bintree{}},
				"8.sql":  {Func: bindataMigrationsSqlMysql8sql, Children: map[string]*bintree{}},
				"9.sql":  {Func: bindataMigrationsSqlMysql9sql, Children: map[string]*bintree{}},
			}},
			"postgres": {Func: nil, Children: map[string]*bintree{
				"11.sql": {Func: bindataMigrationsSqlPostgres11sql, Children: map[string]*bintree{}},
				"4.sql":  {Func: bindataMigrationsSqlPostgres4sql, Children: map[string]*bintree{}},
				"8.sql":  {Func: bindataMigrationsSqlPostgres8sql, Children: map[string]*bintree{}},
				"9.sql":  {Func: bindataMigrationsSqlPostgres9sql, Children: map[string]*bintree{}},
			}},
			"shared": {Func: nil, Children: map[string]*bintree{
				".gitattributes": {Func: bindataMigrationsSqlSharedGitattributes, Children: map[string]*bintree{}},
				".gitkeep":       {Func: bindataMigrationsSqlSharedGitkeep, Children: map[string]*bintree{}},
				"1.sql":          {Func: bindataMigrationsSqlShared1sql, Children: map[string]*bintree{}},
				"10.sql":         {Func: bindataMigrationsSqlShared10sql, Children: map[string]*bintree{}},
				"12.sql":         {Func: bindataMigrationsSqlShared12sql, Children: map[string]*bintree{}},
				"2.sql":          {Func: bindataMigrationsSqlShared2sql, Children: map[string]*bintree{}},
				"3.sql":          {Func: bindataMigrationsSqlShared3sql, Children: map[string]*bintree{}},
				"5.sql":          {Func: bindataMigrationsSqlShared5sql, Children: map[string]*bintree{}},
				"6.sql":          {Func: bindataMigrationsSqlShared6sql, Children: map[string]*bintree{}},
				"7.sql":          {Func: bindataMigrationsSqlShared7sql, Children: map[string]*bintree{}},
			}},
			"tests": {Func: nil, Children: map[string]*bintree{
				".gitkeep":    {Func: bindataMigrationsSqlTestsGitkeep, Children: map[string]*bintree{}},
				"10_test.sql": {Func: bindataMigrationsSqlTests10testsql, Children: map[string]*bintree{}},
				"11_test.sql": {Func: bindataMigrationsSqlTests11testsql, Children: map[string]*bintree{}},
				"12_test.sql": {Func: bindataMigrationsSqlTests12testsql, Children: map[string]*bintree{}},
				"1_test.sql":  {Func: bindataMigrationsSqlTests1testsql, Children: map[string]*bintree{}},
				"2_test.sql":  {Func: bindataMigrationsSqlTests2testsql, Children: map[string]*bintree{}},
				"3_test.sql":  {Func: bindataMigrationsSqlTests3testsql, Children: map[string]*bintree{}},
				"4_test.sql":  {Func: bindataMigrationsSqlTests4testsql, Children: map[string]*bintree{}},
				"5_test.sql":  {Func: bindataMigrationsSqlTests5testsql, Children: map[string]*bintree{}},
				"6_test.sql":  {Func: bindataMigrationsSqlTests6testsql, Children: map[string]*bintree{}},
				"7_test.sql":  {Func: bindataMigrationsSqlTests7testsql, Children: map[string]*bintree{}},
				"8_test.sql":  {Func: bindataMigrationsSqlTests8testsql, Children: map[string]*bintree{}},
				"9_test.sql":  {Func: bindataMigrationsSqlTests9testsql, Children: map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
