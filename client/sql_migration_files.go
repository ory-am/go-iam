// Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// migrations/sql/shared/.gitkeep
// migrations/sql/shared/1.sql
// migrations/sql/shared/10.sql
// migrations/sql/shared/2.sql
// migrations/sql/shared/3.sql
// migrations/sql/shared/5.sql
// migrations/sql/shared/6.sql
// migrations/sql/shared/7.sql
// migrations/sql/mysql/.gitkeep
// migrations/sql/mysql/11.sql
// migrations/sql/mysql/4.sql
// migrations/sql/mysql/8.sql
// migrations/sql/mysql/9.sql
// migrations/sql/postgres/.gitkeep
// migrations/sql/postgres/11.sql
// migrations/sql/postgres/4.sql
// migrations/sql/postgres/8.sql
// migrations/sql/postgres/9.sql
// migrations/sql/tests/.gitkeep
// migrations/sql/tests/10_test.sql
// migrations/sql/tests/11_test.sql
// migrations/sql/tests/1_test.sql
// migrations/sql/tests/2_test.sql
// migrations/sql/tests/3_test.sql
// migrations/sql/tests/4_test.sql
// migrations/sql/tests/5_test.sql
// migrations/sql/tests/6_test.sql
// migrations/sql/tests/7_test.sql
// migrations/sql/tests/8_test.sql
// migrations/sql/tests/9_test.sql
package client

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migrationsSqlSharedGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlSharedGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlSharedGitkeep,
		"migrations/sql/shared/.gitkeep",
	)
}

func migrationsSqlSharedGitkeep() (*asset, error) {
	bytes, err := migrationsSqlSharedGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/.gitkeep", size: 0, mode: os.FileMode(438), modTime: time.Unix(1540902707, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared1Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\xcf\x6b\xc2\x30\x14\xc7\xcf\x0d\xe4\x7f\x78\x47\x65\xf3\x32\xf0\xe4\xa9\x9b\x1d\x94\x75\x2a\xb5\xc2\x3c\x95\x98\x3e\x6a\xa0\x26\x21\x79\xce\xf5\xbf\x1f\xd6\xaa\x85\xfe\xb8\xf4\xf0\xfd\x7c\xf2\x5e\xc2\x77\x36\x83\x97\x93\x2a\x9d\x20\x84\x9d\xe5\xec\x23\x8d\xc2\x2c\x82\x2c\x7c\x4f\x22\x88\x3f\x61\xb5\xce\x20\xfa\x89\xb7\xd9\x16\x8e\x75\xe1\x44\x2e\x2b\x85\x9a\x60\xc2\x59\xa0\x0a\x68\xbe\xe0\xf6\xfb\x15\x4e\x1e\x85\x9b\xbc\xcd\xe7\xd3\xc6\x5b\xed\x92\x04\x36\x69\xfc\x1d\xa6\x7b\xf8\x8a\xf6\xaf\x9c\x05\x37\x3d\xd7\xe2\x84\x8d\x48\xf8\x47\x0f\xb8\x03\x78\x94\x0e\x09\x20\xe8\x01\x0e\x0b\xe5\x50\x52\x7e\x76\xca\x0f\x01\xa5\x13\x9a\x72\xaa\x2d\xfa\xe1\x11\x0e\xbd\x35\xda\xe3\x9d\xe9\x01\x5e\x1a\x7b\x5d\x2f\x68\x6e\xd6\x8b\xcd\x45\xa3\x1b\x8f\xad\xa9\x94\xac\xaf\xeb\x0d\x8f\x27\xe3\xdb\x70\xd8\x6f\x5f\x60\xd4\xaf\x4c\x69\x9e\x07\xf4\x75\xa3\x49\x48\xf2\x23\xb1\x3d\x1f\x2a\x25\xef\xc3\x0f\xc6\x54\x28\xf4\x83\xe0\x6c\xba\xe0\x8c\xb3\x6e\x2d\x96\xe6\xa2\x39\x5b\xa6\xeb\x4d\x5b\x8b\x6e\x11\x16\x9c\xfd\x07\x00\x00\xff\xff\xea\x13\xb9\x12\x43\x02\x00\x00")

func migrationsSqlShared1SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared1Sql,
		"migrations/sql/shared/1.sql",
	)
}

func migrationsSqlShared1Sql() (*asset, error) {
	bytes, err := migrationsSqlShared1SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/1.sql", size: 579, mode: os.FileMode(438), modTime: time.Unix(1540902905, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared10Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x70\x74\x71\x51\x48\x2c\x4d\xc9\x4c\xcd\x4b\x4e\x55\x08\x71\x8d\x08\xb1\xe6\xe5\xe2\xe5\x42\xd6\xee\x92\x5f\x9e\x87\xc7\x00\x97\x20\xff\x00\x05\x67\x7f\x9f\x50\x5f\x3f\xb8\x41\xd6\xbc\x5c\x80\x00\x00\x00\xff\xff\xaa\x1f\xf7\xbd\x81\x00\x00\x00")

func migrationsSqlShared10SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared10Sql,
		"migrations/sql/shared/10.sql",
	)
}

func migrationsSqlShared10Sql() (*asset, error) {
	bytes, err := migrationsSqlShared10SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/10.sql", size: 129, mode: os.FileMode(438), modTime: time.Unix(1540904177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared2Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcd\x31\x0b\x02\x21\x18\x06\xe0\x5d\xf0\x3f\xbc\x7b\x1c\xb4\xdf\x64\x69\x11\x7c\x69\x88\xce\x22\xd7\x47\x09\x75\x1d\x9e\x50\xfd\xfb\x86\x96\x96\x6e\x7b\xb6\xa7\xeb\xb0\xba\x97\x4b\xcd\x8d\x11\x27\x29\x14\x05\xe3\x11\xd4\x86\x0c\xae\xef\x73\xcd\x69\xb8\x15\x1e\x1b\x94\xd6\xf8\x32\xcd\x3c\x54\x6e\x89\x5f\x53\xa9\x3c\xa7\xdc\x70\xb0\xc1\xec\x8d\x87\x75\x01\x36\x12\x41\x9b\x9d\x8a\x14\xb0\xee\xa5\x90\xe2\x37\xd1\x8f\xe7\xb8\xd0\x68\xef\x4e\xd8\x3a\x8a\x47\xfb\xb7\xeb\xa5\xf8\x04\x00\x00\xff\xff\xe9\xf8\x05\xf0\xb7\x00\x00\x00")

func migrationsSqlShared2SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared2Sql,
		"migrations/sql/shared/2.sql",
	)
}

func migrationsSqlShared2Sql() (*asset, error) {
	bytes, err := migrationsSqlShared2SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/2.sql", size: 183, mode: os.FileMode(438), modTime: time.Unix(1540902937, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared3Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd2\x4d\x4b\xf4\x30\x10\xc0\xf1\x7b\xa1\xdf\x61\x6e\xfb\x3c\xc8\x82\x0a\x9e\xf6\x14\xb7\x15\x0f\xb1\x95\x92\x8a\xb7\x50\xdb\xd9\x36\xfb\x32\xa9\xc9\x94\xc5\x6f\x2f\xbb\x07\x29\xa8\xdd\xd4\xfb\xcc\x2f\x03\xff\x2c\x97\x70\x75\x30\xad\xab\x18\xa1\xec\xe3\x48\x48\x95\x16\xa0\xc4\xbd\x4c\xa1\xfb\x68\x5c\xa5\xeb\xbd\x41\x62\x10\x49\x02\x1e\x6b\xb6\x4e\x9b\x06\x89\xcd\xc6\xa0\xd3\x83\x33\xa0\xd2\x57\xb5\xba\xb0\xb9\x3d\xee\x7c\xf0\x60\xb0\xea\xf0\x7d\x40\xcf\xa7\xf9\x30\x9d\xed\x0e\x49\x23\x35\xbd\x35\xc4\xba\x1a\xb8\xd3\x07\xe4\xce\x36\xf0\x22\x8a\xf5\xa3\x28\xfe\xdd\xde\xfd\x87\x2c\x57\x90\x95\x52\x42\x92\x3e\x88\x52\x2a\x58\x2c\x42\x4f\xb1\x6f\x5b\xac\x59\x7b\xd3\x92\xa1\x56\x57\xfb\x16\xbe\xe8\x9b\xeb\x3f\xd1\x83\x47\x67\x68\x63\xcf\x28\x36\xda\xa1\xef\x2d\x79\x3c\xe3\x97\xed\x38\x1a\x37\x4e\xec\x91\x26\xde\x4b\x8a\xfc\x19\xd6\xb9\x2c\x9f\xb2\x9f\x6b\x4f\x1d\x3b\x5e\x3e\x75\x9c\x33\x3b\xc7\xfe\xbd\x62\xa8\x30\xfe\x38\x73\x77\xbe\x17\x0e\x15\xa6\x42\xae\xe2\xe8\x33\x00\x00\xff\xff\xc0\xe5\xf8\x3b\x8b\x03\x00\x00")

func migrationsSqlShared3SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared3Sql,
		"migrations/sql/shared/3.sql",
	)
}

func migrationsSqlShared3Sql() (*asset, error) {
	bytes, err := migrationsSqlShared3SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/3.sql", size: 907, mode: os.FileMode(438), modTime: time.Unix(1540923826, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared5Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcf\x41\x6a\x85\x30\x14\x85\xe1\x79\x20\x7b\xb8\xb3\x37\x28\x6f\x05\xe2\x20\x36\x57\x3a\xb8\x4d\x24\x26\x74\x18\xac\x86\x1a\xaa\x89\x48\xa4\x74\xf7\xa5\xe0\x40\x0a\x6d\x17\x70\x0e\xdf\x7f\xbf\xc3\xc3\x1a\xdf\xf6\xa1\x04\x70\x1b\x67\xae\x93\xc2\x22\xcc\x9f\xd3\x3e\xf8\x71\x89\x21\x15\xe8\xd1\x42\xc9\xef\x21\xf9\x90\xa6\x2d\xc7\x54\xfc\x70\x94\xd9\xaf\xa1\xcc\x79\xaa\x6f\x29\xa7\x70\x83\x97\x27\x34\x08\xdb\xf1\xba\xc4\xb1\xb6\xc6\x61\xc5\x99\x20\x8b\x06\xac\x68\xe8\xc7\xa5\x34\xba\x83\x47\x4d\xee\x59\x9d\x93\x8a\x33\xce\xae\x1a\x99\x3f\xd2\x1f\x0f\x42\xca\x73\x09\x8d\xd6\x84\x42\x81\xd2\x16\x94\x23\x02\x89\xad\x70\x64\xa1\x15\xd4\x7f\x33\x7e\x8b\xba\x60\x4f\xfe\xbf\x99\x15\x67\x5f\x01\x00\x00\xff\xff\xda\x49\x17\x74\x33\x01\x00\x00")

func migrationsSqlShared5SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared5Sql,
		"migrations/sql/shared/5.sql",
	)
}

func migrationsSqlShared5Sql() (*asset, error) {
	bytes, err := migrationsSqlShared5SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/5.sql", size: 307, mode: os.FileMode(438), modTime: time.Unix(1540904177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared6Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x70\x74\x71\x51\x28\x2e\x4d\xca\x4a\x4d\x2e\x89\x2f\xa9\x2c\x48\x55\x08\x73\x0c\x72\xf6\x70\x0c\xd2\x30\x34\xd5\x54\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\x51\x70\x71\x75\x73\x0c\xf5\x09\x51\x50\x57\xb7\xe6\xe5\xe2\xe5\x42\x36\xdd\x25\xbf\x3c\x0f\x8f\xf9\x2e\x41\xfe\x01\x0a\xce\xfe\x3e\xa1\xbe\x7e\x28\xf6\x58\xf3\x72\x01\x02\x00\x00\xff\xff\x0f\xc0\x9e\x64\xa4\x00\x00\x00")

func migrationsSqlShared6SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared6Sql,
		"migrations/sql/shared/6.sql",
	)
}

func migrationsSqlShared6Sql() (*asset, error) {
	bytes, err := migrationsSqlShared6SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/6.sql", size: 164, mode: os.FileMode(438), modTime: time.Unix(1540904177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared7Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x70\x74\x71\x51\x48\xcc\xc9\xc9\x2f\x4f\x4d\x89\x4f\xce\x2f\x2a\x8e\xcf\x2f\xca\x4c\xcf\xcc\x2b\x56\x08\x71\x8d\x08\xb1\xe6\xe5\xe2\xe5\x42\x36\xca\x25\xbf\x3c\x0f\x8f\x61\x2e\x41\xfe\x01\x0a\xce\xfe\x3e\xa1\xbe\x7e\x58\x0d\xb5\xe6\xe5\x02\x04\x00\x00\xff\xff\x30\x74\xd3\xd3\x99\x00\x00\x00")

func migrationsSqlShared7SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared7Sql,
		"migrations/sql/shared/7.sql",
	)
}

func migrationsSqlShared7Sql() (*asset, error) {
	bytes, err := migrationsSqlShared7SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/7.sql", size: 153, mode: os.FileMode(438), modTime: time.Unix(1540919539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysqlGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlMysqlGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysqlGitkeep,
		"migrations/sql/mysql/.gitkeep",
	)
}

func migrationsSqlMysqlGitkeep() (*asset, error) {
	bytes, err := migrationsSqlMysqlGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/.gitkeep", size: 0, mode: os.FileMode(438), modTime: time.Unix(1540902707, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql11Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x0a\x0d\x70\x71\x0c\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x08\x76\x0d\x51\x48\x2c\x4d\xc9\x4c\xcd\x4b\x4e\xb5\x55\x57\xb7\xe6\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x41\x53\xea\xeb\xef\xe2\xe9\x16\x09\x57\xad\x10\xe2\x1a\x11\xa2\xe0\xe7\x1f\xa2\xe0\x17\xea\xe3\x63\xcd\xcb\xc5\xcb\x85\x6c\xa1\x4b\x7e\x79\x1e\x89\x86\x59\xf3\x72\x01\x02\x00\x00\xff\xff\x08\xd3\x57\xff\xb3\x00\x00\x00")

func migrationsSqlMysql11SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql11Sql,
		"migrations/sql/mysql/11.sql",
	)
}

func migrationsSqlMysql11Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql11SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/11.sql", size: 179, mode: os.FileMode(438), modTime: time.Unix(1540919539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql4Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x0a\x0d\x70\x71\x0c\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x08\x76\x0d\x51\x28\x4e\x4d\x2e\xc9\x2f\x8a\xcf\x4c\x49\xcd\x2b\xc9\x4c\xcb\x4c\x2d\x8a\x2f\x2d\xca\xb4\x55\x57\xd7\x51\xc8\x2a\xcf\x2e\x86\x33\xe0\xa2\x45\xa9\x85\xa5\xa9\xc5\x25\x20\x3e\x48\xd6\x9a\x97\xcb\xd1\x27\xc4\x35\x48\x21\xc4\xd1\xc9\x07\xcd\x78\x5f\x7f\x17\x4f\xb7\x48\xec\x36\x28\x84\xb8\x46\x84\x28\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x10\x61\x0a\xc8\x11\x64\x69\x22\xcb\x36\x64\x5f\x62\x68\xe6\xe5\x42\x0e\x5c\x97\xfc\xf2\x3c\x4a\x02\x81\x14\xbf\x93\xea\x65\x72\x7c\x6a\x0d\x08\x00\x00\xff\xff\x68\x01\x6a\xb7\x3a\x02\x00\x00")

func migrationsSqlMysql4SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql4Sql,
		"migrations/sql/mysql/4.sql",
	)
}

func migrationsSqlMysql4Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql4SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/4.sql", size: 570, mode: os.FileMode(438), modTime: time.Unix(1540903049, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql8Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x0a\x0d\x70\x71\x0c\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x08\x76\x0d\x51\x48\xcc\xc9\xc9\x2f\x4f\x4d\x89\x4f\xce\x2f\x2a\x8e\xcf\x2f\xca\x4c\xcf\xcc\x2b\xb6\x55\x57\xb7\xe6\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x41\xd3\xe6\xeb\xef\xe2\xe9\x16\x89\x55\xa7\x42\x88\x6b\x44\x88\x82\x9f\x7f\x88\x82\x5f\xa8\x8f\x8f\x35\x2f\x17\x2f\x17\xb2\x43\x5c\xf2\xcb\xf3\x28\x30\xd8\x9a\x97\x0b\x10\x00\x00\xff\xff\x81\x1b\x2f\x6a\xd7\x00\x00\x00")

func migrationsSqlMysql8SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql8Sql,
		"migrations/sql/mysql/8.sql",
	)
}

func migrationsSqlMysql8Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql8SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/8.sql", size: 215, mode: os.FileMode(438), modTime: time.Unix(1540919539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql9Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcf\xdd\x0a\x82\x30\x14\xc0\xf1\x7b\xc1\x77\x38\x97\x45\xf8\x04\x5e\x2d\x77\x88\x91\x9e\xd9\xda\x20\xaf\x86\x34\xa9\x61\x99\x89\x51\xbd\x7d\x10\x04\xda\x85\xde\x9f\x8f\xff\x2f\x8a\x60\x75\xf5\xa7\xae\xec\x2b\x30\x6d\x18\xb0\x54\xa3\x02\xcd\xd6\x29\xc2\xf9\xed\xba\xd2\x1e\x2f\xbe\x6a\x7a\xe0\x4a\xe6\x90\x2b\x91\x31\x55\xc0\x16\x8b\x38\x0c\x12\x85\x4c\x23\x18\x12\x3b\x83\x20\x88\xe3\x61\xb4\x63\xbd\x7b\x59\xef\xec\xe3\x0e\x92\xc6\xd7\x16\xde\x2d\xe3\x89\x6f\x8c\x73\x68\x6b\x10\xa4\xc1\xd0\x5e\x6c\x08\x39\x30\xa3\xa5\x15\x94\x28\xcc\x90\xf4\x5f\x4b\x18\x0c\x25\xfc\xf6\x6c\xe6\x2c\x89\x4c\x4d\x46\xd0\xd6\x53\x1d\xdf\xc9\x29\xd9\x1c\x62\x50\xf9\x43\x7f\x02\x00\x00\xff\xff\x4c\xcb\x18\xbf\x73\x01\x00\x00")

func migrationsSqlMysql9SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql9Sql,
		"migrations/sql/mysql/9.sql",
	)
}

func migrationsSqlMysql9Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql9SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/9.sql", size: 371, mode: os.FileMode(438), modTime: time.Unix(1540919628, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgresGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlPostgresGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgresGitkeep,
		"migrations/sql/postgres/.gitkeep",
	)
}

func migrationsSqlPostgresGitkeep() (*asset, error) {
	bytes, err := migrationsSqlPostgresGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/.gitkeep", size: 0, mode: os.FileMode(438), modTime: time.Unix(1540902707, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres11Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x0a\x0d\x70\x71\x0c\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x08\x76\x0d\x51\x48\x2c\x4d\xc9\x4c\xcd\x4b\x4e\xb5\x55\x57\xb7\xe6\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x41\x53\x0a\x91\x70\xf6\xf7\x09\xf5\xf5\x83\xeb\x01\x1b\xe0\xe7\x1f\xa2\xe0\x17\xea\xe3\x63\xcd\xcb\xc5\xcb\x85\x6c\xab\x4b\x7e\x79\x1e\xc9\x26\xba\x04\xf9\x07\x20\x1b\x09\x08\x00\x00\xff\xff\xb9\x9e\x7d\x10\xc7\x00\x00\x00")

func migrationsSqlPostgres11SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres11Sql,
		"migrations/sql/postgres/11.sql",
	)
}

func migrationsSqlPostgres11Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres11SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/11.sql", size: 199, mode: os.FileMode(438), modTime: time.Unix(1540919628, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres4Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x0a\x0d\x70\x71\x0c\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x08\x76\x0d\x51\x28\x4e\x4d\x2e\xc9\x2f\x8a\xcf\x4c\x49\xcd\x2b\xc9\x4c\xcb\x4c\x2d\x8a\x2f\x2d\xca\xb4\x55\x57\xd7\x51\xc8\x2a\xcf\x2e\x86\x33\xe0\xa2\x45\xa9\x85\xa5\xa9\xc5\x25\x20\x3e\x48\xd6\x9a\x97\xcb\xd1\x27\xc4\x35\x48\x21\xc4\xd1\xc9\x07\xcd\x78\x88\x84\xb3\xbf\x4f\xa8\xaf\x1f\x76\x7b\xc0\x2e\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\x21\xda\x28\x90\x7b\xc8\xd7\x49\xbe\xbd\xc8\x5e\x47\x37\x81\x97\x0b\x39\xc0\x5d\xf2\xcb\xf3\x28\x0b\x18\x97\x20\xff\x00\x32\x43\x86\x7c\xad\x14\xd8\x8c\x12\x36\xe8\x46\x00\x02\x00\x00\xff\xff\xe8\xdf\x65\xf3\x8c\x02\x00\x00")

func migrationsSqlPostgres4SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres4Sql,
		"migrations/sql/postgres/4.sql",
	)
}

func migrationsSqlPostgres4Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres4SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/4.sql", size: 652, mode: os.FileMode(438), modTime: time.Unix(1540903049, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres8Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x0a\x0d\x70\x71\x0c\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\x4f\xce\xc9\x4c\xcd\x2b\x51\x08\x76\x0d\x51\x48\xcc\xc9\xc9\x2f\x4f\x4d\x89\x4f\xce\x2f\x2a\x8e\xcf\x2f\xca\x4c\xcf\xcc\x2b\xb6\x55\x57\xb7\xe6\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x41\xd3\x06\x91\x70\xf6\xf7\x09\xf5\xf5\xc3\xaa\x1f\x6c\xb0\x9f\x7f\x88\x82\x5f\xa8\x8f\x8f\x35\x2f\x17\x27\x27\x27\x27\x2f\x17\xb2\x8b\x5c\xf2\xcb\xf3\x28\xb2\xc1\x25\xc8\x3f\x00\xd9\x0a\x40\x00\x00\x00\xff\xff\x61\xe4\xdf\x73\xef\x00\x00\x00")

func migrationsSqlPostgres8SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres8Sql,
		"migrations/sql/postgres/8.sql",
	)
}

func migrationsSqlPostgres8Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres8SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/8.sql", size: 239, mode: os.FileMode(438), modTime: time.Unix(1540919627, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres9Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\xbf\x6e\x83\x30\x10\xc6\x77\x4b\x7e\x87\x1b\xa9\x2a\x9e\x80\xc9\xc5\x37\x58\x35\x86\x1a\x5b\x2a\x93\x85\x6a\xd4\x5a\x6e\xa9\x8b\xa8\x12\xde\x3e\xca\x9f\x21\x2c\x44\x19\xb2\xde\xdd\xf7\xe9\xf7\xbb\x3c\x87\xe7\x9f\xf0\x39\xf5\xf3\x00\x36\x51\xc2\xa4\x41\x0d\x86\xbd\x48\x84\xaf\xc5\x4f\xbd\xfb\xf8\x0e\xc3\x38\x03\xd7\x75\x03\x65\xad\x5a\xa3\x99\x50\x66\xb5\x74\x29\x0e\x4b\xb1\x11\x66\x9c\x43\x8a\xd0\xa2\x16\x4c\xde\x3a\x6c\xb4\xa8\x98\xee\xe0\x15\x3b\xc8\x52\x7c\x2a\x28\x29\x35\x32\x83\x60\x95\x78\xb3\x08\x42\x71\x7c\x5f\x03\x04\xbf\x77\xc1\xbb\xff\x3f\xa8\xd5\xba\x31\x0b\xfe\xd8\x40\xc9\xb5\x29\xff\xdd\x8d\x8f\x72\xbd\x84\xa5\xad\x14\xa4\x58\x50\x72\x1a\x6c\x31\xdf\xf5\x90\xb3\xce\x21\x00\x00\xff\xff\x31\x44\x78\x91\xb7\x01\x00\x00")

func migrationsSqlPostgres9SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres9Sql,
		"migrations/sql/postgres/9.sql",
	)
}

func migrationsSqlPostgres9Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres9SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/9.sql", size: 439, mode: os.FileMode(438), modTime: time.Unix(1540919628, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTestsGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlTestsGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTestsGitkeep,
		"migrations/sql/tests/.gitkeep",
	)
}

func migrationsSqlTestsGitkeep() (*asset, error) {
	bytes, err := migrationsSqlTestsGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/.gitkeep", size: 0, mode: os.FileMode(438), modTime: time.Unix(1540902707, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests10_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4f\x6b\x1b\x3f\x10\xbd\x1b\xfc\x1d\x44\x2e\x4e\xf8\xc9\x24\x31\xe4\x77\x48\x4f\x85\xe6\x10\x28\x29\x34\x49\x2f\xa5\x08\x59\x1a\x6b\x27\xd6\x6a\x54\xcd\x2c\xae\xdb\xed\x77\x2f\xda\xf5\x9f\xa5\xa7\x5e\x96\xf7\xde\xfc\x7d\x3b\x68\xb9\x54\xff\xb5\x18\x8a\x15\x50\xaf\x79\x3e\x7b\x7c\x7a\x7e\xf8\xfc\xa2\x1e\x9f\x5e\x3e\xa9\x66\xef\x8b\x35\x2e\x22\x24\x51\x97\xe8\xb5\xb2\x31\xd2\x0e\xbc\x71\x54\xd8\x50\xc1\x80\x89\xb5\x1a\x33\x4c\xb2\x2d\x9c\x08\x83\x2b\x20\x5a\x15\xf0\x58\xc0\x89\xe9\x0a\xb2\x56\xa1\xd8\x24\x46\xf6\x19\xb8\xc6\x38\x53\x62\x38\x72\x76\x94\x41\x2b\xda\x25\x28\x5a\x65\x8a\xe8\xf6\xb5\x4e\x2b\x21\x1e\xc1\xa1\xfb\x80\x23\x05\x3a\xa8\x94\xc4\x3a\xe1\xbf\xa6\x1b\xf8\x91\xb1\x00\x1b\x2b\x5a\x31\x38\xa1\x62\xd0\x43\x12\xdc\x20\x94\xb1\xf4\x6d\xb7\xe5\xf1\x7b\x9c\xb4\x85\x64\x20\xf9\x4c\x98\xc4\xd8\x4e\x1a\xd3\x82\x34\xe4\xeb\xbe\xdf\x3b\xe0\xa3\x95\x23\xa3\xf5\x5b\xf5\xc7\x18\x12\xa6\x60\x6c\x0c\x5a\x75\x0c\x05\xd3\x86\x06\x15\xbc\x39\x39\x1d\xa2\xdc\x8d\x25\xd5\xb6\x56\xb6\xf3\x08\xc9\xc1\x95\xfa\xf2\xfe\xe3\xeb\xc3\xb3\xba\x5c\xdc\xde\x2c\xbd\x15\xbb\xd0\x6a\xd1\x88\xe4\xfb\xeb\xeb\x48\xce\xc6\x86\x58\xfa\x83\x10\x88\x42\x84\x9a\xc1\xd4\xc2\x72\xf4\x5d\xa9\x5d\x3b\x0f\x9b\x7f\x2b\xad\xee\xa8\xe0\x4f\x30\x8e\x3c\xf4\xd8\xe6\x88\x0e\x87\x36\xc3\x7f\xe8\xd1\x9b\x01\x54\x65\x43\xd4\xaf\x6d\x19\xea\x20\x81\xe5\xc9\x8c\xf1\x56\x13\x41\x68\x1a\x3e\x6f\x77\xda\x29\xd0\xb9\x51\xbf\xa1\xca\x6e\xce\xf1\xf1\x58\x35\xe3\xd7\xc5\x16\xf6\x7c\x71\xaf\xbe\x7e\xfb\x3d\x69\x50\x0f\x56\x69\xa2\x04\x13\xb9\x2b\x78\xdb\x9f\xf1\xaa\x86\x0a\xaf\xee\xfe\x1f\xc1\xdd\x6a\x00\xb9\x5b\x47\x74\x15\x2d\xae\xde\xcd\x67\xf3\xd9\xf4\x11\x7c\xa0\x5d\x9a\xcf\xfe\x04\x00\x00\xff\xff\xb9\xbd\x27\x07\x17\x03\x00\x00")

func migrationsSqlTests10_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests10_testSql,
		"migrations/sql/tests/10_test.sql",
	)
}

func migrationsSqlTests10_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests10_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/10_test.sql", size: 791, mode: os.FileMode(438), modTime: time.Unix(1540933309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests11_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x6b\x1b\x31\x10\xbd\x1b\xfc\x1f\x44\x2e\x4e\xa8\x1c\xd7\x86\xf4\xe0\x9e\x0a\xcd\x21\x50\x52\x68\x92\x5e\x4a\x11\xb2\x34\xde\x9d\x58\xd6\xa8\x9a\x59\xb6\x6e\xb7\xff\xbd\x68\xd7\x1f\x4b\x4f\xbd\x98\xf7\xde\xe8\xcd\xcc\xf3\xb0\xf3\xb9\x7a\xb3\xc7\x2a\x5b\x01\xf5\x92\xa6\x93\x87\xc7\xa7\xfb\x2f\xcf\xea\xe1\xf1\xf9\xb3\xaa\x0f\x3e\x5b\xe3\x02\x42\x14\x75\x8d\x5e\x2b\x1b\x02\xb5\xe0\x8d\xa3\xcc\x86\x32\x56\x18\x59\xab\xe1\x85\x89\x76\x0f\x67\xc2\xe0\x32\x88\x56\x19\x3c\x66\x70\x62\x9a\x8c\xac\x55\x95\x6d\x14\x23\x87\x04\x5c\x6a\x9c\x28\x32\x9c\x38\x3b\x4a\xa0\x15\xb5\x11\xb2\x56\x89\x02\xba\x43\xf1\x69\x25\xc4\x03\x38\x76\xef\x71\xa0\x8a\x8e\x2a\x45\xb1\x4e\xf8\x9f\xe9\x06\x7e\x26\xcc\xc0\xc6\x8a\x56\x0c\x4e\x28\x1b\xf4\x10\x05\xb7\x08\x79\xb0\xbe\xb6\x3b\x1e\x7e\x4f\x93\x76\x10\x0d\x44\x9f\x08\xa3\x18\xdb\x48\x6d\xf6\x20\x35\xf9\xb2\xef\x8f\x06\xf8\x14\xe5\xc4\x68\xf3\x5a\xf2\x31\x56\x11\x63\x65\x6c\xa8\xb4\x6a\x18\x32\xc6\x2d\xf5\x2a\x78\x73\x4e\xda\x57\xb9\x19\x2c\x25\xb6\x56\xb6\xf1\x08\xd1\xc1\x8d\xfa\xfa\xe1\xd3\xcb\xfd\x93\xba\x9e\x2d\x97\x73\x6f\xc5\xce\xb4\x9a\xd5\x22\x69\xbd\x58\x04\x72\x36\xd4\xc4\xd2\x1d\x85\x8a\xa8\x0a\x50\x5e\x30\xed\x61\x3e\xe4\x2e\xd4\x6e\x9c\x87\xed\xff\x59\x4b\x3a\xca\xf8\x0b\x8c\x23\x0f\x1d\xee\x53\x40\x87\x7d\x9b\xfe\x7f\xe8\xd0\x9b\x1e\x14\x65\x4b\xd4\x6d\x6c\xee\x7d\x10\xc1\xf2\x68\xc6\x70\xab\x91\x20\x34\x2e\x5f\xb6\x3b\xef\x54\xd1\xa5\x51\xb7\xa5\xc2\xde\x5e\xea\xc3\xb1\xca\x8b\xdf\x57\x3b\x38\xf0\xd5\x5a\x7d\xfb\xfe\x67\xd4\xa0\x1c\xac\xd0\x48\x11\x46\x72\x93\x71\xd9\x5d\xf0\xaa\x94\x32\xaf\xee\xde\x0d\xe0\x6e\xd5\x83\xd4\x6c\x02\xba\x93\x8d\xd7\x8b\x45\xdb\xb6\xb7\x94\x0f\xb7\x5c\x2f\x6c\xc2\xd9\xcd\xfb\xe9\x64\x3a\x19\x7f\x1a\x1f\xa9\x8d\xd3\xc9\xdf\x00\x00\x00\xff\xff\x24\x68\x9a\xea\x2d\x03\x00\x00")

func migrationsSqlTests11_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests11_testSql,
		"migrations/sql/tests/11_test.sql",
	)
}

func migrationsSqlTests11_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests11_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/11_test.sql", size: 813, mode: os.FileMode(438), modTime: time.Unix(1540933309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests1_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x91\x31\x6b\xc3\x30\x10\x85\x77\x83\xff\xc3\x6d\x49\xa8\x4c\xe8\xda\x4e\x85\x66\x08\x94\x14\x9a\xa4\xab\x51\xa4\x8b\x7d\x54\xd6\x09\xe9\x4c\x48\xf1\x8f\x2f\xb2\xd3\xc4\xdb\xf7\xde\xe9\x3d\x9d\x50\x55\xc1\x53\x47\x4d\xd4\x82\x70\x0c\x65\xb1\xdd\xed\x37\x5f\x07\xd8\xee\x0e\x9f\xd0\x5e\x6d\xd4\xb5\x71\x84\x5e\x60\x49\x56\xc1\xc4\xb5\xd7\x1d\xde\x45\x42\x13\x51\x14\x44\xb4\x14\xd1\x48\xdd\x47\x4a\x0a\x9a\xa8\xbd\xd4\x72\x0d\x98\xf2\x2c\x05\xf6\x09\xff\x75\x32\x1c\x50\x01\x5f\x3c\x46\x05\x81\x1d\x99\x6b\xce\x29\x10\x4e\x13\xdc\xda\x47\x76\xdc\xf0\xcd\x65\x2f\xda\x48\x52\x10\xfa\x93\x23\xb3\x82\xef\xb7\x8f\xe3\x66\x0f\xcb\xc5\x73\x65\xb5\xe8\x85\x82\x45\xe2\x0e\xab\x29\x9f\xa5\x3e\x19\x8b\xe7\x4c\xad\x48\x78\x59\xaf\x1d\x1b\xed\x5a\x4e\x32\xdc\x8c\x86\xb9\x71\x38\x9e\xed\xa5\xe5\x48\xbf\x58\x1b\xb6\x38\x50\x17\x1c\x19\x1a\x6b\x84\x7f\xd0\x0f\x64\xeb\x11\xb2\x73\x66\x1e\x4e\x3a\x8e\x39\xf4\xa8\xd3\xec\x8e\xe9\x4d\x33\x43\x78\x3e\x7e\x6c\x77\xdf\xa9\xe1\x47\xd1\x70\xe6\xac\x24\xf6\xb8\x7a\x2d\x8b\xb2\x98\x7f\xd3\x3b\x5f\x7c\x59\xfc\x05\x00\x00\xff\xff\x83\xa5\x48\x0f\xb9\x01\x00\x00")

func migrationsSqlTests1_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests1_testSql,
		"migrations/sql/tests/1_test.sql",
	)
}

func migrationsSqlTests1_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests1_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/1_test.sql", size: 441, mode: os.FileMode(438), modTime: time.Unix(1540933309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests2_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x91\x41\x6b\xe3\x30\x10\x85\xef\x06\xff\x87\xb9\x25\x61\x65\xb2\xec\x71\xf7\xb4\xd0\x1c\x02\x25\x85\x26\xe9\x55\x28\xd2\xc4\x1e\x2a\x6b\x84\x34\x26\x4d\xf1\x8f\x2f\xb6\xd3\xc4\xf4\xf6\xbd\x37\x9a\xa7\x27\x54\x55\xf0\xab\xa5\x3a\x19\x41\x38\xc6\xb2\xd8\xee\xf6\x9b\xd7\x03\x6c\x77\x87\x17\x68\xae\x2e\x19\x6d\x3d\x61\x10\x58\x92\x53\x30\xb1\x0e\xa6\xc5\xbb\xc8\x68\x13\x8a\x82\x84\x8e\x12\x5a\xd1\x5d\xa2\xac\xa0\x4e\x26\x88\x96\x6b\xc4\x3c\xcc\x72\xe4\x90\xf1\x5b\x67\xcb\x11\x15\xf0\x25\x60\x52\x10\xd9\x93\xbd\x0e\x7b\x0a\x84\xf3\x04\xb7\xf4\x91\x3d\xd7\x7c\x73\x39\x88\xb1\x92\x15\xc4\xee\xe4\xc9\xfe\x68\xa1\xf1\x23\x52\xc2\xac\x8d\xac\xe0\xed\xff\xf3\x71\xb3\x87\xe5\xe2\x4f\xe5\x8c\x98\x85\x82\x45\xe6\x16\xab\x69\x63\x90\xe6\x64\x1d\x9e\x07\x6a\x44\xe2\xdf\xf5\xda\xb3\x35\xbe\xe1\x2c\xfd\xcd\xa8\x99\x6b\x8f\xe3\xd9\x4e\x1a\x4e\xf4\x89\xda\xb2\xc3\x9e\xda\xe8\xc9\xd2\x18\x23\xfc\x8e\xa1\x27\xa7\x47\x18\x9c\x33\x73\x7f\x32\x69\xdc\xc3\x80\x26\xcf\xee\x98\x5e\x3b\x33\x84\xe7\xe3\x47\xbb\x7b\xa7\x9a\x1f\x41\xfd\x99\x07\x25\xa9\x43\x05\xbf\x57\xff\xca\xa2\x2c\xe6\x7f\xf8\xc4\x97\x50\x16\x5f\x01\x00\x00\xff\xff\x1c\xda\x74\xd4\xd6\x01\x00\x00")

func migrationsSqlTests2_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests2_testSql,
		"migrations/sql/tests/2_test.sql",
	)
}

func migrationsSqlTests2_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests2_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/2_test.sql", size: 470, mode: os.FileMode(438), modTime: time.Unix(1540933309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests3_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\x4f\x6f\x13\x3f\x10\xbd\x47\xca\x77\xb0\x7a\x49\xab\x9f\xa3\xfe\x08\x6a\x0f\xe5\x84\x44\x0f\x95\x50\x91\x68\xcb\x05\x21\xcb\xb1\x27\xde\x69\xbc\x1e\xe3\x99\x55\x08\x2c\xdf\x1d\x79\x37\x7f\x16\x2e\xab\xf7\xde\x8c\x9f\xdf\xcc\x7a\xb9\x54\xff\xb5\x18\x8a\x15\x50\x2f\x79\x3e\x7b\x78\x7c\xba\xff\xfc\xac\x1e\x1e\x9f\x3f\xa9\x66\xef\x8b\x35\x2e\x22\x24\x51\x97\xe8\xb5\x1a\xb1\x49\xb6\x85\x13\x61\x70\x05\x44\xab\x02\x1e\x0b\x38\x31\x5d\x41\xd6\x2a\x14\x9b\xc4\xc8\x3e\x03\xd7\x1a\x67\x4a\x0c\x47\xce\x8e\x32\x68\x45\xbb\x04\x45\xab\x4c\x11\xdd\xbe\x9e\xd3\x4a\x88\x47\x70\x70\x1f\x70\xa4\x40\x07\x95\x92\x58\x27\xac\x55\xee\xd6\x11\xdd\x3f\x29\x0c\xfc\xc8\x58\x80\x8d\x15\xad\x18\x9c\x50\x31\xe8\x21\x09\x6e\x10\xca\x68\xf1\xba\xdb\xf2\xf8\x3d\xde\xb8\x85\x64\x20\xf9\x4c\x98\xc4\xd8\x4e\x1a\xd3\x82\x34\xe4\x6b\xee\xef\x1d\xf0\x71\xa4\x23\xa3\xf5\x6b\x9d\x93\x31\x24\x4c\xc1\xd8\x18\xb4\xea\x18\x0a\xa6\x0d\x0d\x2a\x78\x73\x9a\xd8\xc6\x70\xa5\xbe\xbc\xff\xf8\x72\xff\xa4\x2e\x17\x6f\x97\xde\x8a\x5d\x68\xb5\x60\x6a\x61\x39\x86\xaf\xd4\xae\x9d\x87\x4d\x45\x8d\x48\xbe\xbb\xbe\x8e\xe4\x6c\x6c\x88\xa5\x3f\x08\x81\x28\x44\x18\x7a\x3b\x69\xa8\xe0\x4f\x30\x8e\x3c\xf4\xd8\xe6\x88\x0e\x07\x9b\x61\x98\x1e\xbd\x19\x40\x55\x36\x44\xfd\xda\x96\xe1\x1c\x24\xb0\x3c\xb9\x63\x5c\xfc\x44\x10\x9a\x96\xcf\xe9\x4e\x99\x02\x9d\x8d\xfa\x0d\x55\x26\xa5\x03\xad\xfe\x3f\x77\x8d\x7b\xaf\x7d\xbf\x2e\xb6\xb0\xe7\x8b\x3b\xf5\xf5\xdb\xef\x89\x4d\xdd\x7d\xa5\x7f\xfd\xba\x49\xbd\x2b\xf8\xa6\x3f\xe3\x55\x2d\x15\x5e\xdd\xdc\x8e\xe0\x66\x75\xbb\xb8\x7a\x37\x9f\xcd\x67\xd3\xc7\xfb\x81\x76\x69\x3e\xfb\x13\x00\x00\xff\xff\xc0\xa9\x0d\xf9\xcf\x02\x00\x00")

func migrationsSqlTests3_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests3_testSql,
		"migrations/sql/tests/3_test.sql",
	)
}

func migrationsSqlTests3_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests3_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/3_test.sql", size: 719, mode: os.FileMode(438), modTime: time.Unix(1540933309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests4_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\x4f\x6f\x13\x3f\x10\xbd\x47\xca\x77\xb0\x7a\x49\xab\x9f\xa3\xfe\x88\x68\x0f\xe5\x84\x44\x0f\x95\x50\x91\x68\xcb\x05\x21\xcb\xb1\x27\xde\x69\xbc\x1e\xe3\x99\x55\x08\x2c\xdf\x1d\x79\x37\x7f\x16\x2e\xab\xf7\xde\x8c\x9f\xdf\xcc\x7a\xb9\x54\xff\xb5\x18\x8a\x15\x50\x2f\x79\x3e\x7b\x78\x7c\xba\xff\xfc\xac\x1e\x1e\x9f\x3f\xa9\x66\xef\x8b\x35\x2e\x22\x24\x51\x97\xe8\xb5\x1a\xb1\x49\xb6\x85\x13\x61\x70\x05\x44\xab\x02\x1e\x0b\x38\x31\x5d\x41\xd6\x2a\x14\x9b\xc4\xc8\x3e\x03\xd7\x1a\x67\x4a\x0c\x47\xce\x8e\x32\x68\x45\xbb\x04\x45\xab\x4c\x11\xdd\xbe\x9e\xd3\x4a\x88\x47\x70\x70\x1f\x70\xa4\x40\x07\x95\x92\x58\x27\xac\x55\xee\xd6\x11\xdd\x3f\x29\x0c\xfc\xc8\x58\x80\x8d\x15\xad\x18\x9c\x50\x31\xe8\x21\x09\x6e\x10\xca\x68\xf1\xba\xdb\xf2\xf8\x3d\xde\xb8\x85\x64\x20\xf9\x4c\x98\xc4\xd8\x4e\x1a\xd3\x82\x34\xe4\x6b\xee\xef\x1d\xf0\x71\xa4\x23\xa3\xf5\x6b\x9d\x93\x31\x24\x4c\xc1\xd8\x18\xb4\xea\x18\x0a\xa6\x0d\x0d\x2a\x78\x73\x9a\xd8\xc6\x70\xa5\xbe\xbc\xff\xf8\x72\xff\xa4\x2e\x17\x6f\x97\xde\x8a\x5d\x68\xb5\x60\x6a\x61\x39\x86\xaf\xd4\xae\x9d\x87\x4d\x45\x8d\x48\xbe\xbb\xbe\x8e\xe4\x6c\x6c\x88\xa5\x3f\x08\x81\x28\x44\x18\x7a\x3b\x69\xa8\xe0\x4f\x30\x8e\x3c\xf4\xd8\xe6\x88\x0e\x07\x9b\x61\x98\x1e\xbd\x19\x40\x55\x36\x44\xfd\xda\x96\xe1\x1c\x24\xb0\x3c\xb9\x63\x5c\xfc\x44\x10\x9a\x96\xcf\xe9\x4e\x99\x02\x9d\x8d\xfa\x0d\x55\x26\xa5\x03\xad\xfe\x3f\x77\x8d\x7b\xaf\x7d\xbf\x2e\xb6\xb0\xe7\x8b\x3b\xf5\xf5\xdb\xef\x89\x4d\xdd\x7d\xa5\x7f\xfd\xba\x49\xbd\x2b\xf8\xa6\x3f\xe3\x55\x2d\x15\x5e\xdd\xdc\x8e\xe0\x66\x75\xbb\xb8\x7a\x37\x9f\xcd\x67\xd3\xc7\xfb\x81\x76\x69\x3e\xfb\x13\x00\x00\xff\xff\xaa\x58\xdc\xcf\xcf\x02\x00\x00")

func migrationsSqlTests4_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests4_testSql,
		"migrations/sql/tests/4_test.sql",
	)
}

func migrationsSqlTests4_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests4_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/4_test.sql", size: 719, mode: os.FileMode(438), modTime: time.Unix(1540933309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests5_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\x4d\x6b\x1b\x31\x10\xbd\x1b\xfc\x1f\x44\x2e\x4e\xe8\x9a\xb4\x06\xe7\x90\x9e\x0a\xcd\x21\x50\x52\x68\x92\x5e\x4a\x11\xb2\x34\xab\x1d\x5b\xab\x51\x35\xb3\xb8\x6e\xb7\xff\xbd\x68\xd7\x1f\x4b\x2e\xcb\x7b\x6f\x34\x33\xef\x0d\xbb\x5c\xaa\x77\x2d\xfa\x6c\x04\xd4\x6b\x9a\xcf\x1e\x9f\x9e\x1f\xbe\xbd\xa8\xc7\xa7\x97\xaf\xaa\x39\xb8\x6c\xb4\x0d\x08\x51\xd4\x35\xba\x4a\x8d\x58\x47\xd3\xc2\x99\x30\xd8\x0c\x52\xa9\x0c\x0e\x33\x58\xd1\x5d\x46\xae\x94\xcf\x26\x8a\x96\x43\x02\x2e\x35\x4e\x14\x19\x4e\x9c\x2d\x25\xa8\x14\xed\x23\xe4\x4a\x25\x0a\x68\x0f\xa5\xaf\x52\x42\x3c\x82\xe3\xf4\x01\x07\xf2\x74\x54\x29\x8a\xb1\xc2\x6f\xb6\x6b\xf8\x9d\x30\x03\x6b\x23\x95\x62\xb0\x42\x59\xa3\x83\x28\x58\x23\xe4\xb1\x75\xbb\xdf\xf1\xf8\x3d\x6d\xda\x41\xd4\x10\x5d\x22\x8c\xa2\x4d\x27\x8d\x6e\x41\x1a\x72\xc5\xef\xaf\x0e\xf8\x14\xe5\xc4\x68\xb3\x2d\xf9\x18\x7d\xc4\xe8\xb5\x09\xbe\x52\x1d\x43\xc6\x58\xd3\xa0\x82\xd3\xe7\xa4\x26\xf8\x1b\xf5\xfd\xd3\x97\xd7\x87\x67\x75\xbd\x58\x2f\x9d\x11\xb3\xa8\xd4\x82\xa9\x85\xe5\x68\xbe\x50\xb3\xb1\x0e\xea\x82\x1a\x91\x74\x7f\x7b\x1b\xc8\x9a\xd0\x10\x4b\x7f\x14\x3c\x91\x0f\x30\xbc\xed\xa4\xa1\x8c\x7f\x40\x5b\x72\xd0\x63\x9b\x02\x5a\x1c\xc6\x0c\x61\x7a\x74\x7a\x00\x45\xa9\x89\xfa\x8d\xc9\x43\x1f\x44\x30\x3c\xd9\x31\x1e\x7c\x22\x08\x4d\xcb\x17\x77\x67\x4f\x9e\x2e\x83\xfa\x9a\x0a\x7b\x7f\xa9\x8f\x17\x2f\x2f\xfe\x5e\xed\xe0\xc0\x57\xf7\xea\xc7\xcf\x7f\x93\x01\xe5\xea\x85\x46\x8a\x30\x91\xbb\x8c\x1f\xfa\x0b\x5e\x95\x52\xe6\xd5\xfa\x6e\x04\xeb\xd5\xdd\xe2\xe6\xe3\x7c\x36\x9f\x4d\xff\xd2\xcf\xb4\x8f\xf3\xd9\xff\x00\x00\x00\xff\xff\x6b\x49\xff\x4b\xb8\x02\x00\x00")

func migrationsSqlTests5_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests5_testSql,
		"migrations/sql/tests/5_test.sql",
	)
}

func migrationsSqlTests5_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests5_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/5_test.sql", size: 696, mode: os.FileMode(438), modTime: time.Unix(1540933309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests6_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\x4b\x6b\x1b\x31\x10\xbe\x1b\xfc\x1f\x44\x2e\x4e\xe8\x9a\xb4\x86\xe4\x90\x9e\x0a\xcd\x21\x50\x52\x68\x92\x5e\x4a\x11\xb2\x34\xde\x9d\x58\xab\x51\x35\xb3\xb8\x6e\xb7\xff\xbd\x48\xf2\x63\xc9\x65\xf9\x1e\x9a\xc7\xa7\xd5\x72\xa9\xde\xf5\xd8\x26\x23\xa0\x5e\xe2\x7c\xf6\xf0\xf8\x74\xff\xed\x59\x3d\x3c\x3e\x7f\x55\xdd\xde\x25\xa3\xad\x47\x08\xa2\x2e\xd1\x35\xaa\x62\x1d\x4c\x0f\x27\xc2\x60\x13\x48\xa3\x12\x38\x4c\x60\x45\x0f\x09\xb9\x51\x6d\x32\x41\xb4\xec\x23\x70\xf6\x38\x52\x60\x38\x72\xb6\x14\xa1\x51\xb4\x0b\x90\x1a\x15\xc9\xa3\xdd\xe7\xba\x46\x09\x71\x05\x87\xee\x05\x7b\x6a\xe9\xa0\x52\x10\x63\x85\xdf\x4c\xd7\xf0\x3b\x62\x02\xd6\x46\x1a\xc5\x60\x85\x92\x46\x07\x41\x70\x83\x90\x6a\xe9\xeb\x6e\xcb\xf5\x7b\x9c\xb4\x85\xa0\x21\xb8\x48\x18\x44\x9b\x41\x3a\xdd\x83\x74\xe4\xf2\xbe\xbf\x06\xe0\x63\x94\x23\xa3\xf5\x6b\xce\xc7\xd8\x06\x0c\xad\x36\xbe\x6d\xd4\xc0\x90\x30\x6c\xa8\xa8\xe0\xf4\x29\x69\x71\x79\xa8\x25\x39\xf6\x95\xfa\xfe\xe9\xcb\xcb\xfd\x93\xba\x5c\xdc\x2e\x9d\x11\xb3\x68\xd4\x82\xa9\x87\x65\x8d\x92\xa9\x59\x5b\x07\x9b\x8c\x3a\x91\x78\x77\x7d\xed\xc9\x1a\xdf\x11\xcb\x78\x10\x5a\xa2\xd6\x43\x39\x3b\x48\x47\x09\xff\x80\xb6\xe4\x60\xc4\x3e\x7a\xb4\x58\xda\x94\x68\x23\x3a\x5d\x40\x56\x36\x44\xe3\xda\xa4\x52\x07\x01\x0c\x4f\x66\xd4\xeb\x9f\x08\x42\x53\xfb\xbc\xdd\x69\xa7\x96\xce\x8d\xc6\x0d\x65\xf6\xfe\xec\xd7\xfb\xcf\x27\xfe\x5e\x6c\x61\xcf\x17\x77\xea\xc7\xcf\x7f\x93\x06\xf9\x1f\x64\x1a\x28\xc0\x44\x1e\x12\x7e\x18\xcf\x78\x95\xad\xc4\xab\x9b\xdb\x0a\x6e\x56\x05\xc4\x61\xed\xd1\x2e\xae\x3e\xce\x67\xf3\xd9\xf4\xf5\x7e\xa6\x5d\x98\xcf\xfe\x07\x00\x00\xff\xff\xa6\xaf\xff\xfb\xd0\x02\x00\x00")

func migrationsSqlTests6_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests6_testSql,
		"migrations/sql/tests/6_test.sql",
	)
}

func migrationsSqlTests6_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests6_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/6_test.sql", size: 720, mode: os.FileMode(438), modTime: time.Unix(1540933309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests7_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6b\x1b\x31\x10\xbd\x1b\xfc\x1f\x44\x2e\x4e\xa8\x4c\x5a\x43\x5a\x48\x4f\x85\xe6\x10\x28\x29\x34\x49\x2f\xa5\x08\x59\x1a\x6b\x27\xd6\x6a\x54\xcd\x2c\xae\xdb\xed\x7f\x2f\xda\xf5\xc7\xd2\x53\x2f\xcb\x7b\x6f\xf4\x66\xe6\x31\xbb\x5c\xaa\x57\x2d\x86\x62\x05\xd4\x73\x9e\xcf\xee\x1f\x1e\xef\xbe\x3c\xa9\xfb\x87\xa7\xcf\xaa\xd9\xfb\x62\x8d\x8b\x08\x49\xd4\x25\x7a\xad\x6c\x8c\xb4\x03\x6f\x1c\x15\x36\x54\x30\x60\x62\xad\xc6\x17\x26\xd9\x16\x4e\x84\xc1\x15\x10\xad\x0a\x78\x2c\xe0\xc4\x74\x05\x59\xab\x50\x6c\x12\x23\xfb\x0c\x5c\x6b\x9c\x29\x31\x1c\x39\x3b\xca\xa0\x15\xed\x12\x14\xad\x32\x45\x74\xfb\xea\xd3\x4a\x88\x47\x70\xe8\x3e\xe0\x48\x81\x0e\x2a\x25\xb1\x4e\xf8\x9f\xe9\x06\x7e\x66\x2c\xc0\xc6\x8a\x56\x0c\x4e\xa8\x18\xf4\x90\x04\x37\x08\x65\xb4\xbe\xec\xb6\x3c\x7e\x8f\x93\xb6\x90\x0c\x24\x9f\x09\x93\x18\xdb\x49\x63\x5a\x90\x86\x7c\xdd\xf7\x47\x07\x7c\x8c\x72\x64\xb4\x7e\xa9\xf9\x18\x43\xc2\x14\x8c\x8d\x41\xab\x8e\xa1\x60\xda\xd0\xa0\x82\x37\xa7\xa4\x43\x95\xbb\xd1\x52\x63\x5f\xa9\xaf\x1f\x3e\x3d\xdf\x3d\xaa\xcb\xc5\xbb\xa5\xb7\x62\x17\x5a\x2d\x1a\x91\x7c\x7b\x7d\x1d\xc9\xd9\xd8\x10\x4b\x7f\x10\x02\x51\x88\x50\x5f\x30\xb5\xb0\x1c\xc3\x56\x6a\xd7\xce\xc3\xe6\xff\xac\x35\x12\x15\xfc\x05\xc6\x91\x87\x1e\xdb\x1c\xd1\xe1\xd0\x66\x08\xdf\xa3\x37\x03\xa8\xca\x86\xa8\x5f\xdb\x32\xf8\x20\x81\xe5\xc9\x8c\xf1\x40\x13\x41\x68\x5a\x3e\x6f\x77\xda\x29\xd0\xb9\x51\xbf\xa1\xca\x5e\x9f\xeb\xe3\x85\xea\x8b\xdf\x17\x5b\xd8\xf3\xc5\xad\xfa\xf6\xfd\xcf\xa4\x41\xbd\x52\xa5\x89\x12\x4c\xe4\xae\xe0\x9b\xfe\x8c\x57\xb5\x54\x78\x75\xf3\x76\x04\x37\xab\x01\xe4\x6e\x1d\xd1\x2d\xae\xde\xcf\x67\xf3\xd9\xf4\xaf\xff\x48\xbb\x34\x9f\xfd\x0d\x00\x00\xff\xff\x4e\x25\x98\xd9\x08\x03\x00\x00")

func migrationsSqlTests7_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests7_testSql,
		"migrations/sql/tests/7_test.sql",
	)
}

func migrationsSqlTests7_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests7_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/7_test.sql", size: 776, mode: os.FileMode(438), modTime: time.Unix(1540933309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests8_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6b\x1b\x31\x10\xbd\x1b\xfc\x1f\x44\x2e\x4e\xa8\x4c\x5a\x43\x4a\x49\x4f\x85\xe6\x10\x28\x29\x34\x49\x2f\xa5\x08\x59\x1a\x6b\x27\xd6\x6a\x54\xcd\x2c\xae\xdb\xed\x7f\x2f\xda\xf5\xc7\xd2\x53\x2f\xcb\x7b\x6f\xf4\x66\xe6\x31\xbb\x5c\xaa\x57\x2d\x86\x62\x05\xd4\x73\x9e\xcf\xee\x1f\x1e\xef\xbe\x3c\xa9\xfb\x87\xa7\xcf\xaa\xd9\xfb\x62\x8d\x8b\x08\x49\xd4\x25\x7a\xad\x6c\x8c\xb4\x03\x6f\x1c\x15\x36\x54\x30\x60\x62\xad\xc6\x17\x26\xd9\x16\x4e\x84\xc1\x15\x10\xad\x0a\x78\x2c\xe0\xc4\x74\x05\x59\xab\x50\x6c\x12\x23\xfb\x0c\x5c\x6b\x9c\x29\x31\x1c\x39\x3b\xca\xa0\x15\xed\x12\x14\xad\x32\x45\x74\xfb\xea\xd3\x4a\x88\x47\x70\xe8\x3e\xe0\x48\x81\x0e\x2a\x25\xb1\x4e\xf8\x9f\xe9\x06\x7e\x66\x2c\xc0\xc6\x8a\x56\x0c\x4e\xa8\x18\xf4\x90\x04\x37\x08\x65\xb4\xbe\xec\xb6\x3c\x7e\x8f\x93\xb6\x90\x0c\x24\x9f\x09\x93\x18\xdb\x49\x63\x5a\x90\x86\x7c\xdd\xf7\x47\x07\x7c\x8c\x72\x64\xb4\x7e\xa9\xf9\x18\x43\xc2\x14\x8c\x8d\x41\xab\x8e\xa1\x60\xda\xd0\xa0\x82\x37\xa7\xa4\x43\x95\xbb\xd1\x52\x63\x5f\xa9\xaf\x1f\x3e\x3d\xdf\x3d\xaa\xcb\xc5\xbb\xa5\xb7\x62\x17\x5a\x2d\x1a\x91\x7c\x7b\x7d\x1d\xc9\xd9\xd8\x10\x4b\x7f\x10\x02\x51\x88\x50\x5f\x30\xb5\xb0\x1c\xc3\x56\x6a\xd7\xce\xc3\xe6\xff\xac\x35\x12\x15\xfc\x05\xc6\x91\x87\x1e\xdb\x1c\xd1\xe1\xd0\x66\x08\xdf\xa3\x37\x03\xa8\xca\x86\xa8\x5f\xdb\x32\xf8\x20\x81\xe5\xc9\x8c\xf1\x40\x13\x41\x68\x5a\x3e\x6f\x77\xda\x29\xd0\xb9\x51\xbf\xa1\xca\x5e\x9f\xeb\xe3\x85\xea\x8b\xdf\x17\x5b\xd8\xf3\xc5\xad\xfa\xf6\xfd\xcf\xa4\x41\xbd\x52\xa5\x89\x12\x4c\xe4\xae\xe0\x9b\xfe\x8c\x57\xb5\x54\x78\x75\xf3\x76\x04\x37\xab\x01\xe4\x6e\x1d\xd1\x2d\xae\xde\xcf\x67\xf3\xd9\xf4\xaf\xff\x48\xbb\x34\x9f\xfd\x0d\x00\x00\xff\xff\x84\x5b\xec\x0c\x08\x03\x00\x00")

func migrationsSqlTests8_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests8_testSql,
		"migrations/sql/tests/8_test.sql",
	)
}

func migrationsSqlTests8_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests8_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/8_test.sql", size: 776, mode: os.FileMode(438), modTime: time.Unix(1540933309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests9_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6b\x1b\x31\x10\xbd\x1b\xfc\x1f\x44\x2e\x4e\xa8\x4c\x5a\x43\x0a\x4d\x4f\x85\xe6\x10\x28\x29\x34\x49\x2f\xa5\x08\x59\x1a\x6b\x27\xd6\x6a\x54\xcd\x2c\xae\xdb\xed\x7f\x2f\xda\xf5\xc7\xd2\x53\x2f\xcb\x7b\x6f\xf4\x66\xe6\x31\xbb\x5c\xaa\x57\x2d\x86\x62\x05\xd4\x73\x9e\xcf\xee\x1f\x1e\xef\xbe\x3c\xa9\xfb\x87\xa7\xcf\xaa\xd9\xfb\x62\x8d\x8b\x08\x49\xd4\x25\x7a\xad\x6c\x8c\xb4\x03\x6f\x1c\x15\x36\x54\x30\x60\x62\xad\xc6\x17\x26\xd9\x16\x4e\x84\xc1\x15\x10\xad\x0a\x78\x2c\xe0\xc4\x74\x05\x59\xab\x50\x6c\x12\x23\xfb\x0c\x5c\x6b\x9c\x29\x31\x1c\x39\x3b\xca\xa0\x15\xed\x12\x14\xad\x32\x45\x74\xfb\xea\xd3\x4a\x88\x47\x70\xe8\x3e\xe0\x48\x81\x0e\x2a\x25\xb1\x4e\xf8\x9f\xe9\x06\x7e\x66\x2c\xc0\xc6\x8a\x56\x0c\x4e\xa8\x18\xf4\x90\x04\x37\x08\x65\xb4\xbe\xec\xb6\x3c\x7e\x8f\x93\xb6\x90\x0c\x24\x9f\x09\x93\x18\xdb\x49\x63\x5a\x90\x86\x7c\xdd\xf7\x47\x07\x7c\x8c\x72\x64\xb4\x7e\xa9\xf9\x18\x43\xc2\x14\x8c\x8d\x41\xab\x8e\xa1\x60\xda\xd0\xa0\x82\x37\xa7\xa4\x43\x95\xbb\xd1\x52\x63\x5f\xa9\xaf\x1f\x3e\x3d\xdf\x3d\xaa\xcb\xc5\xbb\xa5\xb7\x62\x17\x5a\x2d\x1a\x91\x7c\x7b\x7d\x1d\xc9\xd9\xd8\x10\x4b\x7f\x10\x02\x51\x88\x50\x5f\x30\xb5\xb0\x1c\xc3\x56\x6a\xd7\xce\xc3\xe6\xff\xac\x35\x12\x15\xfc\x05\xc6\x91\x87\x1e\xdb\x1c\xd1\xe1\xd0\x66\x08\xdf\xa3\x37\x03\xa8\xca\x86\xa8\x5f\xdb\x32\xf8\x20\x81\xe5\xc9\x8c\xf1\x40\x13\x41\x68\x5a\x3e\x6f\x77\xda\x29\xd0\xb9\x51\xbf\xa1\xca\x5e\x9f\xeb\xe3\x85\xea\x8b\xdf\x17\x5b\xd8\xf3\xc5\xad\xfa\xf6\xfd\xcf\xa4\x41\xbd\x52\xa5\x89\x12\x4c\xe4\xae\xe0\x9b\xfe\x8c\x57\xb5\x54\x78\x75\xf3\x76\x04\x37\xab\x01\xe4\x6e\x1d\xd1\x2d\xae\xde\xcf\x67\xf3\xd9\xf4\xaf\xff\x48\xbb\x34\x9f\xfd\x0d\x00\x00\xff\xff\xdc\xf8\x5c\x53\x08\x03\x00\x00")

func migrationsSqlTests9_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests9_testSql,
		"migrations/sql/tests/9_test.sql",
	)
}

func migrationsSqlTests9_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests9_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/9_test.sql", size: 776, mode: os.FileMode(438), modTime: time.Unix(1540933309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migrations/sql/shared/.gitkeep":   migrationsSqlSharedGitkeep,
	"migrations/sql/shared/1.sql":      migrationsSqlShared1Sql,
	"migrations/sql/shared/10.sql":     migrationsSqlShared10Sql,
	"migrations/sql/shared/2.sql":      migrationsSqlShared2Sql,
	"migrations/sql/shared/3.sql":      migrationsSqlShared3Sql,
	"migrations/sql/shared/5.sql":      migrationsSqlShared5Sql,
	"migrations/sql/shared/6.sql":      migrationsSqlShared6Sql,
	"migrations/sql/shared/7.sql":      migrationsSqlShared7Sql,
	"migrations/sql/mysql/.gitkeep":    migrationsSqlMysqlGitkeep,
	"migrations/sql/mysql/11.sql":      migrationsSqlMysql11Sql,
	"migrations/sql/mysql/4.sql":       migrationsSqlMysql4Sql,
	"migrations/sql/mysql/8.sql":       migrationsSqlMysql8Sql,
	"migrations/sql/mysql/9.sql":       migrationsSqlMysql9Sql,
	"migrations/sql/postgres/.gitkeep": migrationsSqlPostgresGitkeep,
	"migrations/sql/postgres/11.sql":   migrationsSqlPostgres11Sql,
	"migrations/sql/postgres/4.sql":    migrationsSqlPostgres4Sql,
	"migrations/sql/postgres/8.sql":    migrationsSqlPostgres8Sql,
	"migrations/sql/postgres/9.sql":    migrationsSqlPostgres9Sql,
	"migrations/sql/tests/.gitkeep":    migrationsSqlTestsGitkeep,
	"migrations/sql/tests/10_test.sql": migrationsSqlTests10_testSql,
	"migrations/sql/tests/11_test.sql": migrationsSqlTests11_testSql,
	"migrations/sql/tests/1_test.sql":  migrationsSqlTests1_testSql,
	"migrations/sql/tests/2_test.sql":  migrationsSqlTests2_testSql,
	"migrations/sql/tests/3_test.sql":  migrationsSqlTests3_testSql,
	"migrations/sql/tests/4_test.sql":  migrationsSqlTests4_testSql,
	"migrations/sql/tests/5_test.sql":  migrationsSqlTests5_testSql,
	"migrations/sql/tests/6_test.sql":  migrationsSqlTests6_testSql,
	"migrations/sql/tests/7_test.sql":  migrationsSqlTests7_testSql,
	"migrations/sql/tests/8_test.sql":  migrationsSqlTests8_testSql,
	"migrations/sql/tests/9_test.sql":  migrationsSqlTests9_testSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"migrations": &bintree{nil, map[string]*bintree{
		"sql": &bintree{nil, map[string]*bintree{
			"mysql": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{migrationsSqlMysqlGitkeep, map[string]*bintree{}},
				"11.sql":   &bintree{migrationsSqlMysql11Sql, map[string]*bintree{}},
				"4.sql":    &bintree{migrationsSqlMysql4Sql, map[string]*bintree{}},
				"8.sql":    &bintree{migrationsSqlMysql8Sql, map[string]*bintree{}},
				"9.sql":    &bintree{migrationsSqlMysql9Sql, map[string]*bintree{}},
			}},
			"postgres": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{migrationsSqlPostgresGitkeep, map[string]*bintree{}},
				"11.sql":   &bintree{migrationsSqlPostgres11Sql, map[string]*bintree{}},
				"4.sql":    &bintree{migrationsSqlPostgres4Sql, map[string]*bintree{}},
				"8.sql":    &bintree{migrationsSqlPostgres8Sql, map[string]*bintree{}},
				"9.sql":    &bintree{migrationsSqlPostgres9Sql, map[string]*bintree{}},
			}},
			"shared": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{migrationsSqlSharedGitkeep, map[string]*bintree{}},
				"1.sql":    &bintree{migrationsSqlShared1Sql, map[string]*bintree{}},
				"10.sql":   &bintree{migrationsSqlShared10Sql, map[string]*bintree{}},
				"2.sql":    &bintree{migrationsSqlShared2Sql, map[string]*bintree{}},
				"3.sql":    &bintree{migrationsSqlShared3Sql, map[string]*bintree{}},
				"5.sql":    &bintree{migrationsSqlShared5Sql, map[string]*bintree{}},
				"6.sql":    &bintree{migrationsSqlShared6Sql, map[string]*bintree{}},
				"7.sql":    &bintree{migrationsSqlShared7Sql, map[string]*bintree{}},
			}},
			"tests": &bintree{nil, map[string]*bintree{
				".gitkeep":    &bintree{migrationsSqlTestsGitkeep, map[string]*bintree{}},
				"10_test.sql": &bintree{migrationsSqlTests10_testSql, map[string]*bintree{}},
				"11_test.sql": &bintree{migrationsSqlTests11_testSql, map[string]*bintree{}},
				"1_test.sql":  &bintree{migrationsSqlTests1_testSql, map[string]*bintree{}},
				"2_test.sql":  &bintree{migrationsSqlTests2_testSql, map[string]*bintree{}},
				"3_test.sql":  &bintree{migrationsSqlTests3_testSql, map[string]*bintree{}},
				"4_test.sql":  &bintree{migrationsSqlTests4_testSql, map[string]*bintree{}},
				"5_test.sql":  &bintree{migrationsSqlTests5_testSql, map[string]*bintree{}},
				"6_test.sql":  &bintree{migrationsSqlTests6_testSql, map[string]*bintree{}},
				"7_test.sql":  &bintree{migrationsSqlTests7_testSql, map[string]*bintree{}},
				"8_test.sql":  &bintree{migrationsSqlTests8_testSql, map[string]*bintree{}},
				"9_test.sql":  &bintree{migrationsSqlTests9_testSql, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
