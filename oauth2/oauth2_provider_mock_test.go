// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/ory/fosite (interfaces: OAuth2Provider)

package oauth2_test

import (
	context "context"
	http "net/http"

	gomock "github.com/golang/mock/gomock"
	fosite "github.com/ory/fosite"
)

// Mock of OAuth2Provider interface
type MockOAuth2Provider struct {
	ctrl     *gomock.Controller
	recorder *_MockOAuth2ProviderRecorder
}

// Recorder for MockOAuth2Provider (not exported)
type _MockOAuth2ProviderRecorder struct {
	mock *MockOAuth2Provider
}

func NewMockOAuth2Provider(ctrl *gomock.Controller) *MockOAuth2Provider {
	mock := &MockOAuth2Provider{ctrl: ctrl}
	mock.recorder = &_MockOAuth2ProviderRecorder{mock}
	return mock
}

func (_m *MockOAuth2Provider) EXPECT() *_MockOAuth2ProviderRecorder {
	return _m.recorder
}

func (_m *MockOAuth2Provider) IntrospectToken(_param0 context.Context, _param1 string, _param2 fosite.TokenType, _param3 fosite.Session, _param4 ...string) (fosite.TokenType, fosite.AccessRequester, error) {
	_s := []interface{}{_param0, _param1, _param2, _param3}
	for _, _x := range _param4 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "IntrospectToken", _s...)
	ret0, _ := ret[0].(fosite.TokenType)
	ret1, _ := ret[1].(fosite.AccessRequester)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockOAuth2ProviderRecorder) IntrospectToken(arg0, arg1, arg2, arg3 interface{}, arg4 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1, arg2, arg3}, arg4...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "IntrospectToken", _s...)
}

func (_m *MockOAuth2Provider) NewAccessRequest(_param0 context.Context, _param1 *http.Request, _param2 fosite.Session) (fosite.AccessRequester, error) {
	ret := _m.ctrl.Call(_m, "NewAccessRequest", _param0, _param1, _param2)
	ret0, _ := ret[0].(fosite.AccessRequester)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockOAuth2ProviderRecorder) NewAccessRequest(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewAccessRequest", arg0, arg1, arg2)
}

func (_m *MockOAuth2Provider) NewAccessResponse(_param0 context.Context, _param1 fosite.AccessRequester) (fosite.AccessResponder, error) {
	ret := _m.ctrl.Call(_m, "NewAccessResponse", _param0, _param1)
	ret0, _ := ret[0].(fosite.AccessResponder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockOAuth2ProviderRecorder) NewAccessResponse(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewAccessResponse", arg0, arg1)
}

func (_m *MockOAuth2Provider) NewAuthorizeRequest(_param0 context.Context, _param1 *http.Request) (fosite.AuthorizeRequester, error) {
	ret := _m.ctrl.Call(_m, "NewAuthorizeRequest", _param0, _param1)
	ret0, _ := ret[0].(fosite.AuthorizeRequester)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockOAuth2ProviderRecorder) NewAuthorizeRequest(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewAuthorizeRequest", arg0, arg1)
}

func (_m *MockOAuth2Provider) NewAuthorizeResponse(_param0 context.Context, _param1 fosite.AuthorizeRequester, _param2 fosite.Session) (fosite.AuthorizeResponder, error) {
	ret := _m.ctrl.Call(_m, "NewAuthorizeResponse", _param0, _param1, _param2)
	ret0, _ := ret[0].(fosite.AuthorizeResponder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockOAuth2ProviderRecorder) NewAuthorizeResponse(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewAuthorizeResponse", arg0, arg1, arg2)
}

func (_m *MockOAuth2Provider) NewIntrospectionRequest(_param0 context.Context, _param1 *http.Request, _param2 fosite.Session) (fosite.IntrospectionResponder, error) {
	ret := _m.ctrl.Call(_m, "NewIntrospectionRequest", _param0, _param1, _param2)
	ret0, _ := ret[0].(fosite.IntrospectionResponder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockOAuth2ProviderRecorder) NewIntrospectionRequest(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewIntrospectionRequest", arg0, arg1, arg2)
}

func (_m *MockOAuth2Provider) NewRevocationRequest(_param0 context.Context, _param1 *http.Request) error {
	ret := _m.ctrl.Call(_m, "NewRevocationRequest", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockOAuth2ProviderRecorder) NewRevocationRequest(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewRevocationRequest", arg0, arg1)
}

func (_m *MockOAuth2Provider) WriteAccessError(_param0 http.ResponseWriter, _param1 fosite.AccessRequester, _param2 error) {
	_m.ctrl.Call(_m, "WriteAccessError", _param0, _param1, _param2)
}

func (_mr *_MockOAuth2ProviderRecorder) WriteAccessError(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WriteAccessError", arg0, arg1, arg2)
}

func (_m *MockOAuth2Provider) WriteAccessResponse(_param0 http.ResponseWriter, _param1 fosite.AccessRequester, _param2 fosite.AccessResponder) {
	_m.ctrl.Call(_m, "WriteAccessResponse", _param0, _param1, _param2)
}

func (_mr *_MockOAuth2ProviderRecorder) WriteAccessResponse(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WriteAccessResponse", arg0, arg1, arg2)
}

func (_m *MockOAuth2Provider) WriteAuthorizeError(_param0 http.ResponseWriter, _param1 fosite.AuthorizeRequester, _param2 error) {
	_m.ctrl.Call(_m, "WriteAuthorizeError", _param0, _param1, _param2)
}

func (_mr *_MockOAuth2ProviderRecorder) WriteAuthorizeError(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WriteAuthorizeError", arg0, arg1, arg2)
}

func (_m *MockOAuth2Provider) WriteAuthorizeResponse(_param0 http.ResponseWriter, _param1 fosite.AuthorizeRequester, _param2 fosite.AuthorizeResponder) {
	_m.ctrl.Call(_m, "WriteAuthorizeResponse", _param0, _param1, _param2)
}

func (_mr *_MockOAuth2ProviderRecorder) WriteAuthorizeResponse(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WriteAuthorizeResponse", arg0, arg1, arg2)
}

func (_m *MockOAuth2Provider) WriteIntrospectionError(_param0 http.ResponseWriter, _param1 error) {
	_m.ctrl.Call(_m, "WriteIntrospectionError", _param0, _param1)
}

func (_mr *_MockOAuth2ProviderRecorder) WriteIntrospectionError(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WriteIntrospectionError", arg0, arg1)
}

func (_m *MockOAuth2Provider) WriteIntrospectionResponse(_param0 http.ResponseWriter, _param1 fosite.IntrospectionResponder) {
	_m.ctrl.Call(_m, "WriteIntrospectionResponse", _param0, _param1)
}

func (_mr *_MockOAuth2ProviderRecorder) WriteIntrospectionResponse(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WriteIntrospectionResponse", arg0, arg1)
}

func (_m *MockOAuth2Provider) WriteRevocationResponse(_param0 http.ResponseWriter, _param1 error) {
	_m.ctrl.Call(_m, "WriteRevocationResponse", _param0, _param1)
}

func (_mr *_MockOAuth2ProviderRecorder) WriteRevocationResponse(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WriteRevocationResponse", arg0, arg1)
}
